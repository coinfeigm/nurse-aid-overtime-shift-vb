<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>GrapeCity.Win.PluginInputMan</name>
  </assembly>
  <members>
    <member name="T:GrapeCity.Framework.Spread.InputMan.CellType.Forms.ControlBase">
      <summary>表示システムに共通の基本的なウィンドウ制御機能を実装します。</summary>
      <remarks>このクラスは、表示システムにおけるすべてのウィンドウ制御オブジェクトの基礎となります。</remarks>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Forms.ControlBase.#ctor">
      <summary>
        <see cref="T:GrapeCity.Framework.Spread.InputMan.CellType.Forms.ControlBase" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Forms.ControlBase.IsInputChar(System.Char)">
      <summary>文字が、コントロールによって認識される入力文字かどうかを判断します。</summary>
      <param name="charCode">判定する文字を表す<b><see cref="T:System.Char">Char</see></b>値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定された文字は入力文字です。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定された文字は入力文字ではありません。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Forms.ControlBase.IsInputKey(System.Windows.Forms.Keys)">
      <summary>指定されているキーが、コントロールに認識される入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</summary>
      <param name="keyData">System.Windows.Forms.Keys 値の１つ。</param>
      <returns>指定したキーが通常の入力キーである場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Framework.Spread.InputMan.CellType.Forms.FrameworkControl">
      <summary>コントロールに適したいくつかの機能を提供する拡張コントロールを表します。</summary>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Forms.FrameworkControl.#ctor">
      <summary>
        <see cref="T:GrapeCity.Framework.Spread.InputMan.CellType.Forms.FrameworkControl" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Forms.FrameworkControl.CreateAccessibilityInstance">
      <summary>新しいユーザー補助オブジェクトを作成します。</summary>
      <returns>新しい<see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Forms.FrameworkControl.WndProc(System.Windows.Forms.Message@)">
      <summary>ウィンドウメッセージを処理します。</summary>
      <param name="m">処理対象の<b><see cref="T:System.Windows.Forms.Message">Message</see></b>。</param>
    </member>
    <member name="T:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl">
      <summary>論理ツリーを持つことができるコントロールを表します。</summary>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.#ctor">
      <summary>
        <see cref="T:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.DefaultImeMode">
      <summary>コントロールでサポートされるデフォルトの IME（入力メソッドエディタ）モードを取得します。</summary>
      <value>既定のIMEモードを表す<b><see cref="T:System.Windows.Forms.ImeMode">ImeMode</see></b>列挙体。 <list type="table"><listheader><term>DefaultImeModeの値</term><description>説明</description></listheader><item><term><b>-1 - Inherit</b></term><description>親コントロールの IME モードを継承します。</description></item><item><term><b>0 - NoControl</b></term><description>なし (既定)。</description></item><item><term><b>1 - On</b></term><description> IME がオンです。この値は、IME がオンであることを示し、中国語または日本語に固有の文字を入力できることを示します。 この設定は、日本語、簡体字中国語、および繁体字中国語の IME に対してだけ有効です。 </description></item><item><term><b>2 - Off</b></term><description> IME がオフです。このモードは、IME がオフであることを示します。つまり、オブジェクトの動作は英語入力モードと同様になります。 この設定は、日本語、簡体字中国語、および繁体字中国語の IME に対してだけ有効です。 </description></item><item><term><b>3 - Disable</b></term><description> IME が無効になっています。この設定では、ユーザーはキーボードを使用して IME を有効にすることができず、 IME のフローティング ウィンドウは非表示になります。 </description></item><item><term><b>4 - Hiragana</b></term><description>ひらがな DBC。この設定は、日本語 IME に対してだけ有効です。</description></item><item><term><b>5 - Katakana</b></term><description>カタカナ DBC。この設定は、日本語 IME に対してだけ有効です。</description></item><item><term><b>6 - KatakanaHalf</b></term><description>カタカナ SBC。この設定は、日本語 IME に対してだけ有効です。</description></item><item><term><b>7 - AlphaFull</b></term><description>2 バイトの英数字。この設定は、韓国語と日本語の IME に対してだけ有効です。</description></item><item><term><b>8 - Alpha</b></term><description>1 バイトの英数字 (SBC)。この設定は、韓国語と日本語の IME に対してだけ有効です。</description></item><item><term><b>9 - HangulFull</b></term><description>ハングル DBC。この設定は、韓国語 IME に対してだけ有効です。</description></item><item><term><b>10 - Hangul</b></term><description>ハングル SBC。この設定は、韓国語 IME に対してだけ有効です。</description></item></list></value>
    </member>
    <member name="P:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.DesignMode">
      <summary>System.ComponentModel.Component が現在設計モードであるかどうかを示す値を取得します。</summary>
      <value>System.ComponentModel.Component が設計モードである場合は true。それ以外の場合は false。</value>
    </member>
    <member name="P:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.Focused">
      <summary>フィールドが入力フォーカスを保持しているか、していないかを取得します。</summary>
      <value>コントロールにフォーカスがある場合は true。それ以外の場合は false。</value>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.DestroyHandle">
      <summary>コントロールに関連付けられたハンドルを破棄します。</summary>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.Dispose(System.Boolean)">
      <summary>このコントロールと子コントロールが使用しているアンマネージリソースを解放します。オプションで、マネージリソースも解放します。</summary>
      <param name="disposing">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>マネージリソースとアンマネージリソースの両方を解放します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>アンマネージリソースだけを解放します。</description>
          </item>
        </list>
      </param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnCursorChanged(System.EventArgs)">
      <summary>System.Windows.Forms.Control.CursorChanged イベントを発生させます。</summary>
      <param name="e">イベントデータを含む System.EventArgs。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnGotFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.GotFocus" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the KeyDown event.</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>KeyPress イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>KeyUp イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnLostFocus(System.EventArgs)">
      <summary>LostFocusイベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseCaptureChanged(System.EventArgs)">
      <summary>MouseCaptureChanged イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseClick イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.Windows.Forms.MouseEventArgs">MouseEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseDoubleClick イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.Windows.Forms.MouseEventArgs">MouseEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseDown イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.Windows.Forms.MouseEventArgs">MouseEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseEnter(System.EventArgs)">
      <summary>MouseEnter イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.Windows.Forms.MouseEventArgs">MouseEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseHover(System.EventArgs)">
      <summary>MouseHover イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.Windows.Forms.MouseEventArgs">MouseEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseLeave(System.EventArgs)">
      <summary>MouseLeave イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.Windows.Forms.MouseEventArgs">MouseEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseMove イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.Windows.Forms.MouseEventArgs">MouseEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseUp イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.Windows.Forms.MouseEventArgs">MouseEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseWheel イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.Windows.Forms.MouseEventArgs">MouseEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Painted イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.Windows.Forms.PaintEventArgs">PaintEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Framework.Spread.InputMan.CellType.Views.Windows.ElementContainerControl.WndProc(System.Windows.Forms.Message@)">
      <summary>ウィンドウメッセージを処理します。</summary>
      <param name="m">処理対象の<b><see cref="T:System.Windows.Forms.Message">Message</see></b>。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText">
      <summary>代替テキストの設定を表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AlternateText.ForeColor">
      <summary>テキストの色を取得または設定します。</summary>
      <value>代替テキストの前景色を示す <b>Color</b> 値。</value>
      <remarks>このプロパティは、代替テキストが表示されるときの <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.AlternateText.Text" /> の色を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AlternateText.Text">
      <summary>代替テキストを取得または設定します。</summary>
      <value>テキストを示す <b>string</b> 値。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />が表示されるときの表示テキストを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateTextInfo">
      <summary>代替テキストの設定を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.AlternateTextInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateTextInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AlternateTextInfo.ForeColor">
      <summary>代替テキストの色を取得または設定します。</summary>
      <value>代替テキストの前景色を示す <b>Color</b> 値。</value>
      <remarks>このプロパティは、代替テキストが表示されるときの <see cref="P:AlternateText.Text" /> の色を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AlternateTextInfo.Text">
      <summary>代替テキストを取得または設定します。</summary>
      <value>テキストを示す <b>string</b> 値。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> が表示されるときの表示用テキストを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoComplete">
      <summary>オートコンプリートの設定を定義します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.AutoComplete.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AutoComplete" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoComplete.CandidateListItemFont">
      <summary>オートコンプリート候補リストの項目のフォントを取得または設定します。</summary>
      <value>補完文字列の候補リスト内のフォント。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoComplete.HighlightMatchedText">
      <summary>候補リスト内の一致するテキストを強調表示するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see cref="T:System.Boolean" /> 値。候補リスト内の一致するテキストを強調表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoComplete.HighlightStyle">
      <summary>ハイライト表示される検索文字列のスタイルを取得または設定します。</summary>
      <value>ハイライト表示される検索文字列のスタイル。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoComplete.MatchingMode">
      <summary>オートコンプリート機能のマッチングモードを取得または設定します。</summary>
      <value>オートコンプリート機能での文字列のマッチング方法を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode" /> 値の１つ。</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティに指定された値が有効な<see cref="T:GrapeCity.Win.Editors.AutoCompleteMatchingMode" /> 列挙値ではありません。</exception>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyle">
      <summary>オートコンプリートの一致文字列の強調表示スタイルを定義します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyle.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyle" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyle.BackColor">
      <summary>ハイライト表示される検索文字列の背景色を取得または設定します。</summary>
      <value>強調表示される文字列の背景色を示す<see cref="T:System.Drawing.Color" />値。デフォルト値は<see cref="F:System.Drawing.Color.Empty">Color.Empty</see>で、強調表示される文字列の背景が描画されないことを示します。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyle.Font">
      <summary>ハイライト表示される検索文字列のフォントを取得または設定します。</summary>
      <value>強調表示される文字列のフォントを示す <see cref="T:System.Drawing.Color" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyle.ForeColor">
      <summary>ハイライト表示される検索文字列の前景色を取得または設定します。</summary>
      <value>強調表示される文字列の前景色を示す <see cref="T:System.Drawing.Color" /> 値。既定値は <see cref="F:System.Drawing.Color.Empty">Color.Empty</see> で、強調表示される文字列が候補リストと同じ前景色を使用して描画されることを示します。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyleInfo">
      <summary>オートコンプリート機能の使用時に一致した文字列の強調表示スタイルを定義します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyleInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyleInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyleInfo.BackColor">
      <summary>ハイライト表示される検索文字列の背景色を取得または設定します。</summary>
      <value>強調表示される文字列の背景色を示す <see cref="T:System.Drawing.Color" /> 値。既定値は <see cref="F:System.Drawing.Color.Empty">Color.Empty</see> で、強調表示される文字列の背景が描画されないことを示します。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyleInfo.Font">
      <summary>ハイライト表示される検索文字列のフォントを取得または設定します。</summary>
      <value>強調表示される文字列のフォントを示す <see cref="T:System.Drawing.Color" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteHighlightStyleInfo.ForeColor">
      <summary>ハイライト表示される検索文字列の前景色を取得または設定します。</summary>
      <value>強調表示される文字列の前景色を示す <see cref="T:System.Drawing.Color" /> 値。既定値は <see cref="F:System.Drawing.Color.Empty">Color.Empty</see> で、強調表示される文字列が候補リストと同じ前景色を使用して描画されることを示します。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteInfo">
      <summary>オートコンプリートの設定を定義します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteInfo.CandidateListItemFont">
      <summary>オートコンプリート候補リストの項目のフォントを取得または設定します。</summary>
      <value>補完文字列の候補リスト内のフォント。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteInfo.HighlightMatchedText">
      <summary>候補リスト内の一致するテキストを強調表示するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see cref="T:System.Boolean" /> 値。候補リスト内の一致するテキストを強調表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteInfo.HighlightStyle">
      <summary>ハイライト表示される検索文字列のスタイルを取得または設定します。</summary>
      <value>ハイライト表示される検索文字列のスタイル。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteInfo.MatchingMode">
      <summary>オートコンプリート機能のマッチングモードを取得または設定します。</summary>
      <value>オートコンプリート機能での文字列のマッチング方法を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode" /> 値の１つ。</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティに指定された値が有効な<see cref="T:GrapeCity.Win.Editors.AutoCompleteMatchingMode" /> 列挙値ではありません。</exception>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter">
      <summary>フィルタの関連設定を示します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.Enabled">
      <summary>オートフィルタ関数が有効かどうかを示す値を取得または設定します。</summary>
      <value>オートフィルタ関数が有効な場合は<see langword="true" />、それ以外の場合は<see langword="false" />。デフォルト値は<see langword="false" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.Interval">
      <summary>フィルタを実行するまでの時間間隔を取得または設定します。</summary>
      <value>フィルタを実行するまでの時間間隔（ミリ秒単位）。デフォルト値は500ミリ秒です。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">時間間隔がゼロ以下です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MatchingMode">
      <summary>フィルタ文字列と<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MatchingSource" />とのマッチング方法を取得または設定します。</summary>
      <value>フィルタ文字列のマッチングモード。デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.MatchStartWith" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MatchingSource">
      <summary>フィルタ文字列のマッチング対象を取得または設定します。</summary>
      <value>フィルタ文字列とのマッチングに使用するソース。デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.FilterMatchingSource.AllSubItems" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MaxFilteredItems">
      <summary>ドロップダウンウィンドウに表示されるフィルタ条件一致項目の最大数を取得または設定します。</summary>
      <value>表示されるフィルタ条件一致項目の最大数。デフォルト値は0です。</value>
      <remarks>0に設定すると、一致したすべての項目が表示されます。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />がゼロ未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MinimumPrefixLength">
      <summary>フィルタ文字列の最小の長さを取得または設定します。</summary>
      <value>フィルタ文字列の最小の長さ。デフォルト値は1です。</value>
      <remarks>フィルタ文字列の長さが<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MinimumPrefixLength" />以上であるときにのみ、フィルタを自動的に実行できます。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />が0以下です。</exception>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo">
      <summary>フィルタの関連設定を示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.Enabled">
      <summary>オートフィルタ関数が有効かどうかを示す値を取得または設定します。</summary>
      <value>オートフィルタ関数が有効な場合は<see langword="true" />、それ以外の場合は<see langword="false" />。デフォルト値は<see langword="false" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.Interval">
      <summary>フィルタを実行するまでの時間間隔を取得または設定します。</summary>
      <value>フィルタを実行するまでの時間間隔（ミリ秒単位）。デフォルト値は500ミリ秒です。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">時間間隔がゼロ以下です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.MatchingMode">
      <summary>フィルタ文字列と<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MatchingSource" />とのマッチング方法を取得または設定します。</summary>
      <value>フィルタ文字列のマッチングモード。デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.MatchStartWith" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.MatchingSource">
      <summary>フィルタ文字列のマッチング対象を取得または設定します。</summary>
      <value>フィルタ文字列とのマッチングに使用するソース。デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.FilterMatchingSource.AllSubItems" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.MaxFilteredItems">
      <summary>ドロップダウンウィンドウに表示されるフィルタ条件一致項目の最大数を取得または設定します。</summary>
      <value>表示されるフィルタ条件一致項目の最大数。デフォルト値は0です。</value>
      <remarks>0に設定すると、一致したすべての項目が表示されます。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />がゼロ未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.MinimumPrefixLength">
      <summary>フィルタ文字列の最小の長さを取得または設定します。</summary>
      <value>フィルタ文字列の最小の長さ。デフォルト値は1です。</value>
      <remarks>フィルタ文字列の長さが<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.AutoFilter.MinimumPrefixLength" />以上であるときにのみ、フィルタを自動的に実行できます。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />が0以下です。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.AutoFilterInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection">
      <summary>キー/値ペアの基本コレクションを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>
        <b>BaseKeyCollection</b>クラスは、<see cref="T:System.Collections.IEnumerable" />インタフェースと<see cref="T:System.Collections.ICollection" />インタフェースを実装します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Count">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> に含まれるキー／値ペアの数を取得します。</summary>
      <value>項目数を表す<b><see cref="T:System.Int32">Int32</see></b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Item(System.String)">
      <summary>キー文字列を指定してコレクションの項目を取得します。</summary>
      <value>指定した要素のキーを示す <see cref="T:System.String" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Item(System.Int32)">
      <summary>インデックスを指定してコレクションの項目を取得します。</summary>
      <value>指定した要素のインデックスを示す <see cref="T:System.Int32" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.ItemList">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> インスタンスの要素のリストを含む <see cref="T:System.Collections.ICollection" /> を取得します。</summary>
      <value>項目リストを示す <see cref="T:System.Collections.ICollection" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Keys">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> 内のキーを含む <see cref="T:System.String" /> の配列を取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Add(System.String,System.Object)">
      <summary>指定したキーと値を持つ要素を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> の最後に追加します。</summary>
      <param name="key">キー文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
      <param name="value">コレクションに追加する項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <returns>新しく追加された<b><see cref="T:System.Object">Object</see></b>オブジェクトの、 コレクション内のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.AddRange(System.String[],System.Object[])">
      <summary>キー／値ペアの配列の要素を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> の最後に追加します。</summary>
      <param name="keys">キー／値ペアのキーを含む <see cref="T:System.String" /> の配列。</param>
      <param name="values">キー／値ペアの値を含む <see cref="T:System.Object" /> の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Clear">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> からすべての要素を削除します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Contains(System.Object)">
      <summary>要素が <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> に含まれているかどうかを判断します。</summary>
      <param name="value">検索対象の項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定の項目はコレクション内に存在します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定の項目はコレクション内に存在しません。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.ContainsKey(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> に特定のキーが含まれているかどうかを判断します。</summary>
      <param name="key">キー文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定のキー文字列に対応する項目が存在します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定のキー文字列に対応する項目が存在しません。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.ContainsValue(System.Object)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> に特定の値が含まれているかどうかを判断します。</summary>
      <param name="value">検索対象の項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定の値はコレクション内に存在します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定の値はコレクション内に存在しません。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Dispose">
      <summary>オブジェクトによって使用されているリソースを開放します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.GetKey(System.Int32)">
      <summary>コレクションの指定したインデックスにある要素のキーを取得します。</summary>
      <param name="index">0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <returns>インデックスが有効な場合は要素のキー。それ以外の場合は <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.IndexOf(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> 内の指定したキーを持つ要素の０から始まるインデックスを返します。</summary>
      <param name="key">キー文字列を表す<b><see cref="T:System.String">String</see></b></param>
      <returns>キー文字列に対応する項目の、コレクション内での0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.IndexOf(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> を検索し、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> 内の０から始まるインデックスを返します。</summary>
      <param name="value">検索対象の項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <returns>検索対象の項目の、コレクション内での0から始まるインデックスを表す^<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Insert(System.Int32,System.String,System.Object)">
      <summary>指定したキーと値を持つ要素を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> の指定したインデックスに挿入します。</summary>
      <param name="index">コレクション内の挿入位置を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="key">キー文字列を表す<b><see cref="T:System.String">String</see></b></param>
      <param name="value">コレクションに追加する項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.Remove(System.String)">
      <summary>指定したキーを持つ要素を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> から削除します。</summary>
      <param name="key">キー文字列を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection.RemoveAt(System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.BaseKeyCollection" /> の指定したインデックスにある要素を削除します。</summary>
      <param name="index">インデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection">
      <summary>ボタンテキストのコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />クラスの新しいインスタンスを初期化するコンストラクター。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.#ctor(System.String[],System.String[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />クラスの新しいインスタンスを初期化するコンストラクター。</summary>
      <param name="keys">要素のキーを示す<see cref="T:System.String" />の配列。</param>
      <param name="values">要素の値を示す<see cref="T:System.String" />の配列。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.Item(System.String)">
      <summary>指定したキーに従って値を取得します。</summary>
      <value>指定した要素のキーを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.Item(System.Int32)">
      <summary>指定したインデックスに従って値を取得します。</summary>
      <value>指定した要素のインデックスを示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.Add(System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />に項目を追加します。</summary>
      <param name="key">ボタンのキー値。</param>
      <param name="value">ボタンのテキスト文字列。</param>
      <returns>項目インデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.AddRange(System.String[],System.String[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />に複数の項目を追加します。</summary>
      <param name="keys">ボタンのキー値。</param>
      <param name="values">ボタンのテキスト文字列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.Clear">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />のすべての項目をクリアします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.CopyTo(System.String[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />の項目を、<see cref="T:System.String" />型の互換性のある1次元配列の先頭インデックス以降にコピーします。</summary>
      <param name="array">コピー操作のコピー先として使用する<see cref="T:System.String" />の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.CopyTo(System.String[],System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />の項目を、<see cref="T:System.String" />型の互換性のある1次元配列の指定したゼロから始まるインデックス以降にコピーします。</summary>
      <param name="array">コピー操作のコピー先として使用する<see cref="T:System.String" />の配列。</param>
      <param name="arrayIndex">コピー先配列上のコピー開始位置を示す0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.Insert(System.Int32,System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />に項目を挿入します。</summary>
      <param name="index">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />のインデックス値。</param>
      <param name="key">ボタンのキー値。</param>
      <param name="value">ボタンのテキスト文字列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.IsKeyValid(System.String)">
      <summary>キーが有効かどうかをチェックします。</summary>
      <param name="key">ボタンのキーオブジェクト。</param>
      <returns>有効な場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.Remove(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />の項目を削除します。</summary>
      <param name="key">ボタンのキー値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection.RemoveAt(System.Int32)">
      <summary>指定したインデックスに従って項目を削除します。</summary>
      <param name="index">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />でのインデックス。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo">
      <summary>サイドボタンのコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" />クラスの新しいインスタンスを初期化するコンストラクター。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.#ctor(System.String[],System.String[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" />クラスの新しいインスタンスを初期化するコンストラクター。</summary>
      <param name="keys">要素のキーを示す<see cref="T:System.String" />の配列。</param>
      <param name="values">要素の値を示す<see cref="T:System.String" />の配列。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.Item(System.String)">
      <summary>指定したキーに従って値を取得します。</summary>
      <value>指定した要素のキーを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.Item(System.Int32)">
      <summary>指定したインデックスに従って値を取得します。</summary>
      <value>指定した要素のインデックスを示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.Add(System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" />に項目を追加します。</summary>
      <param name="key">ボタンのキー値。</param>
      <param name="value">ボタンのテキスト文字列。</param>
      <returns>項目インデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.AddRange(System.String[],System.String[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" />に複数の項目を追加します。</summary>
      <param name="keys">ボタンのキー値。</param>
      <param name="values">ボタンのテキスト文字列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.CopyTo(System.String[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" />の項目を、<see cref="T:System.String" />型の互換性のある1次元配列の先頭インデックス以降にコピーします。</summary>
      <param name="array">コピー操作のコピー先として使用する<see cref="T:System.String" />の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.CopyTo(System.String[],System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" />の項目を、<see cref="T:System.String" />型の互換性のある1次元配列の指定したゼロから始まるインデックス以降にコピーします。</summary>
      <param name="array">コピー操作のコピー先として使用する<see cref="T:System.String" />の配列。</param>
      <param name="arrayIndex">コピー先配列上のコピー開始位置を示す0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.Insert(System.Int32,System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" />に項目を挿入します。</summary>
      <param name="index">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo" />のインデックス値。</param>
      <param name="key">ボタンのキー値。</param>
      <param name="value">ボタンのテキスト文字列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollectionInfo.IsKeyValid(System.String)">
      <summary>キーが有効かどうかをチェックします。</summary>
      <param name="key">ボタンのキーオブジェクト。</param>
      <returns>有効な場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection">
      <summary>"ButtonMapping"設定を管理するコレクションクラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />クラスの新しいインスタンスを初期化するコンストラクター。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.#ctor(System.String[],System.String[])">
      <summary>指定されたデータを使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />クラスの新しいインスタンスを初期化するコンストラクター。</summary>
      <param name="keys">項目のキーを示す<see cref="T:System.String" />の配列。</param>
      <param name="buttonKeys">ボタンのキーを示す<see cref="T:System.String" />の配列。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.Item(System.Windows.Forms.Keys)">
      <summary>指定したキーに従ってキーを取得します。</summary>
      <value>特定のキーを示す<see cref="T:System.Windows.Forms.Keys" />インスタンス。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.Item(System.Int32)">
      <summary>指定したインデックスに従ってキーを取得します。</summary>
      <value>特定のインデックスを示す<see cref="T:System.Int32" />インスタンス。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.Keys">
      <summary>キーオブジェクトを取得します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.Keys" />の配列。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.Add(System.Windows.Forms.Keys,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />に項目を追加します。</summary>
      <param name="key">特定のキーを示す<see cref="T:System.Windows.Forms.Keys" />値。</param>
      <param name="buttonKey">ボタンのキーを示す<see cref="T:System.String" />値。</param>
      <returns>項目のインデックスを示す<see cref="T:System.Int32" />値。</returns>
      <exception cref="T:System.ArgumentNullException">
        <i>buttonKey</i>を<see langword="null" />または<see cref="F:System.String.Empty" />にすることはできません。</exception>
      <exception cref="T:System.ArgumentException">
        <i>buttonKey</i>が電卓の正しいボタンキーではありません。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ButtonKeys" />プロパティからすべてのボタンキーを取得できます。</exception>
      <exception cref="T:System.ArgumentException">同じ<i>key</i>がすでに追加されています。別のキーに変更してください。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.AddRange(System.Windows.Forms.Keys[],System.String[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />に複数の項目を追加します。</summary>
      <param name="keys">特定のボタンを示す<see cref="T:System.Windows.Forms.Keys" />の配列。</param>
      <param name="buttonKeys">ボタンのキーを示す<see cref="T:System.String" />の配列。</param>
      <exception cref="T:System.ArgumentException">
        <i>keys</i>配列と<i>buttonKeys</i>配列は長さが同じである必要があります。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.Clone">
      <summary>現在のインスタンスのコピーである新しい<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />を作成します。</summary>
      <returns>このインスタンスのコピーである新しい<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.CopyTo(System.String[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />の項目を、<see cref="T:System.String" />型の互換性のある1次元配列の先頭インデックス以降にコピーします。</summary>
      <param name="array">コピー操作のコピー先として使用する<see cref="T:System.String" />の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.CopyTo(System.String[],System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />の項目を、<see cref="T:System.String" />型の互換性のある1次元配列の指定したゼロから始まるインデックス以降にコピーします。</summary>
      <param name="array">コピー操作のコピー先として使用する<see cref="T:System.String" />の配列。</param>
      <param name="arrayIndex">コピー先配列上のコピー開始位置を示す0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.Insert(System.Int32,System.Windows.Forms.Keys,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />に項目を挿入します。</summary>
      <param name="index">キーを挿入するインデックス。</param>
      <param name="key">ボタンのキーを示す<see cref="T:System.Windows.Forms.Keys" />値。</param>
      <param name="buttonKey">ボタンの名前を示す<see cref="T:System.String" />値。</param>
      <exception cref="T:System.ArgumentNullException">
        <i>buttonKey</i>を<see langword="null" />または<b>string.Empty</b>にすることはできません。</exception>
      <exception cref="T:System.ArgumentException">
        <i>buttonKey</i>が電卓の正しいボタンキーではありません。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ButtonKeys" />プロパティからすべてのキーを取得できます。</exception>
      <exception cref="T:System.ArgumentException">同じ<i>key</i>がすでに追加されています。別のキーに変更してください。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection.Remove(System.Windows.Forms.Keys)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />からキーを削除します。</summary>
      <param name="key">削除するキー値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCalculator" />で使用されるボタンのスタイルを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.#ctor">
      <summary>CalculatorButtonStyleのコンストラクター。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.#ctor(System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.TextEffect)">
      <summary>CalculatorButtonStyleのコンストラクター。</summary>
      <param name="foreColor">ForeColorの初期設定。</param>
      <param name="backColor">BackColorの初期設定。</param>
      <param name="textEffect">TextEffectの初期設定。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.BackColor">
      <summary>背景色を取得または設定します。</summary>
      <value>背景の描画に使用される<see cref="T:System.Drawing.Color" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.ForeColor">
      <summary>文字色を取得または設定します。</summary>
      <value>テキストの描画に使用される<see cref="T:System.Drawing.Color" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.Math">
      <summary>演算ボタンで使用されるデフォルトの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />を取得します。</summary>
      <value>演算ボタンのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.Memory">
      <summary>メモリボタンで使用されるデフォルトの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />を取得します。</summary>
      <value>メモリボタンのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.Normal">
      <summary>通常ボタンで使用されるデフォルトの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />を取得します。</summary>
      <value>通常ボタンのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.Output">
      <summary>出力ウィンドウで使用されるデフォルトの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />を取得します。</summary>
      <value>出力ウィンドウのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.TextEffect">
      <summary>テキスト描画効果を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.TextEffect" />値の1つ。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.Clone">
      <summary>
        <b>Clone</b>メソッドは、新しい<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />オブジェクトを作成し、この<b>CalculatorButtonStyle</b>オブジェクトの内容で新しいオブジェクトを初期化します。</summary>
      <returns>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />オブジェクトのシャローコピー。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.Dispose">
      <summary>CalculatorButtonStyleクラスによって使用されているリソースを解放します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.Equals(System.Object)">
      <summary>指定したオブジェクトがこの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />と等しいかどうかをテストします。</summary>
      <param name="obj">このオブジェクトと比較するオブジェクト。</param>
      <returns>objが<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />のインスタンスで、このインスタンスと等しい場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.GetHashCode">
      <summary>この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />の生成されたハッシュコードを返します。</summary>
      <returns>このインスタンスのハッシュコードを返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.OnPropertyChanged(System.String)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.PropertyChanged" />イベントを発生させます。</summary>
      <param name="propName">値が変更されたプロパティの名前。</param>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle.PropertyChanged">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />オブジェクトのプロパティが変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo" />で使用されるボタンのスタイルを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.#ctor(System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.TextEffect)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />の新しいインスタンスを初期化します。</summary>
      <param name="foreColor">前景色の初期設定。</param>
      <param name="backColor">背景色の初期設定。</param>
      <param name="textEffect">テキスト効果の初期設定。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.BackColor">
      <summary>背景色を取得または設定します。</summary>
      <value>背景の描画に使用される<see cref="T:System.Drawing.Color" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.ForeColor">
      <summary>文字色を取得または設定します。</summary>
      <value>テキストの描画に使用される<see cref="T:System.Drawing.Color" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.Math">
      <summary>演算ボタンで使用されるデフォルトの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />を取得します。</summary>
      <value>演算ボタンのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.Memory">
      <summary>メモリボタンで使用されるデフォルトの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />を取得します。</summary>
      <value>メモリボタンのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.Normal">
      <summary>通常ボタンで使用されるデフォルトの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />を取得します。</summary>
      <value>通常ボタンのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.Output">
      <summary>出力ウィンドウで使用されるデフォルトの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />を取得します。</summary>
      <value>出力ウィンドウのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.TextEffect">
      <summary>テキスト描画効果を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.TextEffect" />値の1つ。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.Equals(System.Object)">
      <summary>指定したオブジェクトがこの<b>CalculatorButtonStyle</b>と等しいかどうかをテストします。</summary>
      <param name="obj">このオブジェクトと比較するオブジェクト。</param>
      <returns>objが<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />のインスタンスで、このインスタンスと等しい場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo.GetHashCode">
      <summary>この<b>CalculatorButtonStyleInfo</b>の生成されたハッシュコードを返します。</summary>
      <returns>このインスタンスのハッシュコードを返します。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox">
      <summary>CharBoxの設定を表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="autoSize">
        <see langword="bool" />値。<see langword="true" />に設定した場合、すべての内容が表示されるように幅と高さが調整されます。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor(System.Boolean,System.Drawing.Size)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="autoSize">
        <see langword="bool" />値。<see langword="true" />に設定した場合、すべての内容が表示されるように幅と高さが調整されます。</param>
      <param name="size">オートサイズがfalseの場合に実際のサイズを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Size" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="style">キャラクターボックスのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" />列挙体。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="border">キャラクターボックスの境界線設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="style">キャラクターボックスのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" />列挙体。</param>
      <param name="border">キャラクターボックスの境界線設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder,System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="style">キャラクターボックスのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" />列挙体。</param>
      <param name="border">キャラクターボックスの境界線設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" />オブジェクト。</param>
      <param name="backColor">背景色を示す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="foreColor">前景色を示す<see cref="T:System.Drawing.Color" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.#ctor(System.Boolean,System.Drawing.Size,System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,System.Windows.Forms.Padding,System.Windows.Forms.Padding,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder,System.Drawing.Font,System.Drawing.ContentAlignment)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="autoSize">
        <see langword="bool" />値。<see langword="true" />に設定した場合、キャラクターボックスのサイズが自動的に設定されます。</param>
      <param name="size">オートサイズがfalseの場合に実際のサイズを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Size" />値。<param name="style"> キャラクターボックスのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" />列挙体。</param><param name="backColor"> 背景色を示す<see cref="T:System.Drawing.Color" />値。</param><param name="foreColor"> 前景色を示す<see cref="T:System.Drawing.Color" nolink="true" />値。 </param></param>
      <param name="margin">キャラクターボックスの余白を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Padding" />値。</param>
      <param name="padding">キャラクターボックスのパディングを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Padding" />値。</param>
      <param name="border">キャラクターボックスの境界線設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" />オブジェクト。</param>
      <param name="font">キャラクターボックスに表示する文字のフォントを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Font" />オブジェクト。</param>
      <param name="contentAlignment">キャラクターボックスの内容の配置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ContentAlignment" />列挙体。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.AutoSize">
      <summary>コントロールに割り当てられたフォントが変更されたときにコントロールの高さが自動的に調整されるかどうかを示す値を取得または設定します。</summary>
      <value>コントロールに割り当てられたフォントが変更されたときにコントロールの高さが自動的に調整されるかどうかを示す<see langword="bool" />値。<br /> デフォルト値は<see langword="true" />です。</value>
      <remarks>このプロパティがtrueに設定されている場合、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />の内容全体が表示されるようにキャラクターボックスの幅が調整されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.BackColor">
      <summary>キャラクターボックスの背景色を取得または設定します。</summary>
      <value>背景色を示す<see cref="T:System.Drawing.Color" />。<br /> デフォルト値は<see cref="P:System.Drawing.Color.Transparent" />です。</value>
      <remarks>
        <b>BackColor</b>プロパティを使用してコントロールの背景色を変更し、コントロールをフォームの色彩設計に合わせることができます。<para />コントロール内のテキストの色を変更するには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ForeColor" />プロパティを使用します。コントロールの<b>BackColor</b>プロパティを設定するときは、コントロールのテキストが見えなくなるような色を選ばないでください。たとえば、<b>BackColor</b>プロパティと<b>ForeColor</b>プロパティを両方とも<b>Color.Black</b>に設定した場合、コントロール内のテキストは見えなくなります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Border">
      <summary>キャラクターボックスの境界線を取得または設定します。</summary>
      <value>キャラクターボックスの境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" />。</value>
      <remarks>このプロパティは、この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />の境界線スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ContentAlignment">
      <summary>キャラクターボックスの内容の配置を取得または設定します。</summary>
      <value>キャラクターボックスの内容の配置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ContentAlignment" />値。<br /> デフォルト値は<see cref="F:System.Drawing.ContentAlignment.MiddleCenter" />です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />のテキストの配置を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Font">
      <summary>キャラクターボックスのフォントを取得または設定します。</summary>
      <value>キャラクターボックスのテキストのフォントを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Font" />。</value>
      <remarks>
        <para>
          <b>Font</b>プロパティはアンビエントプロパティです。アンビエントプロパティとは、明示的に設定しない場合に親コントロールから取得されるコントロールプロパティです。たとえば<see cref="T:System.Windows.Forms.Button" />は、デフォルトでは親の<see cref="T:System.Windows.Forms.Form" />と同じ<see cref="P:System.Windows.Forms.Control.BackColor" />を持ちます。</para>
        <para />
        <para>
          <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ForeColor">
      <summary>キャラクターボックスの前景色を取得または設定します。</summary>
      <value>前景色を示す<see cref="T:System.Drawing.Color" />。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.BackColor" />プロパティを使用してコントロールの背景色を変更し、コントロールをフォームの色彩設計に合わせることができます。<para />コントロール内のテキストの色を変更するには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ForeColor" />プロパティを使用します。コントロールの<b>BackColor</b>プロパティを設定するときは、コントロールのテキストが見えなくなるような色を選ばないでください。たとえば、<b>BackColor</b>プロパティと<b>ForeColor</b>プロパティを両方とも<b>Color.Black</b>に設定した場合、コントロール内のテキストは見えなくなります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Margin">
      <summary>キャラクターボックスの境界線の周囲の余白を取得または設定します。</summary>
      <value>余白を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Padding" />。<br /> デフォルト値は"0,0,0,0"です。</value>
      <remarks>このプロパティは、キャラクターボックスとその隣接するコントロールとの間隔を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Padding">
      <summary>キャラクターボックスの境界線と内容の間の空白のサイズを取得または設定します。</summary>
      <value>パディングを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Padding" />。<br /> デフォルト値は"1,1,1,1"です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />の入力領域と境界線との間隔を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Size">
      <summary>キャラクターボックスのサイズを取得または設定します。</summary>
      <value>キャラクターボックスのサイズを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Size" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.State">
      <summary>キャラクターボックスの状態を取得または設定します。</summary>
      <value>キャラクターボックスの状態を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxState" />列挙体。</value>
      <remarks>このプロパティは、この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />の編集状態を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Style">
      <summary>キャラクターボックスのスタイルを取得または設定します。</summary>
      <value>キャラクターボックスのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" />。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.Normal" />です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Border" />がどのように表示されるかを決定します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Clone">
      <summary>オブジェクトの複製を返します。</summary>
      <returns>複製されたオブジェクトを表す<b><see cref="T:System.Object">Object</see></b>値。</returns>
      <remarks>このメソッドは、このインスタンスと同じ設定を持つ<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />インスタンスをもう1つ作成します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Paint" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Forms.PaintEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnPaint</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b><para />派生クラスで<b>OnPaint</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnPaint</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />のいずれかのプロパティが変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.PropertyChangedEventArgs" />インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ResetBorder">
      <summary>キャラクターボックスの境界線をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ResetFont">
      <summary>キャラクターボックスのフォントをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ResetForeColor">
      <summary>キャラクターボックスの前景色をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ResetPadding">
      <summary>キャラクターボックスのパディングをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.SetSize(System.Drawing.Size)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />のサイズを設定します。</summary>
      <param name="value">サイズを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Size" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ShouldSerializeBorder">
      <summary>Borderプロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ShouldSerializeFont">
      <summary>Fontプロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ShouldSerializeForeColor">
      <summary>ForeColorプロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBox.ShouldSerializePadding">
      <summary>Paddingプロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.CharBox.Paint">
      <summary>キャラクターボックスが描画された後に発生します。</summary>
      <remarks>このイベントは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />が更新されたときに発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder">
      <summary>キャラクターボックスの境界線を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.#ctor(GrapeCity.Win.Spread.InputMan.CellType.Line)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="all">すべての境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.#ctor(System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="lineColor">線の色を示す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="lineStyle">線スタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.#ctor(GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="left">左境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</param>
      <param name="top">上境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</param>
      <param name="right">右境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</param>
      <param name="bottom">下境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.Bottom">
      <summary>下境界線を取得または設定します。</summary>
      <value>下境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.Left">
      <summary>左境界線を取得または設定します。</summary>
      <value>左境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.Right">
      <summary>右境界線を取得または設定します。</summary>
      <value>右境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.Top">
      <summary>上境界線を取得または設定します。</summary>
      <value>上境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.Equals(System.Object)">
      <summary>2つの<see cref="T:System.Object" />インスタンスが等しいかどうかを判断します。</summary>
      <param name="obj">現在の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" />と比較する<see cref="T:System.Object" />。</param>
      <returns>このメソッドは、<b>obj</b>が<b>CharBoxBorder</b>オブジェクトで、その<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line">Left</see>、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" nolink="true">Right</see>、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" nolink="true">Top</see>、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" nolink="true">Border</see>の各プロパティがこの<b>CharBoxBorder</b>構造体の対応するプロパティと等しい場合は<see langword="true" />を返し、それ以外の場合は<see langword="false" />を返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.GetHashCode">
      <summary>オブジェクトのハッシュコードを返します。</summary>
      <returns>ハッシュコードを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.PropertyChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.PropertyChangedEventArgs" />インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.SetAllLines(System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>
        <see cref="T:System.Drawing.Color" />と<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />の設定をすべての線に適用します。</summary>
      <param name="lineColor">線の色を示す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="lineStyle">線のスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.SetAllLines(System.Drawing.Color)">
      <summary>
        <see cref="T:System.Drawing.Color" />の設定をすべての線に適用します。</summary>
      <param name="lineColor">線の色を示す<see cref="T:System.Drawing.Color" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.SetAllLines(GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />の設定をすべての線に適用します。</summary>
      <param name="lineStyle">線のスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />値。</param>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder.PropertyChanged">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" />インスタンスが変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo">
      <summary>キャラクターボックスの境界線を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.Line)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="all">すべての境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.#ctor(System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="lineColor">線の色を示す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="lineStyle">線スタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="left">左境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</param>
      <param name="top">上境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</param>
      <param name="right">右境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</param>
      <param name="bottom">下境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.Bottom">
      <summary>下境界線を取得または設定します。</summary>
      <value>下境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.Left">
      <summary>左境界線を取得または設定します。</summary>
      <value>左境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.Right">
      <summary>右境界線を取得または設定します。</summary>
      <value>右境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.Top">
      <summary>上境界線を取得または設定します。</summary>
      <value>上境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.Equals(System.Object)">
      <summary>2つの<see cref="T:System.Object" />インスタンスが等しいかどうかを判断します。</summary>
      <param name="obj">現在の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />と比較する<see cref="T:System.Object" />。</param>
      <returns>このメソッドは、<b>obj</b>が<b>CharBoxBorderInfo</b>オブジェクトで、その<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line">Left</see>、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" nolink="true">Right</see>、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" nolink="true">Top</see>、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" nolink="true">Border</see>の各プロパティがこの<b>CharBoxBorderInfo</b>構造体の対応するプロパティと等しい場合は<see langword="true" />を返し、それ以外の場合は<see langword="false" />を返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.GetHashCode">
      <summary>オブジェクトのハッシュコードを返します。</summary>
      <returns>ハッシュコードを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ResetAll">
      <summary>キャラクターボックスのすべての境界線をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ResetBottom">
      <summary>キャラクターボックスの下境界線をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ResetLeft">
      <summary>キャラクターボックスの左境界線をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ResetRight">
      <summary>キャラクターボックスの右境界線をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ResetTop">
      <summary>キャラクターボックスの上境界線をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.SetAllLines(System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>
        <see cref="T:System.Drawing.Color" />と<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />の設定をすべての線に適用します。</summary>
      <param name="lineColor">線の色を示す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="lineStyle">線のスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.SetAllLines(System.Drawing.Color)">
      <summary>
        <see cref="T:System.Drawing.Color" />の設定をすべての線に適用します。</summary>
      <param name="lineColor">線の色を示す<see cref="T:System.Drawing.Color" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.SetAllLines(GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />の設定をすべての線に適用します。</summary>
      <param name="lineStyle">線のスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ShouldSerializeAll">
      <summary>Allプロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ShouldSerializeBottom">
      <summary>Bottomプロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ShouldSerializeLeft">
      <summary>Leftプロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ShouldSerializeRight">
      <summary>Rightプロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo.ShouldSerializeTop">
      <summary>Topプロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection">
      <summary>キャラクターボックスのセットを示すコレクションを定義します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Item(System.Int32)">
      <summary>インデックスに従ってキャラクターボックスを取得します。</summary>
      <value>特定のインデックスを示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Number1">
      <summary>数値スタイルの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />のテンプレートセットを取得します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Number2">
      <summary>数値スタイルの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />のテンプレートセットを取得します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Number3">
      <summary>数値スタイルの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />のテンプレートセットを取得します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Number4">
      <summary>数値スタイルの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />のテンプレートセットを取得します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.PostCode1">
      <summary>郵便番号スタイルの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />のテンプレートセットを取得します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.PostCode2">
      <summary>郵便番号スタイルの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />のテンプレートセットを取得します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.PostCode3">
      <summary>郵便番号スタイルの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />のテンプレートセットを取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.CharBox)">
      <summary>キャラクターボックスをコレクションに追加します。</summary>
      <param name="charBox">キャラクターボックスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />。</param>
      <returns>キャラクターボックスのインデックスを示す<see cref="T:System.Int32" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.CharBox,System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />をコレクションに追加します。</summary>
      <param name="templateCharBox">現在のコレクションに追加するテンプレート<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" nolink="true" />を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" /></param>
      <param name="count">追加する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />の総数を示す<see cref="T:System.Int32" /></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.AddRange(GrapeCity.Win.Spread.InputMan.CellType.CharBox[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />の配列を現在のコレクションに追加します。</summary>
      <param name="charBoxes">このコレクションに追加する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.CharBox)">
      <summary>特定のキャラクターボックスのインデックスを取得します。</summary>
      <param name="charBox">キャラクターボックスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />。</param>
      <returns>キャラクターボックスのインデックスを示す<see cref="T:System.Int32" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.CharBox)">
      <summary>コレクションの指定したインデックスにキャラクターボックスを挿入します。</summary>
      <param name="index">インデックスを示す<see cref="T:System.Int32" />。</param>
      <param name="charBox">挿入するキャラクターボックスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnClear">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" />インスタンスの内容をクリアするときに、追加のカスタム処理を実行します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnClearComplete">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" />インスタンスの内容をクリアした後で、追加のカスタム処理を実行します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.CollectionChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.CollectionChangeEventArgs" />インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnInsert(System.Int32,System.Object)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" />インスタンスの内容をクリアするときに、追加のカスタム処理を実行します。</summary>
      <param name="index">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />インスタンスのインデックスを示す<see cref="T:System.Int32" /></param>
      <param name="value">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />インスタンスを示す<see cref="T:System.Object" /></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" />インスタンスの内容を挿入するときに、追加のカスタム処理を実行します。</summary>
      <param name="index">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />インスタンスのインデックスを示す<see cref="T:System.Int32" /></param>
      <param name="value">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />インスタンスを示す<see cref="T:System.Object" /></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>プロパティ変更通知を通知します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.PropertyChangedEventArgs" />インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnRemove(System.Int32,System.Object)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" />インスタンスの内容をクリアするときに、追加のカスタム処理を実行します。</summary>
      <param name="index">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />インスタンスのインデックスを示す<see cref="T:System.Int32" /></param>
      <param name="value">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />インスタンスを示す<see cref="T:System.Object" /></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" />インスタンスの内容を削除するときに、追加のカスタム処理を実行します。</summary>
      <param name="index">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />インスタンスのインデックスを示す<see cref="T:System.Int32" /></param>
      <param name="value">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />インスタンスを示す<see cref="T:System.Object" /></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" />インスタンスの内容をクリアするときに、追加のカスタム処理を実行します。</summary>
      <param name="index">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />インスタンスのインデックスを示す<see cref="T:System.Int32" /></param>
      <param name="oldValue">古い<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />インスタンスを示す<see cref="T:System.Object" /></param>
      <param name="newValue">新しい<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />インスタンスを示す<see cref="T:System.Object" /></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" />インスタンスの内容を設定するときに、追加のカスタム処理を実行します。</summary>
      <param name="index">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />インスタンスのインデックスを示す<see cref="T:System.Int32" /></param>
      <param name="oldValue">古い<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />インスタンスを示す<see cref="T:System.Object" /></param>
      <param name="newValue">新しい<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />インスタンスを示す<see cref="T:System.Object" /></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.CharBox)">
      <summary>コレクションからキャラクターボックスを削除します。</summary>
      <param name="charBox">キャラクターボックスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.SetBorderColor(System.Drawing.Color)">
      <summary>このコレクションに含まれる各<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />のすべての<seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder">Border</seealso>の<see cref="T:System.Drawing.Color" />を設定します。</summary>
      <param name="color">線の色を示す<see cref="T:System.Drawing.Color" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.SetBorderStyle(GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>このコレクションに含まれる各<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />のすべての<seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorder" />の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />を設定します。</summary>
      <param name="lineStyle">線のスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />。</param>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection.CollectionChanged">
      <summary>コレクションが変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo">
      <summary>CharBoxInfoの設定を表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="autoSize">
        <see langword="bool" />値。<see langword="true" />に設定した場合、すべての内容が表示されるように幅と高さが調整されます。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(System.Boolean,System.Drawing.Size)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="autoSize">
        <see langword="bool" />値。<see langword="true" />に設定した場合、すべての内容が表示されるように幅と高さが調整されます。</param>
      <param name="size">オートサイズがfalseの場合に実際のサイズを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Size" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="style">キャラクターボックスのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" />列挙体。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="border">キャラクターボックスの境界線設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="style">キャラクターボックスのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" />列挙体。</param>
      <param name="border">キャラクターボックスの境界線設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo,System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="style">キャラクターボックスのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" />列挙体。</param>
      <param name="border">キャラクターボックスの境界線設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />オブジェクト。</param>
      <param name="backColor">背景色を示す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="foreColor">前景色を示す<see cref="T:System.Drawing.Color" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(System.Boolean,System.Drawing.Size,System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,System.Windows.Forms.Padding,System.Windows.Forms.Padding,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo,System.Drawing.Font,System.Drawing.ContentAlignment)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="autoSize">
        <see langword="bool" />値。<see langword="true" />に設定した場合、キャラクターボックスのサイズが自動的に設定されます。</param>
      <param name="size">オートサイズがfalseの場合に実際のサイズを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Size" />値。<param name="style"> キャラクターボックスのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" />列挙体。</param><param name="backColor"> 背景色を示す<see cref="T:System.Drawing.Color" />値。</param><param name="foreColor"> 前景色を示す<see cref="T:System.Drawing.Color" nolink="true" />値。 </param></param>
      <param name="margin">キャラクターボックスの余白を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Padding" />値。</param>
      <param name="padding">キャラクターボックスのパディングを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Padding" />値。</param>
      <param name="border">キャラクターボックスの境界線設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />オブジェクト。</param>
      <param name="font">キャラクターボックスに表示する文字のフォントを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Font" />オブジェクト。</param>
      <param name="contentAlignment">キャラクターボックスの内容の配置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.ContentAlignment" />列挙体。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.AutoSize">
      <summary>コントロールに割り当てられたフォントが変更されたときにコントロールの高さが自動的に調整されるかどうかを示す値を取得または設定します。</summary>
      <value>コントロールに割り当てられたフォントが変更されたときにコントロールの高さが自動的に調整されるかどうかを示す<see langword="bool" />値。<br /> デフォルト値は<see langword="true" />です。</value>
      <remarks>このプロパティがtrueに設定されている場合、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />の内容全体が表示されるようにキャラクターボックスの幅が調整されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.BackColor">
      <summary>キャラクターボックスの背景色を取得または設定します。</summary>
      <value>背景色を示す<see cref="T:System.Drawing.Color" />。<br /> デフォルト値は<see cref="P:System.Drawing.Color.Transparent" />です。</value>
      <remarks>
        <b>BackColor</b>プロパティを使用してコントロールの背景色を変更し、コントロールをフォームの色彩設計に合わせることができます。<para />コントロール内のテキストの色を変更するには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.ForeColor" />プロパティを使用します。コントロールの<b>BackColor</b>プロパティを設定するときは、コントロールのテキストが見えなくなるような色を選ばないでください。たとえば、<b>BackColor</b>プロパティと<b>ForeColor</b>プロパティを両方とも<b>Color.Black</b>に設定した場合、コントロール内のテキストは見えなくなります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Border">
      <summary>キャラクターボックスの境界線を取得または設定します。</summary>
      <value>キャラクターボックスの境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />。</value>
      <remarks>このプロパティは、この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />の境界線スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.ContentAlignment">
      <summary>キャラクターボックスの内容の配置を取得または設定します。</summary>
      <value>キャラクターボックスの内容の配置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.ContentAlignment" />値。<br /> デフォルト値は<see cref="F:System.Drawing.ContentAlignment.MiddleCenter" />です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />のテキストの配置を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Font">
      <summary>キャラクターボックスのフォントを取得または設定します。</summary>
      <value>キャラクターボックスのテキストのフォントを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Font" />。</value>
      <remarks>
        <para>
          <b>Font</b>プロパティはアンビエントプロパティです。アンビエントプロパティとは、明示的に設定しない場合に親コントロールから取得されるコントロールプロパティです。たとえば<see cref="T:System.Windows.Forms.Button" />は、デフォルトでは親の<see cref="T:System.Windows.Forms.Form" />と同じ<see cref="P:System.Windows.Forms.Control.BackColor" />を持ちます。</para>
        <para />
        <para>
          <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.ForeColor">
      <summary>キャラクターボックスの前景色を取得または設定します。</summary>
      <value>前景色を示す<see cref="T:System.Drawing.Color" />。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.BackColor" />プロパティを使用してコントロールの背景色を変更し、コントロールをフォームの色彩設計に合わせることができます。<para />コントロール内のテキストの色を変更するには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.ForeColor" />プロパティを使用します。コントロールの<b>BackColor</b>プロパティを設定するときは、コントロールのテキストが見えなくなるような色を選ばないでください。たとえば、<b>BackColor</b>プロパティと<b>ForeColor</b>プロパティを両方とも<b>Color.Black</b>に設定した場合、コントロール内のテキストは見えなくなります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Margin">
      <summary>キャラクターボックスの境界線の周囲の余白を取得または設定します。</summary>
      <value>余白を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Padding" />。<br /> デフォルト値は"0,0,0,0"です。</value>
      <remarks>このプロパティは、キャラクターボックスとその隣接するコントロールとの間隔を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Padding">
      <summary>キャラクターボックスの境界線と内容の間の空白のサイズを取得または設定します。</summary>
      <value>パディングを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Padding" />。<br /> デフォルト値は"1,1,1,1"です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />の入力領域と境界線との間隔を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Size">
      <summary>キャラクターボックスのサイズを取得または設定します。</summary>
      <value>キャラクターボックスのサイズを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Size" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Style">
      <summary>キャラクターボックスのスタイルを取得または設定します。</summary>
      <value>キャラクターボックスのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" />。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.Normal" />です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Border" />がどのように表示されるかを決定します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Clone">
      <summary>オブジェクトの複製を返します。</summary>
      <returns>複製されたオブジェクトを表す<b><see cref="T:System.Object">Object</see></b>値。</returns>
      <remarks>このメソッドは、このインスタンスと同じ設定を持つ<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />インスタンスをもう1つ作成します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo.PropertyChanged">
      <summary>オブジェクトのプロパティが変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection">
      <summary>キャラクターボックスのセットを示すコレクションを定義します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Item(System.Int32)">
      <summary>インデックスに従ってキャラクターボックスを取得します。</summary>
      <value>特定のインデックスを示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Number1">
      <summary>数値スタイルの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />のテンプレートセットを取得します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Number2">
      <summary>数値スタイルの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />のテンプレートセットを取得します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Number3">
      <summary>数値スタイルの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />のテンプレートセットを取得します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Number4">
      <summary>数値スタイルの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />のテンプレートセットを取得します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.PostCode1">
      <summary>郵便番号スタイルの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />のテンプレートセットを取得します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.PostCode2">
      <summary>郵便番号スタイルの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />のテンプレートセットを取得します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.PostCode3">
      <summary>郵便番号スタイルの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />のテンプレートセットを取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo)">
      <summary>キャラクターボックスをコレクションに追加します。</summary>
      <param name="CharBoxInfo">キャラクターボックスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />。</param>
      <returns>キャラクターボックスのインデックスを示す<see cref="T:System.Int32" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo,System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />をコレクションに追加します。</summary>
      <param name="templateCharBoxInfo">現在のコレクションに追加するテンプレート<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" nolink="true" />を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" /></param>
      <param name="count">追加する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />の総数を示す<see cref="T:System.Int32" /></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.AddRange(GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />の配列を現在のコレクションに追加します。</summary>
      <param name="CharBoxInfoes">このコレクションに追加する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo)">
      <summary>特定のキャラクターボックスのインデックスを取得します。</summary>
      <param name="CharBoxInfo">キャラクターボックスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />。</param>
      <returns>キャラクターボックスのインデックスを示す<see cref="T:System.Int32" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo)">
      <summary>コレクションの指定したインデックスにキャラクターボックスを挿入します。</summary>
      <param name="index">インデックスを示す<see cref="T:System.Int32" />。</param>
      <param name="CharBoxInfo">挿入するキャラクターボックスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.OnFieldPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.FieldPropertyChanged" />イベントを発生させます。</summary>
      <param name="e" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo)">
      <summary>コレクションからキャラクターボックスを削除します。</summary>
      <param name="CharBoxInfo">キャラクターボックスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.SetBorderColor(System.Drawing.Color)">
      <summary>このコレクションに含まれる各<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />のすべての<seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo">Border</seealso>の<see cref="T:System.Drawing.Color" />を設定します。</summary>
      <param name="color">線の色を示す<see cref="T:System.Drawing.Color" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfoCollection.SetBorderStyle(GrapeCity.Win.Spread.InputMan.CellType.LineStyle)">
      <summary>このコレクションに含まれる各<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxInfo" />のすべての<seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />を設定します。</summary>
      <param name="lineStyle">線のスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ClickDateEventArgs">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ClickDate" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ClickDateEventArgs.#ctor(System.Nullable{System.DateTime})">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ClickDateEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="date">クリックされた日付を示す <see cref="T:System.Nullable`1" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ClickDateEventArgs.Date">
      <summary>クリックされた日付を取得します。</summary>
      <value>クリックされた日付を示す <see cref="T:System.Nullable`1" /> 値。</value>
      <remarks>このプロパティは、マウスでクリックされた日付を取得します。日付がクリックされていない場合、値は <see langword="null" /> になります。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1">
      <summary>コレクションの基本機能を実装します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.#ctor(GrapeCity.Win.Spread.InputMan.CellType.CollectionBase{`0})">
      <summary>指定したソースコレクションの要素を含む<see cref="T:CollectionEx&lt;T&gt;" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">コレクションの初期化に使用する<see cref="T:CollectionEx&lt;T&gt;" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.#ctor(`0[])">
      <summary>指定した<typeparamref name="T" />オブジェクトの配列を含む<see cref="T:CollectionEx&lt;T&gt;" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">コレクションの初期化に使用する<typeparamref name="T" />オブジェクトの配列。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Item(System.Int32)">
      <summary>コレクションの指定したインデックスにある<typeparamref name="T" />を取得または設定します。</summary>
      <param name="index">インデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <value>有効な各インデックスにある<typeparamref name="T" />。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">indexパラメーターが、コレクションの有効なインデックスの範囲から外れています。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Add(`0)">
      <summary>指定した<typeparamref name="T" />をコレクションに追加します。</summary>
      <param name="value">追加する<typeparamref name="T" />。</param>
      <returns>コレクションの挿入位置のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.AddRange(`0[])">
      <summary>配列に含まれる項目を、コレクションの末尾に追加します。</summary>
      <param name="value">コレクションに追加するオブジェクトを含む<typeparamref name="T" />型の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.AddRange(System.Collections.Generic.IList{`0})">
      <summary>別の<see cref="T:IList&lt;T&gt;" />の内容をこのコレクションの最後に追加します。</summary>
      <param name="value">コレクションに追加するオブジェクトを含む<see cref="T:IList&lt;T&gt;" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.AddRange(GrapeCity.Win.Spread.InputMan.CellType.CollectionBase{`0})">
      <summary>別の<see cref="T:CollectionEx&lt;T&gt;" />の内容をこのコレクションの最後に追加します。</summary>
      <param name="value">コレクションに追加するオブジェクトを含む<see cref="T:CollectionEx&lt;T&gt;" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Contains(`0)">
      <summary>指定した<typeparamref name="T" />がコレクションに含まれているかどうかを示す値を取得します。</summary>
      <param name="value">コレクション内で検索する<typeparamref name="T" />。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定のオブジェクトはコレクションに含まれています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定のオブジェクトはコレクションに含まれていません。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.CopyTo(`0[],System.Int32)">
      <summary>コレクションに指定されている<b><see cref="T:GrapeCity.Win.Editors.SideButtonBase">SideButtonBase</see></b>オブジェクトを、 引数で指定された<b><see cref="T:GrapeCity.Win.Editors.SideButtonBase">SideButtonBase</see></b>配列に設定します。</summary>
      <param name="array">設定先となる<b><see cref="T:GrapeCity.Win.Editors.SideButtonBase">SideButtonBase</see></b>配列。</param>
      <param name="index">コピー先配列におけるコピー開始位置となるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <exception cref="T:System.ArgumentNullException">arrayパラメーターがnullです。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">indexパラメーターが、コピー先配列の最小インデックス未満です。</exception>
      <exception cref="T:System.ArgumentException">コピー先配列が多次元です。または、<see cref="T:Collection&lt;T&gt;" />内の要素の数が、インデックスパラメーターによって指定されたコピー先配列のインデックスから末尾までに格納できる数を超えています。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.DefaultPredicate``1(``0)">
      <summary>既定の検索条件を実装します。</summary>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>検索対象となった項目は、検索条件を満たします。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>検索対象となった項目は、検索条件を満たしません。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Exists``1">
      <summary>指定した述語によって定義された条件に一致する要素が<see cref="T:System.Collections.Generic.List`1" />に含まれているかどうかを判断します。</summary>
      <returns>指定した述語によって定義された条件に一致する要素が<see cref="T:System.Collections.Generic.List`1" />に1つ以上含まれている場合はtrue。それ以外の場合はfalse。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Exists``1(System.Predicate{``0})">
      <summary>指定した述語によって定義された条件に一致する要素が<see cref="T:System.Collections.Generic.List`1" />に含まれているかどうかを判断します。</summary>
      <param name="match">検索する要素の条件を定義する<see cref="T:System.Predicate`1" />デリゲート。</param>
      <returns>指定した述語によって定義された条件に一致する要素が<see cref="T:System.Collections.Generic.List`1" />に1つ以上含まれている場合はtrue。それ以外の場合はfalse。</returns>
      <exception cref="T:System.ArgumentNullException">matchがnullです。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Find``1">
      <summary>指定した型TTargetに一致する<typeparamref name="T" />をコレクション全体で検索し、最初に見つかった一致する項目を返します。</summary>
      <returns>指定した述語によって定義された条件に一致する<typeparamref name="T" />が見つかった場合は、その最初の<typeparamref name="T" />。それ以外の場合は、型TTargetのデフォルト値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Find``1(System.Predicate{``0})">
      <summary>指定した型TTargetと指定した述語によって定義された条件に一致する<typeparamref name="T" />をコレクション全体で検索し、最初に見つかった一致する項目を返します。</summary>
      <param name="match">検索する<typeparamref name="T" />の条件を定義する<see cref="T:System.Predicate`1" />デリゲート。</param>
      <returns>指定した述語によって定義された条件に一致する<typeparamref name="T" />が見つかった場合は、その最初の<typeparamref name="T" />。それ以外の場合は、型TTargetのデフォルト値。</returns>
      <exception cref="T:System.ArgumentNullException">matchがnullです。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindAll``1">
      <summary>指定した型TTargetに一致するすべての<typeparamref name="T" />を取得します。</summary>
      <returns>指定した型TTargetと指定した述語によって定義された条件の両方に一致するすべての<typeparamref name="T" />を含む<see cref="T:System.Collections.Generic.List`1" />。一致する項目が見つからなかった場合は、空の<see cref="T:System.Collections.Generic.List`1" nolink="true" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindAll``1(System.Predicate{``0})">
      <summary>指定した型TTargetと指定した述語によって定義された条件の両方に一致するすべての<typeparamref name="T" />を取得します。</summary>
      <param name="match">検索する<typeparamref name="T" />の条件を定義する<see cref="T:System.Predicate`1" />デリゲート。</param>
      <returns>指定した型TTargetと指定した述語によって定義された条件の両方に一致するすべての<typeparamref name="T" />を含む<see cref="T:System.Collections.Generic.List`1" />。一致する項目が見つからなかった場合は、空の<see cref="T:System.Collections.Generic.List`1" nolink="true" />。</returns>
      <exception cref="T:System.ArgumentNullException">matchがnullです。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindIndex``1">
      <summary>指定した述語によって定義された条件に一致する要素を<see cref="T:System.Collections.Generic.List`1" />全体で検索し、最初に見つかった一致する項目の0から始まるインデックスを返します。</summary>
      <returns>該当する最初の項目のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindIndex``1(System.Predicate{``0})">
      <summary>指定した述語によって定義された条件に一致する要素を<see cref="T:System.Collections.Generic.List`1" />全体で検索し、最初に見つかった一致する項目の0から始まるインデックスを返します。</summary>
      <param name="match">検索する要素の条件を定義する<see cref="T:System.Predicate`1" />デリゲート。</param>
      <returns>該当する最初の項目のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
      <exception cref="T:System.ArgumentNullException">matchがnullです。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindIndex``1(System.Int32,System.Predicate{``0})">
      <summary>指定した述語によって定義された条件に一致する要素を、<see cref="T:System.Collections.Generic.List`1" />の指定したインデックスから最後の要素までの範囲で検索し、最初に見つかった一致する項目の0から始まるインデックスを返します。</summary>
      <param name="startIndex">検索の開始位置を表す、0から始まるインデックス値を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="match">検索する要素の条件を定義する<see cref="T:System.Predicate`1" />デリゲート。</param>
      <returns>該当する最初の項目のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndexが、<see cref="T:System.Collections.Generic.List`1" />の有効なインデックスの範囲から外れています。</exception>
      <exception cref="T:System.ArgumentNullException">matchがnullです。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindIndex``1(System.Int32,System.Int32,System.Predicate{``0})">
      <summary>指定した述語によって定義された条件に一致する要素を、<see cref="T:System.Collections.Generic.List`1" />の指定したインデックスから指定した要素数までの範囲で検索し、最初に見つかった一致する項目の0から始まるインデックスを返します。</summary>
      <param name="count">検索する項目の個数を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="startIndex">検索の開始位置を表す、0から始まるインデックス値を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="match">検索する要素の条件を定義する<see cref="T:System.Predicate`1" />デリゲート。</param>
      <returns>該当する最初の項目のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">countが0未満です。</exception>
      <exception cref="T:System.ArgumentNullException">matchがnullです。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindLast``1">
      <summary>指定した型TTargetと指定した述語によって定義された条件に一致する<typeparamref name="T" />をコレクション全体で検索し、最後に見つかった一致する項目を返します。</summary>
      <returns>指定した述語によって定義された条件に一致する<typeparamref name="T" />が見つかった場合は、その最後の<typeparamref name="T" />。それ以外の場合は、型TTargetのデフォルト値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindLast``1(System.Predicate{``0})">
      <summary>指定した型TTargetと指定した述語によって定義された条件に一致する<typeparamref name="T" />をコレクション全体で検索し、最後に見つかった一致する項目を返します。</summary>
      <param name="match">検索する<typeparamref name="T" />の条件を定義する<see cref="T:System.Predicate`1" />デリゲート。</param>
      <returns>指定した述語によって定義された条件に一致する<typeparamref name="T" />が見つかった場合は、その最後の<typeparamref name="T" />。それ以外の場合は、型TTargetのデフォルト値。</returns>
      <exception cref="T:System.ArgumentNullException">matchがnullです。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindLastIndex``1">
      <summary>指定した述語によって定義された条件に一致する要素を<see cref="T:System.Collections.Generic.List`1" />全体で検索し、最後に見つかった一致する項目の0から始まるインデックスを返します。</summary>
      <returns>該当する最後の項目のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindLastIndex``1(System.Predicate{``0})">
      <summary>指定した述語によって定義された条件に一致する要素を<see cref="T:System.Collections.Generic.List`1" />全体で検索し、最後に見つかった一致する項目の0から始まるインデックスを返します。</summary>
      <param name="match">検索する要素の条件を定義する<see cref="T:System.Predicate`1" />デリゲート。</param>
      <returns>該当する最後の項目のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
      <exception cref="T:System.ArgumentNullException">matchがnullです。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindLastIndex``1(System.Int32,System.Predicate{``0})">
      <summary>指定した述語によって定義された条件に一致する要素を、<see cref="T:System.Collections.Generic.List`1" />の最初の要素から指定したインデックスまでの範囲で検索し、最後に見つかった一致する項目の0から始まるインデックスを返します。</summary>
      <param name="startIndex">検索の開始位置を表す、0から始まるインデックス値を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="match">検索する要素の条件を定義する<see cref="T:System.Predicate`1" />デリゲート。</param>
      <returns>該当する最後の項目のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">startIndexが、<see cref="T:System.Collections.Generic.List`1" />の有効なインデックスの範囲から外れています。</exception>
      <exception cref="T:System.ArgumentNullException">matchがnullです。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.FindLastIndex``1(System.Int32,System.Int32,System.Predicate{``0})">
      <summary>指定した述語によって定義された条件に一致する要素を、<see cref="T:System.Collections.Generic.List`1" />の指定したインデックスで終わる指定した要素数の範囲で検索し、最後に見つかった一致する項目の0から始まるインデックスを返します。</summary>
      <param name="count">検索する項目の個数を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="startIndex">検索の開始位置を表す、0から始まるインデックス値を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="match">検索する要素の条件を定義する<see cref="T:System.Predicate`1" />デリゲート。</param>
      <returns>該当する最後の項目のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">countが0未満です。</exception>
      <exception cref="T:System.ArgumentNullException">matchがnullです。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.IndexOf(`0)">
      <summary>指定した<typeparamref name="T" />がコレクション内に存在する場合、そのコレクションでのインデックスを返します。</summary>
      <param name="value">コレクション内で検索する<typeparamref name="T" />。</param>
      <returns>
        <para> オブジェクトがコレクションに含まれている場合は、そのインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。 </para>
        <para> オブジェクトがコレクションに含まれない場合は、<b>-1</b>。 </para>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.InnerAddRange(System.Object[])">
      <summary>配列に含まれる項目を、コレクションの末尾に追加します。</summary>
      <param name="value">コレクションに追加するオブジェクトを含む<see cref="T:object" />型の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Insert(System.Int32,`0)">
      <summary>指定した<typeparamref name="T" />をコレクションの指定したインデックスに挿入します。</summary>
      <param name="value">挿入する<typeparamref name="T" />。</param>
      <param name="index">挿入位置を表す0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnAddRange(System.Object[])">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素配列を挿入する前に、追加のカスタム処理を実行します。</summary>
      <param name="value">追加される<b><see cref="T:System.Object">Object</see></b>配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnAddRangeComplete(System.Object[])">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素配列を挿入した後に、追加のカスタム処理を実行します。</summary>
      <param name="value">追加された<b><see cref="T:System.Object">Object</see></b>配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnClear">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnClearComplete">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.CollectionChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.CollectionChanging" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnInsert(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素を挿入する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">値を挿入する位置の０から始まるインデックス。</param>
      <param name="value">インデックスにある要素の新しい値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnInsertComplete(System.Int32,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">値を挿入する位置の０から始まるインデックス。</param>
      <param name="value">インデックスにある要素の新しい値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnRemove(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスから要素を削除するときに、追加のカスタム処理を実行します。</summary>
      <param name="index">削除された項目の、0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">削除された項目を表す<b><see cref="T:System.Object">Object</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnRemoveComplete(System.Int32,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">削除された項目の、0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">削除された項目を表す<b><see cref="T:System.Object">Object</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに値を設定する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">更新される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="oldValue">更新前の項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="newValue">インデックスにある要素の新しい値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">更新される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="oldValue">更新前の項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="newValue">インデックスにある要素の新しい値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.OnValidate(System.Object)">
      <summary>項目が検証されるとき、追加処理を実行します。</summary>
      <param name="value">検証される項目を表す<b><see cref="T:System.Object">Object</see></b></param>
      <exception cref="T:System.ArgumentNullException">valueがnullです。</exception>
      <exception cref="T:InvalidOperationException">コレクションがロックされています。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.Remove(`0)">
      <summary>指定した<typeparamref name="T" />をコレクションから削除します。</summary>
      <param name="value">コレクションから削除する<typeparamref name="T" />。</param>
      <exception cref="T:System.ArgumentException">指定されたオブジェクトがコレクション内で見つかりません。</exception>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.CollectionChanged">
      <summary>CollectionChanged イベントのハンドラを示す <see cref="T:System.ComponentModel.CollectionChangeEventHandler" /> オブジェクト。</summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.CollectionBase`1.CollectionChanging">
      <summary>CollectionChanging イベントのハンドラを示す <see cref="T:System.ComponentModel.CollectionChangeEventHandler" /> オブジェクト。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateText">
      <summary>
        <b>ComboBoxAlternateText</b>クラスを定義します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo">
      <summary>
        <b>ComboBoxAlternateTextInfo</b>クラスを定義します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo.DisplayNull">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateTextInfo" />型の<b>DisplayNull</b>インスタンスを取得します。</summary>
      <value>
        <b>DisplayNull</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo.Null">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateTextInfo" />型の<b>Null</b>インスタンスを取得します。</summary>
      <value>
        <b>Null</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDown">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDown" />機能の設定を表します。</summary>
      <remarks>このクラスはドロップダウン機能の設定を提供します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDown.AutoWidth">
      <summary>ドロップダウンリストを開くときにドロップダウンウィンドウの幅を計算するかどうかを取得または設定します。</summary>
      <value>ドロップダウンを開くときに列の幅とコントロールの幅に従ってドロップダウンウィンドウの幅を計算する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。デフォルト値は<see langword="false" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDown.Height">
      <summary>ドロップダウンの高さを取得または設定します。</summary>
      <value>ドロップダウンの高さ。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />がゼロ未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDown.Size">
      <summary>ドロップダウンウィンドウのサイズを取得または設定します。</summary>
      <value>ドロップダウンウィンドウのサイズを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDown.Size" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDown.Width">
      <summary>ドロップダウンの幅を取得または設定します。</summary>
      <value>ドロップダウンの幅。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />がゼロ未満です。</exception>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType" />のドロップダウン機能のドロップダウン設定を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.AllowResize">
      <summary>ユーザーがサイズ変更グリップを使用してドロップダウンウィンドウのサイズを変更できるかどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" />値。サイズ変更グリップによってドロップダウンウィンドウのサイズを変更できる場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.AutoWidth">
      <summary>ドロップダウンリストを開くときにドロップダウンウィンドウの幅を計算するかどうかを取得または設定します。</summary>
      <value>ドロップダウンを開くときに列とコントロールの幅に従ってドロップダウンウィンドウの幅を計算する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。デフォルト値は<see langword="false" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.Height">
      <summary>ドロップダウンの高さを取得または設定します。</summary>
      <value>ドロップダウンの高さ。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />がゼロ未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.Width">
      <summary>ドロップダウンの幅を取得または設定します。</summary>
      <value>ドロップダウンの幅。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />がゼロ未満です。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateText">
      <summary>
        <b>
          <see cref="T:GrapeCity.Win.Editors.GcDate">GcDate</see>
        </b>コントロールの <b><see cref="P:GrapeCity.Win.Editors.GcDate.Value">Value</see></b> プロパティが<b>Nothing</b>の場合や、 和暦表示できない日付が設定された場合に表示する文字列を定義します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateText.DisplayEmptyEra">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>DisplayEmptyEra</b> インスタンスを取得します。</summary>
      <value>
        <b>DisplayEmptyEra</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateText.DisplayNull">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>DisplayNull</b> インスタンスを取得します。</summary>
      <value>
        <b>DisplayNull</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateText.EmptyEra">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>EmptyEra</b> インスタンスを取得します。</summary>
      <value>
        <b>EmptyEra</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateText.Null">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>Null</b> インスタンスを取得します。</summary>
      <value>
        <b>Null</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateTextInfo">
      <summary>
        <b>DateAlternateTextInfo</b> クラスを定義します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateTextInfo.DisplayEmptyEra">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>DisplayEmptyEra</b> インスタンスを取得します。</summary>
      <value>
        <b>DisplayEmptyEra</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateTextInfo.DisplayNull">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>DisplayNull</b> インスタンスを取得します。</summary>
      <value>
        <b>DisplayNull</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateTextInfo.EmptyEra">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>EmptyEra</b> インスタンスを取得します。</summary>
      <value>
        <b>EmptyEra</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateTextInfo.Null">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>Null</b> インスタンスを取得します。</summary>
      <value>
        <b>Null</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateDisplayFieldInfosBuilder">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo" />クラスによって指定された書式を作成するビルダーを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateDisplayFieldInfosBuilder.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateDisplayFieldInfosBuilder" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateDisplayFieldInfosBuilder.BuildFields(System.String)">
      <summary>指定した書式を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo" />オブジェクトを作成します。</summary>
      <param name="format">日付コントロールによって定義された書式。</param>
      <returns>作成された日付フィールドを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo" />の配列。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateFieldInfosBuilder">
      <summary>指定した書式を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateFieldInfo" />オブジェクトを作成するビルダーを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateFieldInfosBuilder.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateFieldInfosBuilder" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateFieldInfosBuilder.BuildFields(System.String)">
      <summary>指定した書式を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateFieldInfo" />オブジェクトを作成します。</summary>
      <param name="format">日付コントロールによって定義された書式。</param>
      <returns>作成された日付フィールドを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateFieldInfo" />の配列。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpin">
      <summary>日付のスピン機能の設定を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateSpin.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpin" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateSpin.IncrementValue">
      <summary>スピン動作による値の変化量を取得または設定します。</summary>
      <value>増分値を示す<see cref="T:System.TimeSpan" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateSpin.SpinMode">
      <summary>スピンの動作モードを取得または設定します。</summary>
      <value>スピン操作の実行方法を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpinMode" />列挙体。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDisplayFieldCollectionInfo">
      <summary>
        <b>GcDateTimeCellType</b> の表示フィールドコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDisplayFieldCollectionInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDisplayFieldCollectionInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDisplayFieldCollectionInfo.AddRange(System.String)">
      <summary>指定した書式文字列から作成された内容をコレクションの最後に追加します。</summary>
      <param name="format">指定した書式文字列を示す <b>string</b> 値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDown">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" />のドロップダウン機能のドロップダウン設定を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDown.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDown" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDown.DropDownType">
      <summary>ドロップダウンのタイプを取得または設定します。</summary>
      <value>ドロップダウンのタイプを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateDropDownType" />値の1つ。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />のドロップダウン機能のドロップダウン設定を表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownInfo.DropDownType">
      <summary>ドロップダウンタイプを取得または設定します。</summary>
      <value>ドロップダウンのタイプを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateDropDownType" />値の1つ。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker">
      <summary>日付時刻値のドロップダウンピッカーを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.BackColor">
      <summary>ドロップダウンピッカーの背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />の背景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.Window" />です。</value>
      <remarks>
        <b>BackColor</b> プロパティを使用すると、コントロールの背景色をフォームの配色に融合させることができます。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.ButtonBackColor">
      <summary>ドロップダウンピッカーのボタンの背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />のボタンの背景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.Control" />です。</value>
      <remarks>
        <b>ButtonBackColor</b>プロパティを使用して、ドロップダウンピッカーのボタンの背景色を変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.ButtonForeColor">
      <summary>ドロップダウンピッカーのボタンの前景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />のボタンの前景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.ControlText" />です。</value>
      <remarks>
        <b>ButtonForeColor</b>プロパティを使用して、ドロップダウンピッカーのボタンの前景色を変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.DateTabText">
      <summary>日付タブに表示されるテキストを取得または設定します。</summary>
      <value>日付タブに表示されるテキストを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.FlatStyle">
      <summary>ドロップダウンピッカーの外観を取得または設定します。</summary>
      <value>コントロールの外観を示す<see cref="T:System.Windows.Forms.FlatStyle" />値。<br />デフォルト値は<see cref="F:System.Windows.Forms.FlatStyle.System" />です。</value>
      <remarks>
        <b>FlatStyle</b> プロパティは、コントロールの表示を取得または設定する場合に使用します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.ForeColor">
      <summary>ドロップダウンピッカーの前景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />の前景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.GrayText" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.HeaderBackColor">
      <summary>ヘッダの空白領域の背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />のヘッダの空白領域の背景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.Control" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.SelectedBackColor">
      <summary>ドロップダウンピッカーの強調表示の背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />の強調表示の背景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.Window" />です。</value>
      <remarks>
        <b>BackColor</b>プロパティを使用して、ドロップダウンピッカーの強調表示の背景色を変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.SelectedBorderColor">
      <summary>ドロップダウンピッカーが選択されているときの境界線の色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />が選択されているときの境界線の色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.WindowFrame" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.SelectedForeColor">
      <summary>ドロップダウンピッカーが選択されているときの前景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />が選択されているときの前景線の色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.WindowText" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.SelectionRenderMode">
      <summary>ドロップダウンピッカーの選択レンダリングモードを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />の選択レンダリングモードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode" />値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode.Border" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.ShowPickers">
      <summary>ドロップダウンピッカーの表示オプションを取得または設定します。</summary>
      <value>ドロップダウンピッカーの表示オプションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PickerDisplayOptions" />値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.PickerDisplayOptions.Both" />です。</value>
      <remarks>
        <b>ShowPickers</b>プロパティは、ドロップダウンピッカーの表示オプションを取得または設定する場合に使用します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.SingleBorderColor">
      <summary>一重境界線の色を取得または設定します。</summary>
      <value>コントロールの境界線の色を指定する<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [WindowFrame]</b>です。</value>
      <remarks>この色は、BorderStyleがFixedSingleの場合にのみ有効です。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.TabForeColor">
      <summary>タブの前景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />のタブの前景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.ControlText" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker.TimeTabText">
      <summary>時刻タブに表示されるテキストを取得または設定します。</summary>
      <value>時刻タブに表示されるテキストを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPickerInfo">
      <summary>日付時刻値のドロップダウンピッカーを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPickerInfo.DateTabText">
      <summary>日付タブに表示されるテキストを取得または設定します。</summary>
      <value>日付タブに表示されるテキストを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPickerInfo.HeaderBackColor">
      <summary>ヘッダの空白領域の背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />のヘッダの空白領域の背景色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.Control" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPickerInfo.ShowPickers">
      <summary>ドロップダウンピッカーの表示オプションを取得または設定します。</summary>
      <value>ドロップダウンピッカーの表示オプションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PickerDisplayOptions" />値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.PickerDisplayOptions.Both" />です。</value>
      <remarks>
        <b>ShowPickers</b>プロパティは、ドロップダウンピッカーの表示オプションを取得または設定する場合に使用します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPickerInfo.TabForeColor">
      <summary>タブの前景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />のタブの前景色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.ControlText" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPickerInfo.TimeTabText">
      <summary>時刻タブに表示されるテキストを取得または設定します。</summary>
      <value>時刻タブに表示されるテキストを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeFieldCollectionInfo">
      <summary>読み取り専用の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateFieldInfo" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateTimeFieldCollectionInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeFieldCollectionInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateTimeFieldCollectionInfo.AddRange(System.String)">
      <summary>指定した書式文字列から作成された内容をコレクションの最後に追加します。</summary>
      <param name="format">指定した書式文字列を示す <b>string</b> 値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateTimeFieldCollectionInfo.OnAddRange(System.Object[])">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素配列を挿入する前に、追加のカスタム処理を実行します。</summary>
      <param name="value">追加される<b><see cref="T:System.Object">Object</see></b>配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateTimeFieldCollectionInfo.OnInsert(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素を挿入する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">値を挿入する位置の０から始まるインデックス。</param>
      <param name="value">インデックスにある要素の新しい値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DateTimeFieldCollectionInfo.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに値を設定する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">更新される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="oldValue">更新前の項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="newValue">指定したインデックスにある要素の新しい値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday">
      <summary>月、週、曜日によって定義される休日を追加します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.#ctor">
      <summary>指定した日付を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.#ctor(GrapeCity.Win.Spread.InputMan.CellType.MonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags)">
      <summary>指定した日付を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="month">月を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" />列挙値。</param>
      <param name="weekdayOrder">月の第X曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" />列挙値。</param>
      <param name="dayOfWeek">曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" />列挙値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.#ctor(System.String,GrapeCity.Win.Spread.InputMan.CellType.MonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags)">
      <summary>指定した日付を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">休日の名前を示す<see cref="T:System.String" />値。</param>
      <param name="month">月を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" />列挙値。</param>
      <param name="weekdayOrder">月の第X曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" />列挙値。</param>
      <param name="dayOfWeek">曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" />列挙値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.DayOfWeek">
      <summary>曜日を取得または設定します。</summary>
      <value>曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" />列挙値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.NotSet" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.DayOfWeekInMonth">
      <summary>休日が適用される週を取得または設定します。</summary>
      <value>月の第X曜日を表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" />列挙値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.NotSet" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.IsYearly">
      <summary>DayOfWeekHolidayが毎年適用されるかどうかを取得します。</summary>
      <value>DayOfWeekHolidayが毎年適用される場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>この実装のDayOfWeekHolidayは毎年繰り返されるため、常に<see langword="true" />の値が返されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.Month">
      <summary>休日が適用される月を取得または設定します。</summary>
      <value>月を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" />列挙値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.NotSet" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.Name">
      <summary>休日の名称を取得または設定します。</summary>
      <value>休日の名称を表す<b><see cref="T:System.String">String</see></b>値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.Clone">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday" /> オブジェクトのシャローコピーを作成します。</summary>
      <returns>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday" /> のシャローコピー。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.IsHoliday(System.DateTime)">
      <summary>指定の日付がオブジェクトに関連付けられているかどうかを返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定された日付がオブジェクトに関連付けられています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定された日付はオブジェクトに関連付けられていません。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHoliday.TypeOfDay(System.DateTime)">
      <summary>指定の日付の種類を返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>日のタイプを表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> 列挙体。</returns>
      <remarks>このメソッドは、<b>date</b>がDayOfWeekHolidayの場合は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Holiday" />を返し、それ以外の場合は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Normal" />を返します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle">
      <summary>各曜日の表示スタイルを定義します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.#ctor(System.String,GrapeCity.Win.Spread.InputMan.CellType.ReflectTitle,GrapeCity.Win.Spread.InputMan.CellType.SubStyle,GrapeCity.Win.Spread.InputMan.CellType.WeekFlags)">
      <summary>指定した初期化プロパティを使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dayName">曜日の名前を示す<see cref="T:System.String" />値。</param>
      <param name="reflectToTitle">タイトルへの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle" />の適用方法に関するポリシーを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.ReflectToTitle" />値。</param>
      <param name="subStyle">表示スタイルを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle" />値。</param>
      <param name="weekFlags">スタイルを適用する月の週を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.WeekFlags" />値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.DayName">
      <summary>曜日タイトルのキャプションを取得または設定します。</summary>
      <value>曜日の名前を示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.ReflectToTitle">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.ReflectToTitle" /> 値を取得または設定します。</summary>
      <value>タイトルへの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle" />の適用方法に関するポリシーを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ReflectTitle" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle" /> 値を取得または設定します。</summary>
      <value>表示スタイルを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.WeekFlags">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.WeekFlags" /> 値を取得または設定します。</summary>
      <value>スタイルを適用する月の週を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.WeekFlags" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.Clone">
      <summary>この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> オブジェクトをコピーすることによって新しいインスタンスを作成します。</summary>
      <returns>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> オブジェクトを返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.Dispose">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> で使用されているリソースを解放します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.Equals(System.Object)">
      <summary>指定したオブジェクトが現在のインスタンスと等しいかどうかを判断します。</summary>
      <param name="obj">現在の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> と比較する <see cref="T:System.Object" />。</param>
      <returns>value が <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> のインスタンスで、このインスタンスの値と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.GetHashCode">
      <summary>オブジェクトのハッシュコードを返します。</summary>
      <returns>ハッシュコードを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" />オブジェクトが変更されたときに発生します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.PropertyChangedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.OnSubStylePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle" />オブジェクトが変更されたときに発生します。</summary>
      <param name="e">イベントデータを格納している<b><see cref="System.ComponentModel.PropertyChangedEventArgs">PropertyChangedEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.OnSubStylePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>SubStyleからPropertyChangedイベントを受け取ります。</summary>
      <param name="sender">送信元を示す<b>object</b>。</param>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.PropertyChangedEventArgs" />値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />のデフォルト値を定義する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn" />クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.AutoWidth">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />の幅が自動的に計算されるかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />の幅が自動的に計算される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="false" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.DataDisplayType">
      <summary>列の表示を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.DataDisplayType" />値を取得または設定します。</summary>
      <value>列の表示を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.DataDisplayType" />値。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType.Text" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.DefaultSubItem">
      <summary>デフォルトの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />のデフォルト設定を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.DefaultSubItem" />インスタンス。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.Header">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" />を取得または設定します。</summary>
      <value>リストコントロールのヘッダを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" />インスタンス。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.SortOrder">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.SortOrder" />を取得または設定します。</summary>
      <value>ソート時の順序を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.SortOrder" />値。<br /> デフォルト値は<see cref="F:System.Windows.Forms.SortOrder.None" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.Visible">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />が表示されるかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。表示される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.Width">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />の幅を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />の幅を示す<see cref="T:System.Int32" />値。<br /> デフォルト値は60です。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.ResetDefaultSubItem">
      <summary>デフォルトサブ項目をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.ResetHeader">
      <summary>ヘッダをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.ShouldSerializeDefaultSubItem">
      <summary>デフォルトサブ項目をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn.ShouldSerializeHeader">
      <summary>ヘッダをシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />のデフォルト値を定義する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo" />クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.#ctor">
      <summary>デフォルトコンストラクター</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.AutoWidth">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />の幅が自動的に計算されるかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />の幅が自動的に計算される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="false" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.DataDisplayType">
      <summary>列の表示を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.DataDisplayType" />値を取得または設定します。</summary>
      <value>列の表示を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.DataDisplayType" />値。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType.Text" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.DefaultSubItem">
      <summary>デフォルトの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />のデフォルト設定を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.DefaultSubItem" />インスタンス。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.Header">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo" />を取得または設定します。</summary>
      <value>リストコントロールのヘッダを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" />インスタンス。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.SortOrder">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.SortOrder" />を取得または設定します。</summary>
      <value>ソート時の順序を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.SortOrder" />値。<br /> デフォルト値は<see cref="F:System.Windows.Forms.SortOrder.None" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.Visible">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />が表示されるかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。表示される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.Width">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />の幅を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />オブジェクトの幅を示す<see cref="T:System.Int32" />値。<br /> デフォルト値は60です。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.ResetDefaultSubItem">
      <summary>デフォルトサブ項目をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.ResetHeader">
      <summary>ヘッダをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.ShouldSerializeDefaultSubItem">
      <summary>デフォルトサブ項目をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo.ShouldSerializeHeader">
      <summary>ヘッダをシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />のデフォルト値を定義する<b>DefaultSubItem</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ContentAlignment">
      <summary>内容の配置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ContentAlignment" />値を取得または設定します。</summary>
      <value>内容の配置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ContentAlignment" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.Ellipsis">
      <summary>内容を描画する十分なスペースがないときに省略記号を使用するかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。内容を描画する十分なスペースがないときに省略記号を使用する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.Padding">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />の内容と境界との間隔を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.Padding" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />の内容と境界との間隔を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.Padding" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.WordWrap">
      <summary>内容が折り返されるかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。内容が折り返される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ResetContentAlignment">
      <summary>
        <b>ContentAlignment</b>をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ResetEllipsis">
      <summary>
        <b>Ellipsis</b>をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ResetPadding">
      <summary>
        <b>Padding</b>をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ResetWordWrap">
      <summary>
        <b>WordWrap</b>をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ShouldSerializeContentAlignment">
      <summary>
        <b>ContentAlignment</b>をシリアル化する必要があるかどうかを示します。</summary>
      <returns>
        <see langword="bool" />値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ShouldSerializeEllipsis">
      <summary>
        <b>Ellipsis</b>をシリアル化する必要があるかどうかを示します。</summary>
      <returns>
        <see langword="bool" />値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ShouldSerializePadding">
      <summary>
        <b>Padding</b>をシリアル化する必要があるかどうかを示します。</summary>
      <returns>
        <see langword="bool" />値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem.ShouldSerializeWordWrap">
      <summary>
        <b>WordWrap</b>をシリアル化する必要があるかどうかを示します。</summary>
      <returns>
        <see langword="bool" />値。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />クラスのデフォルト値の定義に使用される<b>DefaultSubItemInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ContentAlignment">
      <summary>内容の配置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ContentAlignment" />値を取得または設定します。</summary>
      <value>内容の配置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ContentAlignment" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.Ellipsis">
      <summary>内容を描画する十分なスペースがないときに省略記号を使用するかどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" />値。内容を描画する十分なスペースがないときに省略記号を使用する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.Padding">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />オブジェクトの内容と境界との間隔を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.Padding" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />オブジェクトの内容と境界との間隔を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.Padding" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.WordWrap">
      <summary>内容が折り返されるかどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" />値。内容が折り返される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ResetContentAlignment">
      <summary>
        <b>ContentAlignment</b>設定をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ResetEllipsis">
      <summary>
        <b>Ellipsis</b>設定をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ResetPadding">
      <summary>
        <b>Padding</b>設定をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ResetWordWrap">
      <summary>
        <b>WordWrap</b>設定をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ShouldSerializeContentAlignment">
      <summary>
        <b>ContentAlignment</b>をシリアル化する必要があるかどうかを示します。</summary>
      <returns>
        <see langword="bool" />値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ShouldSerializeEllipsis">
      <summary>
        <b>Ellipsis</b>をシリアル化する必要があるかどうかを示します。</summary>
      <returns>
        <see langword="bool" />値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ShouldSerializePadding">
      <summary>
        <b>Padding</b>をシリアル化する必要があるかどうかを示します。</summary>
      <returns>
        <see langword="bool" />値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo.ShouldSerializeWordWrap">
      <summary>
        <b>WordWrap</b>をシリアル化する必要があるかどうかを示します。</summary>
      <returns>
        <see langword="bool" />値。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcCharMaskCellSettings">
      <summary>デザイナによってのみ使用されます。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcCharMaskCellSettings.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcCharMaskCellSettings" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcCharMaskCellSettings.CellType">
      <summary>セルの型を取得または設定します。</summary>
      <value>セルの型。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcCharMaskCellSettings.CellTypeSettingControl">
      <summary>セル型設定コントロールを取得します。デザイナが内部で使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcCharMaskCellSettings.GetProperty(System.String)">
      <summary>プロパティを取得します。</summary>
      <param name="name">名前。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcComboBoxCellSettings">
      <summary>デザイナによってのみ使用されます。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcComboBoxCellSettings.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcComboBoxCellSettings" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcComboBoxCellSettings.CellType">
      <summary>セルの型を取得または設定します。</summary>
      <value>セルの型。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcComboBoxCellSettings.CellTypeSettingControl">
      <summary>セル型設定コントロールを取得します。デザイナが内部で使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcComboBoxCellSettings.GetProperty(System.String)">
      <summary>プロパティを取得します。</summary>
      <param name="name">名前。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcDateTimeCellSettings">
      <summary>デザイナによってのみ使用されます。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcDateTimeCellSettings.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcDateTimeCellSettings" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcDateTimeCellSettings.CellType">
      <summary>セルの型を取得または設定します。</summary>
      <value>セルの型。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcDateTimeCellSettings.CellTypeSettingControl">
      <summary>セル型設定コントロールを取得します。デザイナが内部で使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcDateTimeCellSettings.GetProperty(System.String)">
      <summary>プロパティを取得します。</summary>
      <param name="name">名前。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcMaskCellSettings">
      <summary>デザイナによってのみ使用されます。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcMaskCellSettings.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcMaskCellSettings" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcMaskCellSettings.CellType">
      <summary>セルの型を取得または設定します。</summary>
      <value>セルの型。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcMaskCellSettings.CellTypeSettingControl">
      <summary>セル型設定コントロールを取得します。デザイナが内部で使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcMaskCellSettings.GetProperty(System.String)">
      <summary>プロパティを取得します。</summary>
      <param name="name">名前。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcNumberCellSettings">
      <summary>デザイナによってのみ使用されます。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcNumberCellSettings.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcNumberCellSettings" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcNumberCellSettings.CellType">
      <summary>セルの型を取得または設定します。</summary>
      <value>セルの型。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcNumberCellSettings.CellTypeSettingControl">
      <summary>セル型設定コントロールを取得します。デザイナが内部で使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcNumberCellSettings.GetProperty(System.String)">
      <summary>プロパティを取得します。</summary>
      <param name="name">名前。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTextCellSettings">
      <summary>デザイナによってのみ使用されます。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTextCellSettings.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTextCellSettings" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTextCellSettings.CellType">
      <summary>セルの型を取得または設定します。</summary>
      <value>セルの型。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTextCellSettings.CellTypeSettingControl">
      <summary>セル型設定コントロールを取得します。デザイナが内部で使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTextCellSettings.GetProperty(System.String)">
      <summary>プロパティを取得します。</summary>
      <param name="name">名前。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTimeSpanCellSettings">
      <summary>デザイナによってのみ使用されます。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTimeSpanCellSettings.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTimeSpanCellSettings" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTimeSpanCellSettings.CellType">
      <summary>セルの型を取得または設定します。</summary>
      <value>セルの型。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTimeSpanCellSettings.CellTypeSettingControl">
      <summary>セル型設定コントロールを取得します。デザイナが内部で使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DesignerGcTimeSpanCellSettings.GetProperty(System.String)">
      <summary>プロパティを取得します。</summary>
      <param name="name">名前。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDown">
      <summary>
        <b>DropDown</b> 機能の設定を表します。</summary>
      <remarks>このクラスはドロップダウン機能の設定を提供します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop">
      <summary>ドロップアクションを許可するかどうかを示す値を取得または設定します。</summary>
      <value>ドロップを許可する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowResize">
      <summary>ユーザーがサイズ変更グリップを使用してドロップダウンウィンドウのサイズを変更できるかどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" />値。サイズ変更グリップによってドロップダウンウィンドウのサイズを変更できる場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AutoDropDown">
      <summary>コントロールがフォーカスを取得したときにドロップダウンウィンドウが自動的に表示されるかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。コントロールがフォーカスを取得したときにドロップダウンウィンドウが自動的に表示される場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>
        <b>AutoDropDown</b>と<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" />が両方とも<see langword="true" />の場合は、ドロップダウンウィンドウが自動的に表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AutoHideTouchKeyboard">
      <summary>ドロップダウンウィンドウがドロップダウンしたときのタッチキーボードの操作方法を示す値を取得または設定します。</summary>
      <value>ユーザーがドロップダウンウィンドウを開いたときのタッチキーボードの非表示動作オプションを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AutoHideTouchKeyboard" />値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AutoHideTouchKeyboard.AutoHide">AutoHide</see>です。この場合、ドロップダウンが表示されるとタッチキーボードは隠れます。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.ClosingAnimation">
      <summary>ドロップダウンウィンドウを閉じるときのアニメーションの処理方法を取得または設定します。</summary>
      <value>ドロップダウンウィンドウを閉じるときのアニメーションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation" />値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.None" />です。</value>
      <remarks>このプロパティは、ドロップダウンウィンドウが閉じるときに表示されるアニメーションスタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.Direction">
      <summary>ドロップダウンの表示方向を取得または設定します。</summary>
      <value>ドロップダウン方向。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.Default" /> です。</value>
      <remarks>このプロパティは、ドロップダウンウィンドウが開くときの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection" />を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.OpeningAnimation">
      <summary>ドロップダウンウィンドウを開くときのアニメーションの処理方法を取得または設定します。</summary>
      <value>ドロップダウンウィンドウを開くときのアニメーションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation" />値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.None" />です。</value>
      <remarks>このプロパティは、ドロップダウンウィンドウが開くときに表示されるアニメーションスタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.ShowShadow">
      <summary>ドロップダウンダイアログに影を付けるかどうかを示す <see langword="bool" /> 値を取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。ドロップダウンダイアログに影を付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.Size">
      <summary>ドロップダウンウィンドウのサイズを取得または設定します。</summary>
      <value>ドロップダウンウィンドウのサイズを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.Size" />値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton">
      <summary>
        <b>DropDownButton</b>クラスの設定を表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton.IsDefaultBehavior">
      <summary>このインスタンスがデフォルト動作かどうかを示す値を取得または設定します。</summary>
      <value>このボタンがデフォルトのドロップダウン動作を制御する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton.UseVisualStyleBackColor">
      <summary>フラットスタイルがシステムで、なおかつシステムテーマがアクティブなときに、ビジュアルスタイルの背景色を使用するかどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" />値。フラットスタイルがシステムで、なおかつシステムテーマがアクティブなときに、ビジュアルスタイルの背景色を使用する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="true" />です。</value>
      <remarks>このプロパティは <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" /> に対して無効です。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButtonInfo">
      <summary>ドロップダウンボタンを実装します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownButtonInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownButtonInfo.IsDefaultBehavior">
      <summary>このインスタンスがデフォルト動作かどうかを示す値を取得または設定します。</summary>
      <value>このボタンがデフォルトのドロップダウン動作を制御する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="true" /> です。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator">
      <summary>
        <b>DropDownCalculator</b>の設定を表します。</summary>
      <remarks>このクラスは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />のドロップダウン電卓のデータパッケージを提供します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.BackColor">
      <summary>ドロップダウンウィンドウの背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />の背景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.Control" />です。</value>
      <remarks>
        <b>BackColor</b> プロパティを使用すると、コントロールの背景色をフォームの配色に融合させることができます。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.BackgroundImage">
      <summary>背景画像を取得または設定します。</summary>
      <value>ドロップダウンウィンドウの背景に表示する画像を表す<see cref="T:System.Drawing.Image" />。<br />デフォルト値は<see langword="null" />です。</value>
      <remarks>半透明の色または透過色を使った画像は、背景画像として適切に表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.BackgroundImageLayout">
      <summary>背景画像の配置を取得または設定します。</summary>
      <value>背景画像のレイアウトを示す<see cref="T:System.Windows.Forms.ImageLayout" />値。<br />デフォルト値は<b>ImageLayout.Tile</b>です。</value>
      <remarks>
        <b>BackgroundImageLayout</b>プロパティは、コントロールに配置した画像の位置と動作を指定する場合に使用します。<b>BackgroundImageLayout</b>は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.BackgroundImage" />プロパティが設定されている場合にのみ有効です。<pare /> 画像が大きい場合は、<b>BackgroundImageLayout</b>を<see cref="F:System.Windows.Forms.ImageLayout.Tile" />以外の値に設定するとパフォーマンスが向上します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.BorderStyle">
      <summary>ドロップダウンウィンドウの境界線のスタイルを取得または設定します。</summary>
      <value>境界線スタイルを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.BorderStyle" />列挙体。<br />デフォルト値は<see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />です。</value>
      <remarks>
        <b>BorderStyle</b> プロパティを使用すると、既定の3次元コントロールに加えて、境界線のないフラットスタイルのコントロールを作成できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ButtonKeys">
      <summary>
        <b>DropDownCalculator</b>のボタン名を含む固定サイズのArrayListを取得します。</summary>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />のすべてのボタンのキーを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ButtonMappings">
      <summary>ボタン項目のショートカットキーを取得または設定します。</summary>
      <value>ボタンマッピングコレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />オブジェクト。</value>
      <remarks>キーとボタンとのボタンマッピング関係を追加または削除できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ButtonText">
      <summary>標準のキャプションを置き換えるすべてのテキストを保持するコレクションを示します。</summary>
      <value>すべての電卓ボタンのテキストのコレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />。</value>
      <remarks>このプロパティによってすべてのボタンのテキスト文字列を変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ContentAlignment">
      <summary>テキストの配置を示す<see cref="T:System.Drawing.ContentAlignment" />値を取得または設定します。</summary>
      <value>
        <see cref="T:System.Drawing.ContentAlignment" />値。<br />デフォルト値は<see cref="F:System.Drawing.ContentAlignment.MiddleRight" />です。</value>
      <remarks>このプロパティは、各ボタンのテキストの配置を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.Cursor">
      <summary>マウスポインタがドロップダウンビューの上にあるときに表示されるカーソルを取得または設定します。</summary>
      <value>カーソルを表す<b><see cref="T:System.Windows.Forms.Cursor">Cursor</see></b>オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.EditButtons">
      <summary>編集に関連するボタンのボタンスタイルを取得または設定します。</summary>
      <value>編集ボタンの描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />オブジェクト。</value>
      <remarks>このプロパティは、すべての編集ボタンの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.FlatStyle">
      <summary>ドロップダウンウィンドウの外観スタイルを取得または設定します。</summary>
      <value>コントロールの外観を示す<see cref="T:System.Windows.Forms.FlatStyle" />値。</value>
      <remarks>
        <b>FlatStyle</b> プロパティは、コントロールの表示スタイルを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.Font">
      <summary>ドロップダウンウィンドウで使用されるフォントを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />のフォントを示す<see cref="T:System.Drawing.Font" />オブジェクト。</value>
      <remarks>
        <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.MathButtons">
      <summary>演算に関連するボタンのボタンスタイルを取得または設定します。</summary>
      <value>演算に関連するボタンの描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />オブジェクト。</value>
      <remarks>このプロパティは、すべての演算ボタンの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.MemoryButtons">
      <summary>メモリに関連するボタンのボタンスタイルを取得または設定します。</summary>
      <value>メモリに関連するボタンの描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />オブジェクト。</value>
      <remarks>このプロパティは、すべてのメモリボタンの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.MemoryStatus">
      <summary>メモリ状態のボタンスタイルを取得または設定します。</summary>
      <value>MemoryCaptionの描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />オブジェクト。</value>
      <remarks>このプロパティは、メモリ状態ボタンの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.NumericButtons">
      <summary>数値に関連するボタンのボタンスタイルを取得または設定します。</summary>
      <value>数値ボタンの描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />オブジェクト。</value>
      <remarks>このプロパティは、すべての数値ボタンの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.Output">
      <summary>出力に関連するボタンのボタンスタイルを取得または設定します。</summary>
      <value>出力結果の描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />オブジェクト。</value>
      <remarks>このプロパティは、出力領域の表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.OutputHeight">
      <summary>出力領域の高さを取得または設定します。</summary>
      <value>出力領域の高さを示す<see cref="T:System.Int32" />値。</value>
      <remarks>このプロパティの値がゼロの場合、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />の出力領域の高さは自動的に計算されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.Padding">
      <summary>ドロップダウン電卓内部の余白を取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.Padding" />値。<br />デフォルト値は"5, 5, 5, 5"です。</value>
      <remarks>このプロパティは、この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />の電卓領域と境界線との間隔を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ResetButtons">
      <summary>リセットに関連するボタンのボタンスタイルを取得または設定します。</summary>
      <value>リセットボタンの描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />オブジェクト。</value>
      <remarks>このプロパティは、すべてのリセットボタンの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ShowOutput">
      <summary>出力領域を表示するかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>出力領域を表示するかどうかを示す<see langword="bool" />値。</value>
      <remarks>このプロパティは、出力領域を表示するかどうかを決定します。値が<see langword="false" />の場合、出力は<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールのEditBoxに表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.SingleBorderColor">
      <summary>ドロップダウンウィンドウの一重境界線の色を取得または設定します。</summary>
      <value>コントロールの境界線の色を指定する<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [WindowFrame]</b>です。</value>
      <remarks>この<see cref="T:System.Drawing.Color" />は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.BorderStyle" />が<b>FixedSingle</b>の場合にのみ有効です。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.Text">
      <summary>
        <b>DropDownCalculator</b>のテキストを取得または設定します。</summary>
      <value>テキストを示す<see cref="T:System.String" />値。<br />デフォルト値は"0."です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.Value">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />の値を取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />の値を示す<see cref="T:System.Nullable`1" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ResetPadding">
      <summary>キャラクターボックスのパディングをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.SetButtonStyle(GrapeCity.Win.Spread.InputMan.CellType.KeyGroups,GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle)">
      <summary>指定したスタイルを使用して、定義されたグループを描画します。</summary>
      <param name="groups">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups" />値の1つ。</param>
      <param name="style">指定したグループの描画に使用する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />。</param>
      <remarks>このメソッドは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups" />を表示するために特定の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyle" />設定を適用します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.SetButtonStyle(GrapeCity.Win.Spread.InputMan.CellType.KeyGroups,System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.TextEffect)">
      <summary>指定したスタイル要素を使用して、定義されたグループを描画します。</summary>
      <param name="groups">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups" />値の1つ。</param>
      <param name="foreColor">前景色。</param>
      <param name="backColor">背景色。</param>
      <param name="textEffect">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextEffect" />値の1つ。</param>
      <remarks>このメソッドは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups" />を表示するために前景色、背景色、および<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextEffect" />の設定を適用します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator.ShouldSerializePadding">
      <summary>Paddingプロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo">
      <summary>ドロップダウンカレンダーに関する情報を表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />の背景色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.Control" />です。</value>
      <remarks>
        <b>BackColor</b> プロパティを使用すると、コントロールの背景色をフォームの配色に融合させることができます。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.BackgroundImage">
      <summary>背景画像を取得または設定します。</summary>
      <value>ドロップダウンウィンドウの背景に表示する画像を表す<see cref="T:System.Drawing.Image" />。<br /> デフォルト値は<see langword="null" />です。</value>
      <remarks>半透明の色または透過色を使った画像は、背景画像として適切に表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.BackgroundImageLayout">
      <summary>背景画像の配置を取得または設定します。</summary>
      <value>背景画像のレイアウトを示す<see cref="T:System.Windows.Forms.ImageLayout" />値。<br /> デフォルト値は<b>ImageLayout.Tile</b>です。</value>
      <remarks>
        <b>BackgroundImageLayout</b>プロパティは、コントロールに配置した画像の位置と動作を指定する場合に使用します。<b>BackgroundImageLayout</b>は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.BackgroundImage" />プロパティが設定されている場合にのみ有効です。<pare /> 画像が大きい場合は、<b>BackgroundImageLayout</b>を<see cref="F:System.Windows.Forms.ImageLayout.Tile" />以外の値に設定するとパフォーマンスが向上します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.BorderStyle">
      <summary>ドロップダウンウィンドウの境界線スタイルを取得または設定します。</summary>
      <value>境界線スタイルを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.BorderStyle" />列挙体。<br /> デフォルト値は<see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />です。</value>
      <remarks>
        <b>BorderStyle</b> プロパティを使用すると、既定の3次元コントロールに加えて、境界線のないフラットスタイルのコントロールを作成できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.ButtonKeys">
      <summary>
        <b>DropDownCalculator</b>のボタン名を示す固定サイズの配列リストを取得します。</summary>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />のすべてのボタンキーを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.ButtonText">
      <summary>標準のキャプションを置き換えるすべてのテキストを含むコレクションを示します。</summary>
      <value>すべての電卓ボタンのテキストのコレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonTextCollection" />。</value>
      <remarks>このプロパティによってすべてのボタンのテキスト文字列を変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.ContentAlignment">
      <summary>テキストの配置を示す<see cref="T:System.Drawing.ContentAlignment" />値を取得または設定します。</summary>
      <value>
        <see cref="T:System.Drawing.ContentAlignment" />値。<br />デフォルト値は<see cref="F:System.Drawing.ContentAlignment.MiddleRight" />です。</value>
      <remarks>このプロパティは、各ボタンのテキストの配置を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.EditButtons">
      <summary>編集ボタンのボタンスタイルを取得または設定します。</summary>
      <value>編集ボタンの描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />オブジェクト。</value>
      <remarks>このプロパティは、すべての編集ボタンの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.FlatStyle">
      <summary>ドロップダウンウィンドウの外観スタイルを取得または設定します。</summary>
      <value>コントロールの外観を示す<see cref="T:System.Windows.Forms.FlatStyle" />値。</value>
      <remarks>
        <b>FlatStyle</b> プロパティは、コントロールの表示スタイルを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.Font">
      <summary>ドロップダウンウィンドウで使用されるフォントを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />のフォントを示す<see cref="T:System.Drawing.Font" />オブジェクト。</value>
      <remarks>
        <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.MathButtons">
      <summary>演算ボタンのボタンスタイルを取得または設定します。</summary>
      <value>演算に関連するボタンの描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />オブジェクト。</value>
      <remarks>このプロパティは、すべての演算ボタンの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.MemoryButtons">
      <summary>メモリボタンのボタンスタイルを取得または設定します。</summary>
      <value>メモリに関連するボタンの描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />オブジェクト。</value>
      <remarks>このプロパティは、すべてのメモリボタンの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.MemoryStatus">
      <summary>メモリ状態ボタンのスタイルを取得または設定します。</summary>
      <value>メモリキャプションの描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />オブジェクト。</value>
      <remarks>このプロパティは、メモリ状態ボタンの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.NumericButtons">
      <summary>数値ボタンのスタイルを取得または設定します。</summary>
      <value>数値ボタンの描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />オブジェクト。</value>
      <remarks>このプロパティは、すべての数値ボタンの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.Output">
      <summary>出力ボタンのスタイルを取得または設定します。</summary>
      <value>出力結果の描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />オブジェクト。</value>
      <remarks>このプロパティは、出力領域の表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.OutputHeight">
      <summary>出力領域の高さを取得または設定します。</summary>
      <value>出力領域の高さを示す<see cref="T:System.Int32" />値。</value>
      <remarks>このプロパティの値がゼロの場合、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />の出力領域の高さは自動的に計算されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.Padding">
      <summary>ドロップダウン電卓内部の余白を取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.Padding" />値。<br />デフォルト値は"5, 5, 5, 5"です。</value>
      <remarks>このプロパティは、この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />の電卓領域と境界線との間隔を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.ResetButtons">
      <summary>リセットボタンのスタイルを取得または設定します。</summary>
      <value>リセットボタンの描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonStyleInfo" />オブジェクト。</value>
      <remarks>このプロパティは、すべてのリセットボタンの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.ShowOutput">
      <summary>出力領域を表示するかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>出力領域を表示するかどうかを示す<see langword="bool" />値。</value>
      <remarks>このプロパティは、出力領域を表示するかどうかを決定します。値が<see langword="false" />の場合、出力は<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールのEditBoxに表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.SingleBorderColor">
      <summary>ドロップダウンウィンドウの一重境界線の色を取得または設定します。</summary>
      <value>コントロールの境界線の色を指定する<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [WindowFrame]</b>です。</value>
      <remarks>この<see cref="T:System.Drawing.Color" />は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculatorInfo.BorderStyle" />が<b>FixedSingle</b>の場合にのみ有効です。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar">
      <summary>ドロップダウンカレンダーの設定を表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ActiveHolidayStyles">
      <summary>ドロップダウンカレンダーのアクティブな休日スタイルを取得または設定します。</summary>
      <value>アクティブな休日スタイルを示す <see cref="T:System.String" /> の配列。</value>
      <remarks>このプロパティは、アクティブな<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HolidayStyles" />オブジェクトを決定します。複数の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HolidayStyles" nolink="true" />がアクティブで、それらが重複している場合は、最後のスタイルが有効になります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.AllowSelection">
      <summary>選択できる日付のタイプを取得または設定します。</summary>
      <value>選択できる日付のタイプを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.AllowSelection" />値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSelection.Anyday" />です。</value>
      <remarks>このプロパティは、選択できる日付の種類を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.BackColor">
      <summary>ドロップダウンカレンダーの背景色を取得または設定します。</summary>
      <value>背景色を表す<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [Window]</b>です。</value>
      <remarks>
        <b>BackColor</b> プロパティを使用すると、コントロールの背景色をフォームの配色に融合させることができます。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.BackgroundImage">
      <summary>ドロップダウンカレンダーに表示される背景画像を取得または設定します。</summary>
      <value>ドロップダウンウィンドウの背景に表示する画像を表す<see cref="T:System.Drawing.Image" />。</value>
      <remarks>
        <b>BackgroundImage</b>プロパティは、グラフィック画像をコントロールに配置する場合に使用します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.BackgroundImageLayout">
      <summary>ドロップダウンカレンダーの背景画像の配置を取得または設定します。</summary>
      <value>背景画像のレイアウトを示す <see cref="T:System.Windows.Forms.ImageLayout" /> 値。<br />既定値は <b>ImageLayout.Tile</b> です。</value>
      <remarks>
        <b>BackgroundImageLayout</b>プロパティは、コントロールに配置した画像の位置と動作を指定する場合に使用します。<b>BackgroundImageLayout</b>は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.BackgroundImage" />プロパティが設定されている場合にのみ有効です。<pare />大きな画像を使用した場合のパフォーマンスを向上させるには、<b>BackgroundImageLayout</b>を<see cref="F:System.Windows.Forms.ImageLayout.Tile" />以外に設定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.BorderStyle">
      <summary>ドロップダウンカレンダーの境界線スタイルを取得または設定します。</summary>
      <value>境界線スタイルを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.BorderStyle" />列挙体。<br />デフォルト値は<see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />です。</value>
      <remarks>
        <b>BorderStyle</b> プロパティを使用すると、既定の3次元コントロールに加えて、境界線のないフラットスタイルのコントロールを作成できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarDimensions">
      <summary>ドロップダウンカレンダーに表示する月数または年数を取得または設定します。</summary>
      <value>垂直方向および水平方向の月数または年数を表す<b><see cref="T:System.Drawing.Size">Size</see></b>値。</value>
      <remarks>一度に表示されるのは1暦年だけで、表示できる月数の最大値は12です。列と行の有効な組み合わせは積の最大値が12であり、12を超える値は許可されません。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarMargins">
      <summary>ドロップダウンカレンダーのマージンを取得または設定します。</summary>
      <remarks>このプロパティは、カレンダー表示領域と <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> の境界線との間隔を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarType">
      <summary>ドロップダウンカレンダーの種類を取得または設定します。</summary>
      <value>現在のカレンダーのタイプを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarType" />値。</value>
      <remarks>このプロパティは、この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> の表示タイプを変更します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarYear">
      <summary>カレンダーを会計年度の形式で表示するかどうかを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarYear" />値の1つ。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarYear.Normal" />です。</value>
      <remarks>
        <b>CalendarYear</b>プロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarType" />が<b>CalendarType.YearMonth</b>のときの月の表示順序を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ControlStyle">
      <summary>ドロップダウンカレンダーのスタイルを取得または設定します。</summary>
      <value>コントロールのスタイルを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> オブジェクト。</value>
      <remarks>このプロパティは、この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />の表示スタイルをカスタマイズします。この設定を適用する場合は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.UseControlStyle" />プロパティを<see langword="true" />に設定する必要があります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Cursor">
      <summary>マウスポインタがドロップダウンカレンダー上にあるときに使用されるカーソルを取得または設定します。</summary>
      <value>マウスポインタがドロップダウンウィンドウの上にあるときのカーソルの形状を示す<see cref="T:System.Windows.Forms.Cursor" />インスタンス。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.EmptyRows">
      <summary>その月の日付を含まない空白行の描画方法を取得または設定します。</summary>
      <value>カレンダーに空白週の行がどのように表示されるかを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.EmptyRows" />値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EmptyRows.StartEmpty" />です。</value>
      <remarks>空白行とは、そのすべての日付が隣接日である行のことです。これは2月だけに見られます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.EnableScrollAnimation">
      <summary>ドロップダウンカレンダーをスクロールまたはズームするときにアニメーションを実行するかどうかを取得または設定します。</summary>
      <value>
        <see cref="T:System.Boolean" />値。ドロップダウンカレンダーをスクロールまたはズームするときにアニメーションを実行する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.EnableTouchZoom">
      <summary>タッチズームが有効かどうかを取得または設定します。</summary>
      <value>ユーザーがピンチによって月ビューと年ビューを切り替えることができる場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FirstDayOfWeek">
      <summary>カレンダーの最初の列に表示する曜日を取得または設定します。</summary>
      <value>ドロップダウンカレンダーの最初に表示する曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek" />値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.NotSet" />です。</value>
      <remarks>このプロパティは、週の最初に表示する曜日を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FirstFiscalMonth">
      <summary>会計年度の最初の月を取得または設定します。</summary>
      <value>年の最初の会計月を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Months" />値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Months.Default" />です。</value>
      <remarks>
        <b>FirstFiscalMonth</b> プロパティは、最初に表示する月を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FirstMonthInView">
      <summary>ドロップダウンカレンダーに表示される最初の月を取得または設定します。</summary>
      <value>カレンダービューの最初の月を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Months" /> 列挙値。<br />既定値は <b>Months.Default</b> です。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarType" />が<b>MonthDay</b>で、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />に12か月が表示される場合、このプロパティは最初に表示される月を指定します。値が<b>Months.Default</b>でない場合は、年単位でスクロールします。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FlatStyle">
      <summary>ドロップダウンカレンダーのフラットスタイルを取得または設定します。</summary>
      <value>コントロールの外観を示す <see cref="T:System.Windows.Forms.FlatStyle" /> 値。<br />既定値は <see cref="F:System.Windows.Forms.FlatStyle.Standard" /> です。</value>
      <remarks>
        <b>FlatStyle</b> プロパティは、コントロールの表示を取得または設定する場合に使用します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FocusDate">
      <summary>フォーカスが設定された日付を取得または設定します。</summary>
      <value>フォーカスが設定された日付を示す<see cref="T:System.Nullable`1" />値。</value>
      <remarks>このプロパティは、フォーカス矩形が表示される日付ビューの位置を決定します。</remarks>
      <exception cref="T:System.ArgumentNullException">値を<see langword="null" />にすることはできません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FocusRectangle">
      <summary>フォーカス矩形のスタイルを取得または設定します。</summary>
      <value>フォーカス矩形のスタイルを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FocusRectangle" />値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.FocusRectangle.Normal" />です。</value>
      <remarks>このプロパティは、フォーカスのある日付の表示スタイルを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Font">
      <summary>ドロップダウンカレンダーのフォントを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> のフォントを示す <see cref="T:System.Drawing.Font" /> オブジェクト。</value>
      <remarks>デフォルト値はコントロールのフォントと同じです。値が<see langword="null" />の場合、例外は発生せず、自動的にデフォルト値に設定されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HeaderFormat">
      <summary>ヘッダの書式文字列を取得または設定します。</summary>
      <value>ヘッダの書式を示す <see cref="T:System.String" /> 値。<br />既定値は MMMM yyy です。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.UseHeaderFormat" />プロパティが<see langword="true" />の場合、このプロパティによって指定された書式を使用してヘッダのテキストが表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HeaderHeight">
      <summary>カレンダーのヘッダの高さを取得または設定します。</summary>
      <value>ヘッダの高さを示す<see cref="T:System.Int32" />値。<br />デフォルト値は0です。</value>
      <remarks>値ゼロは、ヘッダの高さが自動的に計算されることを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HeaderStyle">
      <summary>ヘッダスタイルを取得または設定します。</summary>
      <value>ヘッダのスタイルを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> オブジェクト。</value>
      <remarks>このプロパティは、この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />のヘッダの表示スタイルを決定します。ヘッダがシステムスタイルとして描画される場合、この表示スタイルは無効になります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HolidayStyles">
      <summary>休日スタイルを定義する<b><see cref="T:GrapeCity.Win.Editors.HolidayStyleCollection">HolidayStyleCollection</see></b> コレクションを取得または設定します。</summary>
      <value>休日スタイルのコレクションを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> オブジェクト。</value>
      <remarks>このプロパティは、休日の外観スタイルのコレクションを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.InnerMargins">
      <summary>日付領域のマージンを取得または設定します。</summary>
      <value>ドロップダウンカレンダーの内部マージンを示す <see cref="T:System.Windows.Forms.Padding" /> 値。</value>
      <remarks>このプロパティは、各カレンダービューとそのヘッダとの間隔を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.InnerSpace">
      <summary>複数のカレンダー間の垂直および水平方向の距離を取得または設定します。</summary>
      <value>ドロップダウンカレンダーの内部間隔を示す <see cref="T:System.Drawing.Size" /> 値。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarDimensions" />プロパティが複数のカレンダーを表示するよう設定されている場合、このプロパティは各カレンダー間の間隔を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ItemStyle">
      <summary>各項目のスタイルを取得または設定します。</summary>
      <value>各項目のスタイルを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> オブジェクト。</value>
      <remarks>このプロパティは、この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />の各項目（日付項目または月項目）の表示スタイルを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.LegendStyle">
      <summary>今日の日付のスタイルを取得または設定します。</summary>
      <value>今日の日付の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" />。</value>
      <remarks>このプロパティは、この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />の今日の日付領域の表示スタイルを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Lines">
      <summary>線の設定を取得または設定します。</summary>
      <value>線を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Grid" /> オブジェクト。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> に表示される線の色とスタイルを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.MaxDate">
      <summary>ドロップダウンカレンダーで選択可能な日付の最大値を取得または設定します。</summary>
      <value>カレンダーの最大日付を示す <see cref="T:System.DateTime" /> 値。</value>
      <remarks>このプロパティは最大日付値を取得します。その値は<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.MinDate" />より大きい必要があります。</remarks>
      <exception cref="T:System.ArgumentNullException">値が<see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">値が <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.MinDate" /> 未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.MinDate">
      <summary>ドロップダウンカレンダーで選択可能な日付の最小値を取得または設定します。</summary>
      <value>カレンダーの最小日付を示す <see cref="T:System.DateTime" /> 値。</value>
      <remarks>このプロパティは最小日付値を取得します。その値は<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.MaxDate" />より小さい必要があります。</remarks>
      <exception cref="T:System.ArgumentNullException">値が<see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">値が <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.MaxDate" /> を超えています。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.NavigateOnWheel">
      <summary>ユーザーがマウスホイールを使用して移動できるかどうかを示す値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>プロパティの設定を変更するたびに、ドロップダウンカレンダーは自動的に再描画されます。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>再度<b>True</b>にしない限りドロップダウンカレンダーは再描画されません。</description>
          </item>
        </list> 既定値は<b>True</b>です。</value>
      <remarks>このプロパティが<see langword="false" />に設定されている場合、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />はマウスホイールの操作によって移動しません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.NavigatorOrientation">
      <summary>ナビゲータを表示する位置を取得または設定します。</summary>
      <value>ナビゲータの表示位置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.NavigatorOrientation" />値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.NavigatorOrientation.Right" />です。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowNavigator" /> プロパティが <b>Scrollbar</b> または <b>Button</b> の場合のナビゲータの位置を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.OverrideTipText">
      <summary>振替休日に表示されるツールチップテキストを取得または設定します。</summary>
      <value>ツールチップテキストを表す<b><see cref="T:System.String">String</see></b>値。 既定値は<b>String.Empty</b>です。</value>
      <remarks>このプロパティは、振替休日のツールチップテキストを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.PreferredSize">
      <summary>ドロップダウンカレンダーの最適サイズを取得します。</summary>
      <value>高さと幅（ピクセル単位）を含む<see cref="T:System.Drawing.Size" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Redraw">
      <summary>表示が更新されるかどうかを示す値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>プロパティの設定を変更するたびに、ドロップダウンカレンダーは自動的に再描画されます。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>再度<b>True</b>にしない限りドロップダウンカレンダーは再描画されません。</description>
          </item>
        </list> 既定値は<b>True</b>です。</value>
      <remarks>このプロパティが<see langword="false" />に設定されている場合、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />は更新されず、カレンダーがドロップダウンしたときに何も表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ScrollRate">
      <summary>スクロール量を取得または設定します。</summary>
      <value>1回のスクロールで移動する月の数を表す正の数。<br />デフォルト値は1です。</value>
      <remarks>スクロール量は、ユーザーがスクロール矢印をクリックしたときにコントロールの表示が移動する月の数です。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ScrollTipAlign">
      <summary>スクロールチップの配置を取得または設定します。</summary>
      <value>スクロールチップの配置を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment" />型の値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment.Default" />です。</value>
      <remarks>ユーザーがスクロールボタンをドラッグして現在表示されている月または年を移動するとき、日付情報を含むツールチップが表示されます。このプロパティは、そのツールチップの配置を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.SelectedDate">
      <summary>選択されている日付を取得または設定します。</summary>
      <value>選択されている日付を示す<see cref="T:System.Nullable`1" />型の値。</value>
      <remarks>
        <para>
          <b>
            <see cref="P:GrapeCity.Win.Editors.DropDownCalendar.SelectedDate">SelectedDate</see>
          </b> プロパティは、 マウスやキーボードの操作で選択された単一の日付を取得する場合、または単一の選択日をコードから指定する場合に使用します。 </para>
        <para>
          <b>
            <see cref="P:GrapeCity.Win.Editors.DropDownCalendar.SelectedDate">SelectedDate</see>
          </b> プロパティを 設定してもフォーカス枠は移動しません。フォーカス枠を移動する場合は、 <b><see cref="P:GrapeCity.Win.Editors.DropDownCalendar.FocusDate">FocusDate</see></b> プロパティも合わせて設定してください。 </para>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値が範囲外です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.SelectionStyle">
      <summary>選択されている日付のスタイルを取得または設定します。</summary>
      <value>選択スタイルを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> 値。</value>
      <remarks>このプロパティは、選択されている日付セルまたは月セルの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowContextMenu">
      <summary>マウスボタンを右クリックするかメニューキーを押したときにコンテキストメニューを表示するかどうかを示す値を取得または設定します。</summary>
      <value>コンテキストメニューを表示するかどうかを示す<see langword="bool" />値。デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowHeader">
      <summary>ヘッダを表示するかどうかを示す値を取得または設定します。</summary>
      <value>ヘッダを表示するかどうかを示す <see langword="bool" /> 値。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowNavigator">
      <summary>ナビゲータの表示方法を示す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalendarNavigators" /> 値の１つ。<br />既定値は <b>CalendarNavigators.Outlook</b> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowScrollTip">
      <summary>スクロールチップを表示するかどうかを示す値を取得または設定します。</summary>
      <value>スクロールチップを表示するかどうかを示す <see langword="bool" /> 値。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowToday">
      <summary>今日の日付を表示するかどうかを示す値を取得または設定します。</summary>
      <value>今日の日付を表示するかどうかを示す <see langword="bool" /> 値。既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、このカレンダーの下部に今日の日付を表示するかどうかを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowTodayMark">
      <summary>今日を示すマークを表示するかどうかを示す値を取得または設定します。</summary>
      <value>今日を示すマークを表示するかどうかを示す<see langword="bool" />値。デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowTrailing">
      <summary>隣接日を表示するかどうかを示す値を取得または設定します。</summary>
      <value>隣接日を表示するかどうかを示す<see langword="bool" />値。デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowWeekNumber">
      <summary>週番号を表示するかどうかを示す値を取得または設定します。</summary>
      <value>週番号を表示するかどうかを示す<see langword="bool" />値。デフォルト値は<see langword="false" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ShowZoomButton">
      <summary>ナビゲータバーにズームボタンを表示するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。ナビゲータバーにズームボタンを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.SingleBorderColor">
      <summary>一重境界線の色を取得または設定します。</summary>
      <value>コントロールの境界線の色を指定する<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [WindowFrame]</b>です。</value>
      <remarks>
        <b>
          <see cref="P:GrapeCity.Win.Editors.DropDownCalendar.SingleBorderColor">SingleBorderColor</see>
        </b> プロパティは、 <b><see cref="P:GrapeCity.Win.Editors.DropDownCalendar.BorderStyle">BorderStyle</see></b> プロパティが <b>FixedSingle</b>のときにのみ機能します。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Styles">
      <summary>保存されている<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" />オブジェクトのセットを取得または設定します。</summary>
      <value>スタイルのコレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.SubStyles">
      <summary>保存されている<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" />オブジェクトのセットを取得または設定します。</summary>
      <value>SubStyleのコレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.TipInterval">
      <summary>マウスを項目の上に置いてから休日ツールチップが表示されるまでの時間間隔を取得または設定します。</summary>
      <value>休日ツールチップの時間間隔を示す <b>int</b> 値。<br />既定値は <b>500</b> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.TitleStyle">
      <summary>曜日タイトルのスタイルを取得または設定します。</summary>
      <value>曜日タイトルの表示スタイルを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.TitleStyle" />値。</value>
      <remarks>このプロパティは、曜日タイトルの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.TodayImage">
      <summary>今日を表すために使用する画像を取得または設定します。</summary>
      <value>今日の日付および今日に対応するセルに表示される<see cref="T:System.Drawing.Image" />。</value>
      <remarks>
        <para>
          <b>
            <see cref="P:GrapeCity.Win.Editors.DropDownCalendar.TodayImage">TodayImage</see>
          </b> プロパティは、 ドロップダウンカレンダー上の今日の日付に表示される画像を設定します。 </para>
        <para> 画像をドロップダウンカレンダー上に表示するかどうかは、 <b><see cref="P:GrapeCity.Win.Editors.DropDownCalendar.ShowTodayMark">ShowTodayMark</see></b> プロパティで指定します。 また、今日を示すマーク（表示枠）の色は<b><see cref="P:GrapeCity.Win.Editors.DropDownCalendar.TodayMarkColor"> TodayMarkColor</see></b> プロパティで指定します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.TodayMarkColor">
      <summary>今日の日付領域に表示される境界線の色を取得または設定します。</summary>
      <value>今日を示すマークの境界線の色を示す <see cref="T:System.Drawing.Color" /> 値。</value>
      <remarks>マークをカレンダー上に表示するかどうかは、 <b><see cref="P:GrapeCity.Win.Editors.DropDownCalendar.ShowTodayMark">ShowTodayMark</see></b> プロパティで指定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.TrailingStyle">
      <summary>隣接日のスタイルを取得または設定します。</summary>
      <value>隣接日のスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" />オブジェクト。</value>
      <remarks>このプロパティは、隣接日領域の表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.UseControlStyle">
      <summary>コントロールのスタイルを使用するかどうかを示す値を取得または設定します。</summary>
      <value>コントロールのスタイルを使用するかどうかを示す <see langword="bool" /> 値。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ControlStyle" />設定を適用するかどうかを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.UseHeaderFormat">
      <summary>ヘッダテキストを表示するために <b>HeaderFormat</b> プロパティを使用するかどうかを取得または設定します。</summary>
      <value>ヘッダテキストを表示するために<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HeaderFormat" />設定を使用する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.HeaderFormat" />設定を適用するかどうかを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.WeekNumberStyle">
      <summary>週番号のスタイルを取得または設定します。</summary>
      <value>週番号の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" />。</value>
      <remarks>週番号を表示するかどうかは、<b><see cref="P:GrapeCity.Win.Editors.DropDownCalendar.ShowWeekNumber">ShowWeekNumber</see></b> プロパティで設定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Weekdays">
      <summary>曜日設定を取得または設定します。</summary>
      <value>曜日の設定を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.YearMonthFormat">
      <summary>年表示または月表示のヘッダの書式を取得または設定します。</summary>
      <value>年月書式を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.YearMonthFormat" />構造体。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarType" />が<b>YearMonth</b>モードの場合にヘッダテキストが使用する書式を決定します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.DateFromPoint(System.Int32,System.Int32)">
      <summary>指定の座標位置にある日付を取得します。</summary>
      <param name="x">ポイントのx座標を示す<see cref="T:System.Int32" />値。</param>
      <param name="y">ポイントのy座標を示す<see cref="T:System.Int32" />値。</param>
      <returns>指定の座標位置にある日付を表す<b><see cref="T:System.Nullable`1">Nullable</see></b><b>&lt;</b><b><see cref="T:System.DateTime">DateTime</see></b><b>&gt;</b>値。</returns>
      <remarks>このメソッドは、xパラメーターとyパラメーターによって指定された特定のポイントから日付を取得します。指定されたポイントが<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />ビューに含まれていない場合は、<see langword="null" />値を返します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.DateFromPoint(System.Drawing.Point)">
      <summary>指定の座標位置にある日付を取得します。</summary>
      <param name="point">
        <see cref="T:System.Drawing.Point" />型の値。</param>
      <returns>現在の日付を表す<see cref="T:System.Nullable`1" />型。</returns>
      <remarks>このメソッドは、特定のポイントから日付を取得します。指定されたポイントが<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />ビューに含まれていない場合は、<see langword="null" />値を返します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.DayOfWeekFromPoint(System.Int32,System.Int32)">
      <summary>座標が示す位置に対応する曜日を取得します。</summary>
      <param name="x">ポイントのx座標を示す<see cref="T:System.Int32" />値。</param>
      <param name="y">ポイントのy座標を示す<see cref="T:System.Int32" />値。</param>
      <returns>現在の曜日を表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek" />。</returns>
      <remarks>このメソッドは、xパラメーターとyパラメーターによって指定された特定のポイントから曜日を取得します。指定されたポイントが<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />ビューに含まれていない場合は、<see langword="null" />値を返します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.DayOfWeekFromPoint(System.Drawing.Point)">
      <summary>ポイントから曜日を取得します。</summary>
      <param name="point">ポイント型の値。</param>
      <returns>現在の曜日を表すDayOfWeekType。</returns>
      <remarks>このメソッドは、特定のポイントから曜日を取得します。指定されたポイントが<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />ビューに含まれていない場合は、<see langword="null" />値を返します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.GetDatesInView(GrapeCity.Win.Spread.InputMan.CellType.PickDays)">
      <summary>現在のビューに含まれる特定のタイプの日付を取得します。</summary>
      <param name="type">取得する日のタイプを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PickDays" />値の1つ。</param>
      <returns>取得条件に基づくすべての日付を含む<see cref="T:System.DateTime" />の配列。</returns>
      <remarks>このメソッドは、現在のカレンダービューに含まれる<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PickDays" />タイプの日付を取得します。<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />が<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarType.YearMonth" />モードの場合は、最小の月から最大の月までの範囲にある<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PickDays" nolink="true" />タイプの日付が返されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.GetDatesInView">
      <summary>ビュー内のすべての日付を取得します。</summary>
      <returns>ビュー内のすべての日付を含む<see cref="T:System.DateTime" />の配列。</returns>
      <remarks>このメソッドは、現在のカレンダービューに含まれるすべての通常日を取得します。<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />が<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarType.YearMonth" />モードの場合は、最小の月から最大の月までの範囲にあるすべての日付が返されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.LoadTemplate(GrapeCity.Win.Spread.InputMan.CellType.Templates)">
      <summary>現在のカレンダーに作用するテンプレートをロードします。</summary>
      <param name="template">テンプレートを表す<b><see cref="T:GrapeCity.Win.Editors.Templates">Templates</see></b>列挙体。</param>
      <remarks>3種類のテンプレートがあります。ユーザーはこのメソッドを使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />の表示スタイルをカスタマイズできます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ScrollMonth(System.Int32)">
      <summary>指定した月数だけカレンダーをスクロールします。</summary>
      <param name="monthOffset">スクロールする月数とスクロール方向を示す整数型。</param>
      <remarks>このメソッドを使用すると、指定した月オフセットに基づいて<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />の表示月が移動します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ScrollYear(System.Int32)">
      <summary>指定した年数だけカレンダーをスクロールします。</summary>
      <param name="yearOffset">スクロールする年数とスクロール方向を示す整数型。</param>
      <remarks>このメソッドを使用すると、指定した年オフセットに基づいて<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />の表示年が移動します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Zoom(GrapeCity.Win.Spread.InputMan.CellType.CalendarType)">
      <summary>現在のカレンダーを指定したカレンダータイプにズームします。</summary>
      <param name="calendarType">対象のカレンダータイプを指定する<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarType" />列挙体。</param>
      <returns>
        <see langword="bool" />値。カレンダータイプが変更された場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
      <remarks>このメソッドは、この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.CalendarType" />を変更します。操作が成功した場合は<see langword="true" />を返し、それ以外の場合は<see langword="false" />を返します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ClickDate">
      <summary>日付がクリックされたときに発生します。</summary>
      <remarks>このイベントは、日付領域がクリックされた場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FocusDateChanged">
      <summary>フォーカスのある日付が変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.FocusDate" />プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.Scrolled">
      <summary>ドロップダウンカレンダーがスクロールしたときに発生します。</summary>
      <remarks>このイベントは、表示されている月または年が変更されたときに発生します。たとえば、ナビゲータボタンをクリックしたときや、ナビゲータチップで異なる値を選択したときなどがこれに該当します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.SelectedDateChanged">
      <summary>選択されている日付が変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.SelectedDate" />プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo">
      <summary>ドロップダウンカレンダーのデータパッケージを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ActiveHolidayStyles">
      <summary>カレンダーに表示する休日スタイルを取得または設定します。</summary>
      <value>アクティブな休日スタイルを示す <see cref="T:System.String" /> の配列。</value>
      <remarks>このプロパティは、アクティブな<see cref="P:DropDownCalendar.HolidayStyles" />を決定します。複数の<see cref="P:DropDownCalendar.HolidayStyles" nolink="true" />がアクティブで、それらが重複している場合は、最後のスタイルが有効になります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.AllowSelection">
      <summary>選択できる日付のタイプを取得または設定します。</summary>
      <value>選択できる日付のタイプを示す <see cref="P:DropDownCalendar.AllowSelection" /> 値。<br />既定値は <see cref="F:AllowSelection.Anyday" /> です。</value>
      <remarks>このプロパティは、選択できる日付の種類を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.BackColor">
      <summary>ドロップダウンカレンダーの背景色を取得または設定します。</summary>
      <value>背景色を表す<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [Window]</b>です。</value>
      <remarks>
        <b>BackColor</b> プロパティを使用してコントロールの背景色を変更し、コントロールをフォームの色彩設計に合わせることができます。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.BackgroundImage">
      <summary>ドロップダウンカレンダーに表示される背景画像を取得または設定します。</summary>
      <value>ドロップダウンウィンドウの背景に表示する画像を表す <see cref="T:System.Drawing.Image" />。</value>
      <remarks>半透明の色または透過色を使った画像は、背景画像として適切に表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.BackgroundImageLayout">
      <summary>ドロップダウンカレンダーの背景画像の配置を取得または設定します。</summary>
      <value>背景画像のレイアウトを示す <see cref="T:System.Windows.Forms.ImageLayout" /> 値。<br />既定値は <b>ImageLayout.Tile</b> です。</value>
      <remarks>
        <b>BackgroundImageLayout</b> プロパティを使用して、コントロールに配置した画像の位置と動作を指定します。<b>BackgroundImageLayout</b> は、<see cref="P:DropDownCalendar.BackgroundImage" /> プロパティが設定されている場合にのみ有効です。<pare />大きな画像を使用した場合のパフォーマンスを向上させるには、<b>BackgroundImageLayout</b> を <see cref="F:System.Windows.Forms.ImageLayout.Tile" /> 以外に設定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.BorderStyle">
      <summary>ドロップダウンカレンダーの境界線スタイルを取得または設定します。</summary>
      <value>境界線スタイルを示す <see cref="P:DropDownCalendar.BorderStyle" /> 列挙体。<br />既定値は <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" /> です。</value>
      <remarks>
        <b>BorderStyle</b> プロパティを使用すると、既定の3次元コントロールに加えて、境界線のないフラットスタイルのコントロールを作成できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.CalendarDimensions">
      <summary>ドロップダウンカレンダーに表示する月数または年数を取得または設定します。</summary>
      <value>垂直方向および水平方向の月数または年数を表す<b><see cref="T:System.Drawing.Size">Size</see></b>値。</value>
      <remarks>
        <para> このプロパティは、月-日カレンダー形式の場合はドロップダウンカレンダーに表示する月数、 年-月カレンダー形式の場合は年数を設定します。１から12までの数の月または年を１つのドロップダウンカレンダーに表示できます。 </para>
        <para> 行と列の月数を掛け合わせた数が12を超えることはできません。 </para>
      </remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.CalendarMargins">
      <summary>ドロップダウンカレンダーのマージンを取得または設定します。</summary>
      <remarks>このプロパティは、カレンダー表示領域と <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo" /> の境界線との間隔を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.CalendarType">
      <summary>ドロップダウンカレンダーの種類を取得または設定します。</summary>
      <value>現在のカレンダータイプを示す <see cref="P:DropDownCalendar.CalendarType" /> 値。</value>
      <remarks>このプロパティは、この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> の表示タイプを変更します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.CalendarYear">
      <summary>カレンダーを会計年度の形式で表示するかどうかを取得または設定します。</summary>
      <value>
        <see cref="P:DropDownCalendar.CalendarYear" /> 値の１つ。<br />既定値は <see cref="F:CalendarYear.Normal" /> です。</value>
      <remarks>
        <b>CalendarYear</b> プロパティは、<see cref="P:DropDownCalendar.CalendarType" /> が <b>CalendarType.YearMonth</b> のときに表示する月の順序を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ControlStyle">
      <summary>ドロップダウンカレンダーの描画スタイルを取得または設定します。</summary>
      <value>コントロールのスタイルを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> オブジェクト。</value>
      <remarks>このプロパティは、この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> の表示スタイルをカスタマイズします。この設定を適用する場合は、<see cref="P:DropDownCalendar.UseControlStyle" /> プロパティを <see langword="true" /> に設定する必要があります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.EmptyRows">
      <summary>その月の日付を含まない空白行の描画方法を取得または設定します。</summary>
      <value>カレンダーに空白週の行がどのように表示されるかを示す <see cref="P:DropDownCalendar.EmptyRows" /> 値。<br />既定値は <see cref="F:EmptyRows.StartEmpty" /> です。</value>
      <remarks>空白行とは、そのすべての日付が隣接日である行のことです。これは２月だけに見られます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.EnableScrollAnimation">
      <summary>ドロップダウンカレンダーをスクロールまたはズームするときにアニメーションを実行するかどうかを取得または設定します。</summary>
      <value>
        <see cref="T:System.Boolean" />値。ドロップダウンカレンダーをスクロールまたはズームするときにアニメーションを実行する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.EnableTouchZoom">
      <summary>タッチズームが有効かどうかを取得または設定します。</summary>
      <value>ユーザーがピンチによって月ビューと年ビューを切り替えることができる場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.FirstDayOfWeek">
      <summary>カレンダーの最初の列に表示する曜日を取得または設定します。</summary>
      <value>ドロップダウンカレンダーの週の最初に表示する曜日を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek" /> 値。<br />既定値は <see cref="F:DayOfWeek.NotSet" /> です。</value>
      <remarks>このプロパティは、週の最初に表示する曜日を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.FirstFiscalMonth">
      <summary>会計年度の最初の月を取得または設定します。</summary>
      <value>年の最初の会計月を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Months" /> 値。<br />既定値は <see cref="F:Months.Default" /> です。</value>
      <remarks>
        <b>FirstFiscalMonth</b> プロパティは、最初に表示する月を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.FirstMonthInView">
      <summary>ドロップダウンカレンダーに表示される最初の月を取得または設定します。</summary>
      <value>カレンダービューの最初の月を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Months" /> 列挙値。<br />既定値は <b>Months.Default</b> です。</value>
      <remarks>
        <see cref="P:DropDownCalendar.CalendarType" /> が <b>MonthDay</b> で、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> に 12 か月が表示される場合、このプロパティは最初に表示される月を指定します。値が <b>Months.Default</b> でない場合、カレンダーは１年単位でスクロールします。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.FlatStyle">
      <summary>ドロップダウンカレンダーのフラットスタイルを取得または設定します。</summary>
      <value>コントロールの外観を示す <see cref="T:System.Windows.Forms.FlatStyle" /> 値。<br />既定値は <see cref="F:System.Windows.Forms.FlatStyle.Standard" /> です。</value>
      <remarks>
        <b>FlatStyle</b> プロパティは、コントロールの表示を取得または設定する場合に使用します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.FocusRectangle">
      <summary>ドロップダウンカレンダー内で使用するフォーカス枠の外観を取得または設定します。</summary>
      <value>フォーカス矩形のスタイルを示す <see cref="P:DropDownCalendar.FocusRectangle" /> 値。<br />既定値は <see cref="F:FocusRectangle.Normal" /> です。</value>
      <remarks>このプロパティは、フォーカスのある日付の表示スタイルを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.Font">
      <summary>ドロップダウンカレンダーのフォントを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> のフォントを示す <see cref="T:System.Drawing.Font" /> オブジェクト。</value>
      <remarks>既定値はコントロールのフォントと同じです。<see langword="null" /> に設定した場合、例外は発生せず、値は自動的に既定値になります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.HeaderFormat">
      <summary>ヘッダの書式文字列を取得または設定します。</summary>
      <value>ヘッダの書式を示す <see cref="T:System.String" /> 値。<br />既定値は MMMM yyy です。</value>
      <remarks>
        <see cref="P:DropDownCalendar.UseHeaderFormat" /> プロパティが <see langword="true" /> の場合、このプロパティによって指定された書式を使用してヘッダのテキストが表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.HeaderHeight">
      <summary>カレンダーのヘッダの高さを取得または設定します。</summary>
      <value>ヘッダの高さを示す <see cref="T:System.Int32" /> 値。<br />既定値は０です。</value>
      <remarks>値ゼロは、ヘッダの高さが自動的に計算されることを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.HeaderStyle">
      <summary>ヘッダスタイルを取得または設定します。</summary>
      <value>ヘッダのスタイルを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> オブジェクト。</value>
      <remarks>このプロパティは、この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> のヘッダの表示スタイルを決定します。ヘッダがシステムスタイルとして描画される場合、この表示スタイルは無効になります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.HolidayStyles">
      <summary>休日スタイルを定義する<b><see cref="T:GrapeCity.Win.Editors.HolidayStyleCollection">HolidayStyleCollection</see></b> コレクションを取得または設定します。</summary>
      <value>休日スタイルのコレクションを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> オブジェクト。</value>
      <remarks>このプロパティは、休日の外観スタイルのコレクションを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.InnerMargins">
      <summary>日付領域のマージンを取得または設定します。</summary>
      <value>ドロップダウンカレンダーの内部マージンを示す <see cref="T:System.Windows.Forms.Padding" /> 値。</value>
      <remarks>このプロパティは、カレンダー表示領域とそのヘッダとの間隔を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.InnerSpace">
      <summary>複数のカレンダー間の垂直および水平方向の距離を取得または設定します。</summary>
      <value>ドロップダウンカレンダーの内部間隔を示す <see cref="T:System.Drawing.Size" /> 値。</value>
      <remarks>
        <see cref="P:DropDownCalendar.CalendarDimensions" /> プロパティが複数のカレンダーを表示するよう設定されている場合、このプロパティは各カレンダー間の間隔を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ItemStyle">
      <summary>各項目のスタイルを取得または設定します。</summary>
      <value>各項目のスタイルを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> オブジェクト。</value>
      <remarks>このプロパティは、この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> の各項目（日付項目または月項目）の表示スタイルを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.LegendStyle">
      <summary>今日の日付領域のスタイルを取得または設定します。</summary>
      <value>今日の日付領域の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" />。</value>
      <remarks>このプロパティは、この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> の今日の日付領域の表示スタイルを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.Lines">
      <summary>線の設定を取得または設定します。</summary>
      <value>線を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Grid" /> オブジェクト。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> に表示される線の色とスタイルを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.MaxDate">
      <summary>ドロップダウンカレンダーで選択可能な日付の最大値を取得または設定します。</summary>
      <value>カレンダーの最大日付を示す <see cref="T:System.DateTime" /> 値。</value>
      <remarks>このプロパティは最大日付値を取得します。その値は <see cref="P:DropDownCalendar.MinDate" /> より大きい必要があります。</remarks>
      <exception cref="T:System.ArgumentNullException">値が<see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">値が <see cref="P:DropDownCalendar.MinDate" /> 未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.MinDate">
      <summary>ドロップダウンカレンダーで選択可能な日付の最小値を取得または設定します。</summary>
      <value>カレンダーの最小日付を示す <see cref="T:System.DateTime" /> 値。</value>
      <remarks>このプロパティは最小日付値を取得します。その値は <see cref="P:DropDownCalendar.MaxDate" /> より小さい必要があります。</remarks>
      <exception cref="T:System.ArgumentNullException">値が<see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">値が <see cref="P:DropDownCalendar.MaxDate" /> を超えています。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.NavigateOnWheel">
      <summary>ユーザーがマウスホイールを使用して移動できるかどうかを示す値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>プロパティの設定を変更するたびに、ドロップダウンカレンダーは自動的に再描画されます。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>再度<b>True</b>にしない限りドロップダウンカレンダーは再描画されません。</description>
          </item>
        </list> 既定値は<b>True</b>です。</value>
      <remarks>このプロパティが <see langword="false" /> に設定されている場合、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo" /> はマウスホイールの操作によって移動しません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.NavigatorOrientation">
      <summary>ナビゲータを表示する位置を取得または設定します。</summary>
      <value>ナビゲータの表示位置を示す <see cref="P:DropDownCalendar.NavigatorOrientation" /> 値。<br />既定値は <see cref="F:NavigatorOrientation.Right" /> です。</value>
      <remarks>このプロパティは、<see cref="P:DropDownCalendar.ShowNavigator" /> プロパティが <b>Scrollbar</b> または <b>Button</b> の場合のナビゲータの位置を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.OverrideTipText">
      <summary>振替休日に表示されるツールチップテキストを取得または設定します。</summary>
      <value>ツールチップテキストを表す<b><see cref="T:System.String">String</see></b>値。 既定値は<b>String.Empty</b>です。</value>
      <remarks>このプロパティは、振替休日のツールチップテキストを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ScrollRate">
      <summary>１回のスクロールで移動する量を取得または設定します。</summary>
      <value>正の数は、１回のスクロールで移動する月の数を表します。<br />既定値は１です。</value>
      <remarks>スクロール量は、ユーザーがスクロール矢印をクリックしたときにコントロールの表示が移動する月の数です。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ScrollTipAlign">
      <summary>スクロールチップの配置を取得または設定します。</summary>
      <value>スクロールチップの配置を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment" /> 型の値。<br />既定値は <see cref="F:ScrollTipAlignment.Default" /> です。</value>
      <remarks>ユーザーがスクロールつまみをドラッグして現在表示されている月または年を移動するとき、日付情報を含むツールチップが表示されます。このプロパティは、そのツールチップの配置を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.SelectionStyle">
      <summary>選択されている日付のスタイルを取得または設定します。</summary>
      <value>選択スタイルを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> 値。</value>
      <remarks>このプロパティは、選択されている日付セルまたは月セルの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowHeader">
      <summary>ヘッダを表示するかどうかを示す値を取得または設定します。</summary>
      <value>ヘッダを表示するかどうかを示す <see langword="bool" /> 値。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowNavigator">
      <summary>ナビゲータの表示方法を示す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalendarNavigators" /> 値の１つ。<br />既定値は <b>CalendarNavigators.Outlook</b> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowScrollTip">
      <summary>スクロールチップを表示するかどうかを示す値を取得または設定します。</summary>
      <value>スクロールチップを表示するかどうかを示す <see langword="bool" /> 値。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowToday">
      <summary>今日の日付を表示するかどうかを示す値を取得または設定します。</summary>
      <value>今日の日付を表示するかどうかを示す <see langword="bool" /> 値。既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、このカレンダーの下部に今日の日付を表示するかどうかを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowTodayMark">
      <summary>今日を示すマークを表示するかどうかを示す値を取得または設定します。</summary>
      <value>今日を示すマークを表示するかどうかを示す <see langword="bool" /> 値。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowTrailing">
      <summary>隣接日を表示するかどうかを示す値を取得または設定します。</summary>
      <value>隣接日を表示するかどうかを示す <see langword="bool" /> 値。既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowWeekNumber">
      <summary>週番号を表示するかどうかを示す値を取得または設定します。</summary>
      <value>週番号を表示するかどうかを示す <see langword="bool" /> 値。既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.ShowZoomButton">
      <summary>ナビゲータバーにズームボタンを表示するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。ナビゲータバーにズームボタンを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.SingleBorderColor">
      <summary>一重境界線の色を取得または設定します。</summary>
      <value>コントロールの境界線の色を指定する<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [WindowFrame]</b>です。</value>
      <remarks>
        <b>
          <see cref="P:GrapeCity.Win.Editors.DropDownCalendar.SingleBorderColor">SingleBorderColor</see>
        </b> プロパティは、 <b><see cref="P:GrapeCity.Win.Editors.DropDownCalendar.BorderStyle">BorderStyle</see></b> プロパティが <b>FixedSingle</b>のときにのみ機能します。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.TipInterval">
      <summary>マウスを項目の上に置いてから休日ツールチップが表示されるまでの時間間隔を取得または設定します。</summary>
      <value>休日ツールチップの時間間隔を示す <b>int</b> 値。<br />既定値は <b>500</b> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.TitleStyle">
      <summary>曜日タイトルのスタイルを取得または設定します。</summary>
      <value>曜日タイトルの表示スタイルを示す <see cref="P:DropDownCalendar.TitleStyle" /> 値。</value>
      <remarks>このプロパティは、曜日タイトルの表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.TodayImage">
      <summary>今日に使用する画像を取得または設定します。</summary>
      <value>今日の日付に表示される <see cref="T:System.Drawing.Image" />。</value>
      <remarks>
        <para>
          <b>
            <see cref="P:GrapeCity.Win.Editors.DropDownCalendar.TodayImage">TodayImage</see>
          </b> プロパティは、 ドロップダウンカレンダー上の今日の日付に表示される画像を設定します。 </para>
        <para> 画像をドロップダウンカレンダー上に表示するかどうかは、 <b><see cref="P:GrapeCity.Win.Editors.DropDownCalendar.ShowTodayMark">ShowTodayMark</see></b> プロパティで指定します。 また、今日を示すマーク（表示枠）の色は<b><see cref="P:GrapeCity.Win.Editors.DropDownCalendar.TodayMarkColor"> TodayMarkColor</see></b> プロパティで指定します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.TodayMarkColor">
      <summary>今日に表示される境界線の色を取得または設定します。</summary>
      <value>今日を示すマークの境界線の色を示す <see cref="T:System.Drawing.Color" /> 値。</value>
      <remarks>このプロパティは、今日を示すマークの境界線の色を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.TrailingStyle">
      <summary>隣接日スタイルを取得または設定します。</summary>
      <value>隣接日のスタイルを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> オブジェクト。</value>
      <remarks>このプロパティは、隣接日領域の表示スタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.UseControlStyle">
      <summary>コントロールのスタイルを使用するかどうかを示す値を取得または設定します。</summary>
      <value>コントロールのスタイルを使用するかどうかを示す <see langword="bool" /> 値。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、<see cref="P:DropDownCalendar.ControlStyle" /> 設定を適用するかどうかを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.UseHeaderFormat">
      <summary>ヘッダテキストを表示するために <b>HeaderFormat</b> プロパティを使用するかどうかを取得または設定します。</summary>
      <value>ヘッダテキストを表示するために <see cref="P:DropDownCalendar.HeaderFormat" /> 設定を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、<see cref="P:DropDownCalendar.HeaderFormat" /> 設定を適用するかどうかを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.WeekNumberStyle">
      <summary>週番号スタイルを取得または設定します。</summary>
      <value>週番号の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" />。</value>
      <remarks>週番号を表示するかどうかは、<b><see cref="P:GrapeCity.Win.Editors.DropDownCalendar.ShowWeekNumber">ShowWeekNumber</see></b> プロパティで設定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.Weekdays">
      <summary>曜日ごとの描画スタイルを取得または設定します。</summary>
      <value>曜日の設定を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendarInfo.YearMonthFormat">
      <summary>年表示または月表示のヘッダの書式を取得または設定します。</summary>
      <value>年月書式を示す <see cref="P:DropDownCalendar.YearMonthFormat" /> 構造体。</value>
      <remarks>このプロパティは、<see cref="P:DropDownCalendar.CalendarType" /> が <b>YearMonth</b> モードの場合にヘッダテキストが従う書式を決定します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs">
      <summary>
        <b>DropDownClosing</b>イベントの<see cref="T:System.EventArgs" />を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs" /> のインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs.#ctor(System.Boolean,System.Object)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="syncData">
        <see langword="bool" />値。<see langword="true" />に設定されている場合、データがオーナーコントロールに同期します。それ以外の場合は<see langword="false" />。</param>
      <param name="value">ドロップダウンダイアログからの値を示す<b>object</b>。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs.SyncData">
      <summary>ドロップダウンが閉じるときにドロップダウンからコントロールにデータを同期するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。ドロップダウンが閉じるときにドロップダウンからコントロールにデータを同期する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>このプロパティは、ドロップダウンが閉じるときにドロップダウンからコントロールにデータを同期するかどうかを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs.Value">
      <summary>ドロップダウンに設定された値を取得または設定します。</summary>
      <value>ドロップダウンダイアログからの値を示す<b>object</b>。</value>
      <remarks>このプロパティは、ドロップダウンダイアログの値を取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor" />の設定を表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
      <value>背景色を表す<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [Window]</b>です。</value>
      <remarks>
        <b>BackColor</b> プロパティを使用すると、コントロールの背景色をフォームの配色に融合させることができます。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.BackgroundImage">
      <summary>背景画像を取得または設定します。</summary>
      <value>ドロップダウンウィンドウの背景に表示する画像を表す <see cref="T:System.Drawing.Image" />。<br />既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.BackgroundImageLayout">
      <summary>背景画像の配置を取得または設定します。</summary>
      <value>背景画像のレイアウトを示す <see cref="T:System.Windows.Forms.ImageLayout" /> 値。<br />既定値は <see cref="P:System.Drawing.SystemColors.Window" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.BorderStyle">
      <summary>コントロールの境界線の種類を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.BorderStyle" /> 値。<br />既定値は <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.CanUndo">
      <summary>ユーザーがテキストボックスコントロールでの直前の操作を取り消すことができるかどうかを示す値を取得します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>直前の動作を元に戻せます。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>直前の動作を元に戻せません。</description>
          </item>
        </list>
      </value>
      <remarks>このメソッドが <see langword="true" /> を返す場合は、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Undo" /> メソッドを呼び出して、コントロールで最後に実行された操作を元に戻すことができます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ContentAlignment">
      <summary>内容の配置を取得または設定します。</summary>
      <value>内容の配置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ContentAlignment" />値。<br />デフォルト値は<see cref="F:System.Drawing.ContentAlignment.TopLeft" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ContextMenu">
      <summary>コンテキストメニューを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ContextMenu" /> インスタンス。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ContextMenuStrip">
      <summary>このコントロールに関連付けられているコンテキストメニューストリップを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ContextMenuStrip" /> インスタンス。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Cursor">
      <summary>マウスポインタがドロップダウンカレンダー上にあるときに使用されるカーソルを取得または設定します。</summary>
      <value>カーソルを表す<b><see cref="T:System.Windows.Forms.Cursor">Cursor</see></b>オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Font">
      <summary>コントロールが表示するテキストのフォントを取得または設定します。</summary>
      <value>ドロップダウンウィンドウに使用されるフォントを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Font" />値。</value>
      <remarks>デフォルト値はコントロールのフォントと同じです。値が<see langword="null" />の場合、例外は発生せず、自動的にデフォルト値に設定されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ForeColor">
      <summary>コントロールの文字色を取得または設定します。</summary>
      <value>前景を示す <see cref="T:System.Drawing.Color" /> 値。<br />既定値は <see cref="P:System.Drawing.SystemColors.WindowText" /> です。</value>
      <remarks>システムカラーを指定するときは<b><see cref="T:System.Drawing.SystemColors">SystemColors</see></b>オブジェクトを使用し、 特定の色（BlueやRedなど）を指定する場合は<b><see cref="T:System.Drawing.Color">Color</see></b>を使用します。 また、コントロールの背景色を設定する場合は、<b><see cref="P:GrapeCity.Win.Editors.DropDownEditor.BackColor">BackColor</see></b> プロパティを使用します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Lines">
      <summary>ドロップダウンエディタの行を取得または設定します。</summary>
      <value>行を示す<b>string</b>の配列。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Padding">
      <summary>ドロップダウン電卓内部の余白を取得または設定します。</summary>
      <value>パディングを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Padding" />値。<br />デフォルト値は"1,1,1,1"です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ReadOnly">
      <summary>ドロップダウンエディタが読み取り専用かどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。ドロップダウンエディタが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ScrollBarMode">
      <summary>スクロールバーの表示方法を取得または設定します。</summary>
      <value>複数の行が存在するときに内容がドロップダウン編集の長さを超えると同時にスクロールバーが表示されるかどうかを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode" />列挙値の1つ。デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Fixed" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ScrollBars">
      <summary>スクロールバーの表示方法を示す値を取得または設定します。</summary>
      <value>スクロールバーの表示方法を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ScrollBars" />値。<br />デフォルト値は<see cref="F:System.Windows.Forms.ScrollBars.Vertical" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.SelectedText">
      <summary>ドロップダウンエディタで現在選択されているテキストを示す値を取得または設定します。</summary>
      <value>ドロップダウンエディタで現在選択されているテキストを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.SelectionLength">
      <summary>選択するテキストの文字数を取得または設定します。</summary>
      <value>文字数を表す<b><see cref="T:System.Int32">Int32</see></b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.SelectionStart">
      <summary>選択されているテキストの開始点を取得または設定します。</summary>
      <value>選択されているテキストの開始位置。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ShowContextMenu">
      <summary>コンテキストメニューを表示するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。コンテキストメニューを表示する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.SingleBorderColor">
      <summary>ドロップダウンエディットウィンドウの境界線の色を取得または設定します。</summary>
      <value>一重境界線の色を示す <see cref="T:System.Drawing.Color" /> 値。<br />既定値は <see cref="P:System.Drawing.SystemColors.WindowFrame" /> です。</value>
      <remarks>この色は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.BorderStyle" /> が <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" /> のときにのみ有効です。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Text">
      <summary>ドロップダウンエディットウィンドウの現在のテキストを取得または設定します。</summary>
      <value>テキストを示す<see cref="T:System.String" />値。<br />デフォルト値は<see cref="F:System.String.Empty" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TextLength">
      <summary>ドロップダウンエディットウィンドウのテキストの長さを取得します。</summary>
      <value>コントロールのテキストの長さを表す<b><see cref="T:System.Int32">Int32</see></b>値。</value>
      <remarks>コントロールのテキストから特定の文字列を検索するタスクなどにおいて、文字数の総数が既知である必要がある場合は、 このプロパティを使用して、タスクの文字列の文字数を決定できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TouchToolBar">
      <summary>タッチ操作によって表示される<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TouchToolBar" />を取得します。</summary>
      <value>タッチ操作によって表示される<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TouchToolBar" />インスタンス。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.AppendText(System.String)">
      <summary>ドロップダウンエディットウィンドウの現在のテキストにテキストを追加します。</summary>
      <param name="text">追加するテキストを表す<b><see cref="T:System.String">String</see></b>値。</param>
      <remarks>
        <b>AppendText</b> メソッドは、連結演算子を使用して <b><see cref="P:GrapeCity.Win.Editors.EditBase.Text">Text</see></b> プロパティにテキストを連結する代わりに、このメソッドを使用してコントロールの既存のテキストにテキストを追加できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Clear">
      <summary>ドロップダウンエディットウィンドウの内容をクリアします。</summary>
      <remarks>このメソッドを呼び出すと、Textプロパティが長さゼロの文字列に設定されます。<b>ReadOnly</b>プロパティがTrueに設定されている場合、コントロールの内容は変更されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ClearUndo">
      <summary>コントロールのアンドゥ バッファから直前に実行された操作に関する情報を削除します。</summary>
      <remarks>
        <b>ClearUndo</b> メソッドを使用すると、アプリケーションの状態に基づいて、元に戻す操作が繰り返されるのを防ぐことができます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Copy">
      <summary>コントロールの現在の選択項目をクリップボードにコピーします。</summary>
      <remarks>
        <b>
          <see cref="T:System.Windows.Forms.Clipboard">Clipboard</see>
        </b>クラスの代わりに<b>Copy</b> メソッドを使用すると、 ドロップダウンエディットウィンドウのテキストをコピーしてクリップボードに置くことができます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Cut">
      <summary>コントロールの現在の選択項目をクリップボードに移動します。</summary>
      <remarks>
        <b>Cut</b> メソッドは、ドロップダウンエディットウィンドウでテキストが選択されている場合に、 ドロップダウンエディットウィンドウからテキストだけを切り取ります。 <b><see cref="T:System.Windows.Forms.Clipboard">Clipboard</see></b>クラスの代わりにこのメソッドを使用すると、 ドロップダウンエディットウィンドウのテキストをコピーしてクリップボードに移動することができます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.GetLineCount">
      <summary>ドロップダウンエディットウィンドウの現在の行数を返します。</summary>
      <returns>複数行編集コントロールの行数を含む<see cref="T:System.Int32" />値。</returns>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Text" />プロパティが<see cref="F:System.String.Empty" />の場合、このメソッドはゼロを返します。それ以外の場合は行数を返します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnClick(System.Object,System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Click" /> イベントを発生させます。</summary>
      <param name="sender">イベント送信元を示す<see cref="T:System.Object" />値。</param>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnClick</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnClick</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnClick</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnDoubleClick(System.Object,System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.DoubleClick" /> イベントを発生させます。</summary>
      <param name="sender">イベント送信元を示す<see cref="T:System.Object" />値。</param>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDoubleClick</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDoubleClick</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDoubleClick</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnInvalidInput(System.Object,System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.InvalidInput" /> イベントを発生させます。</summary>
      <param name="sender">イベント送信元を示す<see cref="T:System.Object" />値。</param>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnInvalidInput</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnInvalidInput</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnInvalidInput</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.KeyDown" /> イベントを発生させます。</summary>
      <param name="sender">イベント送信元を示す<see cref="T:System.Object" />値。</param>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Forms.KeyEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnKeyDown</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnKeyDown</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnKeyDown</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.KeyPress" /> イベントを発生させます。</summary>
      <param name="sender">イベント送信元を示す<see cref="T:System.Object" />値。</param>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Forms.KeyPressEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnKeyPress</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnKeyPress</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnKeyPress</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnKeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.KeyUp" /> イベントを発生させます。</summary>
      <param name="sender">イベント送信元を示す<see cref="T:System.Object" />値。</param>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Forms.KeyEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnKeyUp</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnKeyUp</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnKeyUp</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnTextChanged(System.Object,System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TextChanged" /> イベントを発生させます。</summary>
      <param name="sender">イベント送信元を示す<see cref="T:System.Object" />値。</param>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnTextChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnTextChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnTextChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.OnTextChanging(System.Object,GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TextChanging" /> イベントを発生させます。</summary>
      <param name="sender">イベント送信元を示す<see cref="T:System.Object" />値。</param>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnTextChanging</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnTextChanging</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnTextChanging</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Paste">
      <summary>ドロップダウンエディットウィンドウの現在の選択項目にクリップボードの内容を貼り付けます。</summary>
      <remarks>
        <b>Paste</b> メソッドは、クリップボードにテキストが保持されている場合、 テキストのみをドロップダウンエディットウィンドウに貼り付けます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ResetPadding">
      <summary>エディタのパディングをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ScrollToCaret">
      <summary>コントロールの内容を現在のキャレットの位置までスクロールします。</summary>
      <remarks>このメソッドを使用すると、キャレットがコントロールの表示領域内に入るまでコントロールの内容をスクロールできます。キャレットがコントロールの表示領域より下にある場合、<b>ScrollToCaret</b>メソッドは、キャレットがコントロールの一番下に表示されるまでコントロールの内容をスクロールします。キャレットがコントロールの表示領域より上にある場合は、キャレットがコントロールの一番上に表示されるまでコントロールの内容をスクロールします。同じことが水平方向にも当てはまり、キャレットが左側または右側から幅の1/3だけ離れた位置に来るようにスクロールします。このメソッドを複数行編集で使用すると、現在のテキスト入力位置が確実にコントロールの表示領域内に入ります。<br /><b>注意:</b> このメソッドは、コントロールにフォーカスがない場合、またはキャレットがすでにコントロールの表示領域に位置している場合には効果がありません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.SelectAll">
      <summary>ドロップダウンエディットウィンドウのすべてのテキストを選択します。</summary>
      <remarks>このメソッドを使用すると、コントロール内のすべてのテキストを選択できます。このメソッドを<b>Cut</b>メソッド（コントロールでテキストが選択されている必要がある）と組み合わせて使用すると、コントロールの内容全体を切り取ってクリップボードに貼り付けることができます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.ShouldSerializePadding">
      <summary>Paddingプロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Undo">
      <summary>コントロールで直前に実行された操作を元に戻します。</summary>
      <remarks>
        <b>Undo</b> メソッドを使用すると、<b><see cref="P:GrapeCity.Win.Editors.DropDownEditor.CanUndo">CanUndo</see></b> プロパティから<b>True</b>が返された場合に、ドロップダウンエディットウィンドウで直前に実行したクリップボード操作または テキスト変更操作を元に戻すことができます。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Click">
      <summary>ドロップダウンエディットウィンドウがクリックされた場合に発生します。</summary>
      <remarks>この<b>Click</b> イベントは、イベントハンドラに<see cref="T:System.EventArgs" />を渡します。そのため、クリックが発生したことを通知するだけです。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.DoubleClick">
      <summary>ドロップダウンエディタがダブルクリックされたときに発生します。</summary>
      <remarks>ダブルクリックは、ユーザーのオペレーティングシステムのマウス設定によって決定されます。マウスボタンの2回のクリックをダブルクリックとみなすためのクリック間隔は、ユーザーが設定できます。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.InvalidInput">
      <summary>無効な入力があったときに発生します。</summary>
      <remarks>このイベントは、キーボードまたは<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Paste" />メソッドを使用して無効な文字が入力された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.KeyDown">
      <summary>キーが押されたときに発生します。</summary>
      <remarks>このイベントは、キーが押し下げられたときに発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.KeyPress">
      <summary>文字キーが押されたときに発生します。</summary>
      <remarks>このイベントは、キーが押されたときに発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.KeyUp">
      <summary>ドロップダウンエディットウィンドウにフォーカスがあるときにキーが離されると発生します。</summary>
      <remarks>このイベントは、押されたキーが離されたときに発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TextChanged">
      <summary>ドロップダウンエディタのテキストが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Text" /> プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.TextChanging">
      <summary>ドロップダウンエディットウィンドウにフォーカスがあるときにキーが離されると発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor.Text" /> プロパティが変更される前に発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditor" />の情報を表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
      <value>背景色を表す<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [Window]</b>です。</value>
      <remarks>
        <b>BackColor</b> プロパティを使用してコントロールの背景色を変更し、コントロールをフォームの色彩設計に合わせることができます。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.BackgroundImage">
      <summary>背景画像を取得または設定します。</summary>
      <value>ドロップダウンウィンドウの背景に表示する画像を表す <see cref="T:System.Drawing.Image" />。<br />既定値は <see langword="null" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.BackgroundImageLayout">
      <summary>背景画像の配置を取得または設定します。</summary>
      <value>背景画像のレイアウトを示す <see cref="T:System.Windows.Forms.ImageLayout" /> 値。<br />既定値は <see cref="P:System.Drawing.SystemColors.Window" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.BorderStyle">
      <summary>コントロールの境界線の種類を取得または設定します。</summary>
      <value>
        <see cref="P:DropDownEditor.BorderStyle" /> 値。<br />既定値は <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.ContentAlignment">
      <summary>コントロール内に表示するテキストの配置を取得または設定します。</summary>
      <value>内容の配置を示す <see cref="P:DropDownEditor.ContentAlignment" /> 値。<br />既定値は <see cref="F:System.Drawing.ContentAlignment.TopLeft" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.Font">
      <summary>コントロールが表示するテキストのフォントを取得または設定します。</summary>
      <value>ドロップダウンウィンドウに使用されるフォントを示す <see cref="P:DropDownEditor.Font" /> 値。</value>
      <remarks>既定値はコントロールのフォントと同じです。<see langword="null" /> に設定した場合、例外は発生せず、値は自動的に既定値になります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.ForeColor">
      <summary>コントロールの文字色を取得または設定します。</summary>
      <value>前景を示す <see cref="T:System.Drawing.Color" /> 値。<br />既定値は <see cref="P:System.Drawing.SystemColors.WindowText" /> です。</value>
      <remarks>システムカラーを指定するときは<b><see cref="T:System.Drawing.SystemColors">SystemColors</see></b>オブジェクトを使用し、 特定の色（BlueやRedなど）を指定する場合は<b><see cref="T:System.Drawing.Color">Color</see></b>を使用します。 また、コントロールの背景色を設定する場合は、<b><see cref="P:GrapeCity.Win.Editors.DropDownEditor.BackColor">BackColor</see></b> プロパティを使用します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.Padding">
      <summary>ドロップダウン電卓内部の余白を取得または設定します。</summary>
      <value>パディングを示す <see cref="P:DropDownEditor.Padding" /> 値。<br />既定値は "1,1,1,1" です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.ReadOnly">
      <summary>ドロップダウンエディタが読み取り専用かどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。ドロップダウンエディタが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.ScrollBarMode">
      <summary>スクロールバーの表示方法を取得または設定します。</summary>
      <value>内容がドロップダウン編集の長さを超えると同時にスクロールバーが表示されるかどうかを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.ScrollBarMode" /> 列挙値の１つ。既定値は <see cref="F:ScrollBarMode.Fixed" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.ScrollBars">
      <summary>スクロールバーの表示方法を示す値を取得または設定します。</summary>
      <value>スクロールバーの表示方法を示す <see cref="P:DropDownEditor.ScrollBars" /> 値。<br />既定値は <see cref="F:System.Windows.Forms.ScrollBars.Vertical" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.SingleBorderColor">
      <summary>ドロップダウンエディットウィンドウの境界線の色を取得または設定します。</summary>
      <value>一重境界線の色を示す <see cref="T:System.Drawing.Color" /> 値。<br />既定値は <see cref="P:System.Drawing.SystemColors.WindowFrame" /> です。</value>
      <remarks>この色は、<see cref="P:DropDownEditor.BorderStyle" /> が <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" /> のときにのみ有効です。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.TouchToolBar">
      <summary>表示されている<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.TouchToolBar" />を取得します。</summary>
      <value>タッチ操作を使用して表示されている<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownEditorInfo.TouchToolBar" />インスタンス。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo">
      <summary>
        <b>DropDown</b> 機能の設定を表します。</summary>
      <remarks>このクラスはドロップダウン機能に関する情報を提供します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.AllowDrop">
      <summary>ドロップを許可するかどうかを示す値を取得または設定します。</summary>
      <value>ドロップを許可する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="true" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.AllowResize">
      <summary>ユーザーがサイズ変更グリップを使用してドロップダウンウィンドウのサイズを変更できるかどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。サイズ変更グリップによってドロップダウンウィンドウのサイズを変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.AutoDropDown">
      <summary>（ドロップ可能な）コントロールがフォーカスを取得したときにドロップダウンウィンドウが自動的に表示されるかどうかを示す <see langword="bool" /> 値を取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。コントロールがフォーカスを取得したときにドロップダウンウィンドウが自動的に表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>
        <b>AutoDropDown</b> が <see langword="true" /> で、なおかつ <see cref="P:DropDown.AllowDrop" /> も <see langword="true" /> であるときは、ドロップダウンウィンドウが自動的に表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.AutoHideTouchKeyboard">
      <summary>ドロップダウンウィンドウが表示されているときのタッチキーボードの操作方法を示す値を取得または設定します。</summary>
      <value>ユーザーがドロップダウンウィンドウを開いたときのタッチキーボードの非表示動作オプションを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.AutoHideTouchKeyboard" />値。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AutoHideTouchKeyboard.AutoHide">AutoHide</see>です。ドロップダウンウィンドウが表示された後、タッチキーボードは非表示になります。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.ClosingAnimation">
      <summary>ドロップダウンウィンドウを閉じるときのアニメーション表示方法を取得または設定します。</summary>
      <value>ドロップダウンウィンドウを閉じるときのアニメーションを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation" /> 値。<br />既定値は <see cref="F:DropDownAnimation.None" /> です。</value>
      <remarks>このプロパティは、ドロップダウンウィンドウが閉じるときに表示されるアニメーションのスタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.Direction">
      <summary>ドロップダウン方向を取得または設定します。</summary>
      <value>ドロップダウン方向。<br />既定値は <see cref="F:DropDownDirection.Default" /> です。</value>
      <remarks>このプロパティは、ドロップダウンウィンドウが開くときの <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection" /> を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.OpeningAnimation">
      <summary>ドロップダウンウィンドウを開くときのアニメーション表示方法を取得または設定します。</summary>
      <value>ドロップダウンウィンドウを閉じるときのアニメーションを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation" /> 値。<br />既定値は <see cref="F:DropDownAnimation.None" /> です。</value>
      <remarks>このプロパティは、ドロップダウンウィンドウが開くときに表示されるアニメーションのスタイルを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.ShowShadow">
      <summary>ドロップダウンダイアログに影を付けるかどうかを示す <see langword="bool" /> 値を取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。ドロップダウンダイアログに影を付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownInfo.Size">
      <summary>ドロップダウンウィンドウのサイズを取得または設定します。</summary>
      <value>ドロップダウンウィンドウのサイズを示す <see cref="P:DropDown.Size" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs">
      <summary>
        <b>DropDownOpening</b>イベントの<see cref="T:System.EventArgs" />を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="syncData">
        <see langword="bool" />値。<see langword="true" />に設定されている場合、値をドロップダウンコントロールに同期します。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs.ByTouch">
      <summary>この操作がタッチによってトリガーされたかどうかを示す値を取得します。</summary>
      <value>この操作がタッチによってトリガーされた場合は<see langword="true" />。それ以外の場合は<see langword="false" /><b />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs.SyncData">
      <summary>ドロップダウンが開くときにデータをドロップダウンに同期するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。ドロップダウンが開くときにデータをドロップダウンに同期する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>このプロパティは、ドロップダウンダイアログが開くときにデータをドロップダウンに同期するかどうかを決定します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker">
      <summary>ドロップダウンピッカーを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.BackColor">
      <summary>ドロップダウンピッカーの背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />の背景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.Window" />です。</value>
      <remarks>
        <b>BackColor</b>プロパティを使用して、ドロップダウンピッカーの背景色を変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.BorderStyle">
      <summary>ドロップダウンピッカーの境界線スタイルを取得または設定します。</summary>
      <value>境界線スタイルを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.BorderStyle" />列挙体。<br />デフォルト値は<see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />です。</value>
      <remarks>
        <b>BorderStyle</b> プロパティを使用すると、既定の3次元コントロールに加えて、境界線のないフラットスタイルのコントロールを作成できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.ButtonBackColor">
      <summary>ドロップダウンピッカーのボタンの背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />のボタンの背景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.Control" />です。</value>
      <remarks>
        <b>ButtonBackColor</b>プロパティを使用して、ドロップダウンピッカーのボタンの背景色を変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.ButtonForeColor">
      <summary>ドロップダウンピッカーのボタンの前景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />のボタンの前景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.ControlText" />です。</value>
      <remarks>
        <b>ButtonForeColor</b>プロパティを使用して、ドロップダウンピッカーのボタンの前景色を変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.FlatStyle">
      <summary>ドロップダウンピッカーの外観を取得または設定します。</summary>
      <value>コントロールの外観を示す<see cref="T:System.Windows.Forms.FlatStyle" />値。<br />デフォルト値は<see cref="F:System.Windows.Forms.FlatStyle.System" />です。</value>
      <remarks>
        <b>FlatStyle</b> プロパティは、コントロールの表示を取得または設定する場合に使用します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.Font">
      <summary>ドロップダウンピッカーのフォントを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />のフォントを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.Font" />値。</value>
      <remarks>
        <b>Font</b>プロパティを使用して、ドロップダウンピッカーのフォントを変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.ForeColor">
      <summary>ドロップダウンピッカーの前景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />の前景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.GrayText" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.SelectedBackColor">
      <summary>ドロップダウンピッカーの強調表示の背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />の強調表示の背景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.Window" />です。</value>
      <remarks>
        <b>BackColor</b>プロパティを使用して、ドロップダウンピッカーの強調表示の背景色を変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.SelectedBorderColor">
      <summary>ドロップダウンピッカーが選択されているときの境界線の色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />が選択されているときの境界線の色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.WindowFrame" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.SelectedForeColor">
      <summary>ドロップダウンピッカーが選択されているときの前景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />が選択されているときの前景線の色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.WindowText" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.SelectionRenderMode">
      <summary>ドロップダウンピッカーの選択レンダリングモードを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />の選択レンダリングモードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode" />値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode.Border" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker.SingleBorderColor">
      <summary>一重境界線の色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />の一重境界線の色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.WindowFrame" />です。</value>
      <remarks>この色は、BorderStyleがFixedSingleの場合にのみ有効です。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo">
      <summary>ドロップダウンピッカーを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.BackColor">
      <summary>ドロップダウンピッカーの背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />の背景色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.Window" />です。</value>
      <remarks>
        <b>BackColor</b>プロパティを使用して、ドロップダウンピッカーの背景色を変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.BorderStyle">
      <summary>ドロップダウンピッカーの境界線スタイルを取得または設定します。</summary>
      <value>境界線スタイルを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.BorderStyle" />列挙体。<br />デフォルト値は<see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />です。</value>
      <remarks>
        <b>BorderStyle</b> プロパティを使用すると、既定の3次元コントロールに加えて、境界線のないフラットスタイルのコントロールを作成できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.ButtonBackColor">
      <summary>ドロップダウンピッカーのボタンの背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />のボタンの背景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.Control" />です。</value>
      <remarks>
        <b>ButtonBackColor</b>プロパティを使用して、ドロップダウンピッカーのボタンの背景色を変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.ButtonForeColor">
      <summary>ドロップダウンピッカーのボタンの前景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />のボタンの前景色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.ControlText" />です。</value>
      <remarks>
        <b>ButtonForeColor</b>プロパティを使用して、ドロップダウンピッカーのボタンの前景色を変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.FlatStyle">
      <summary>ドロップダウンピッカーの外観を取得または設定します。</summary>
      <value>コントロールの外観を示す<see cref="T:System.Windows.Forms.FlatStyle" />値。<br />デフォルト値は<see cref="F:System.Windows.Forms.FlatStyle.System" />です。</value>
      <remarks>
        <b>FlatStyle</b> プロパティは、コントロールの表示を取得または設定する場合に使用します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.Font">
      <summary>ドロップダウンピッカーのフォントを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />のフォントを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.Font" />値。</value>
      <remarks>
        <b>Font</b>プロパティを使用して、ドロップダウンピッカーのフォントを変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.ForeColor">
      <summary>ドロップダウンピッカーの前景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />の前景色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.GrayText" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.SelectedBackColor">
      <summary>ドロップダウンピッカーの強調表示の背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />のハイライト背景色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.Window" />です。</value>
      <remarks>
        <b>BackColor</b>プロパティを使用して、ドロップダウンピッカーの強調表示の背景色を変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.SelectedBorderColor">
      <summary>ドロップダウンピッカーが選択されているときの境界線の色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />が選択されているときの境界線の色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.WindowFrame" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.SelectedForeColor">
      <summary>ドロップダウンピッカーが選択されているときの前景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />が選択されているときの前景色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.WindowText" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.SelectionRenderMode">
      <summary>ドロップダウンピッカーの選択レンダリングモードを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />の選択レンダリングモードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode" />値。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode.Border" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DropDownPickerInfo.SingleBorderColor">
      <summary>一重境界線の色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />の一重境界線の色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.WindowFrame" />です。</value>
      <remarks>この色は、BorderStyleがFixedSingleの場合にのみ有効です。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase">
      <summary>テキスト編集コントロールの基本クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>
        <para> このクラスはテキストエディタコントロールの基本機能を実装します。これらの機能にはテキストの選択、クリップボード機能、アンドゥ、 および多くのイベントが含まれます。 </para>
        <note> 通常、このクラスから継承することはありません。独自テキストコントロールクラスを作成するには、 <b><see cref="T:GrapeCity.Win.Editors.GcTextBox">GcTextBox</see></b>から継承します。 </note>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="container">コントロールが配置されるコンテナを表す<b><see cref="T:System.ComponentModel.IContainer">IContainer</see></b>オブジェクト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ActiveBackColor">
      <summary>コントロールに入力フォーカスがあるときの背景色を取得または設定します。</summary>
      <value>コントロールに入力フォーカスがあるときの背景色を示す<see cref="T:System.Drawing.Color" />値。</value>
      <remarks>このコントロールに入力フォーカスがある場合、このプロパティの値を使用して背景が表示されます。</remarks>
      <exception cref="T:System.ArgumentException">値が透過色または半透過色です。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackColor" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ActiveForeColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ActiveForeColor">
      <summary>コントロールに入力フォーカスがあるときの前景色を取得または設定します。</summary>
      <value>コントロールに入力フォーカスがあるときの前景色を示す<see cref="T:System.Drawing.Color" />値。</value>
      <remarks>このコントロールに入力フォーカスがある場合、このプロパティの値を使用して前景が表示されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ForeColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.AutoSize">
      <summary>コントロールのサイズが、すべての内容が垂直方向に表示されるサイズに自動的に設定されるかどうかを示す値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>フォントが変更されると、コントロールの高さが自動的に調整されます。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>コントロールの高さが自動的に調整されません。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>このプロパティが<see langword="true" />に設定されている場合は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" />のすべての内容が表示されるようにその幅が調整されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
      <value>コントロールの背景色を指定する<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [Window]</b>です。</value>
      <remarks>
        <b>BackColor</b> プロパティを使用してコントロールの背景色を変更し、コントロールをフォームの色彩設計に合わせることができます。<para />コントロール内のテキストの色を変更するには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ForeColor" /> プロパティを使用します。コントロールの <b>BackColor</b> プロパティを設定するときは、コントロールのテキストが見えなくなるような色を選ばないでください。たとえば、<b>BackColor</b> プロパティと <b>ForeColor</b> プロパティを両方とも <b>Color.Black</b> に設定した場合、コントロール内のテキストは見えなくなります。<para />このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" /> の <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" /> プロパティが <see langword="true" /> に設定されている場合にオーバーライドできます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DisabledBackColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackgroundImage">
      <summary>コントロールに表示する背景画像を取得または設定します。</summary>
      <value>コントロールの背景に表示する画像を表す<see cref="T:System.Drawing.Image" />。<br />デフォルト値は<see langword="null" />です。</value>
      <remarks>
        <b>BackgroundImage</b>プロパティは、グラフィック画像をコントロールに配置する場合に使用します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackgroundImageLayout" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackgroundImageLayout">
      <summary>コントロールに表示する背景イメージのレイアウトを取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.ImageLayout" />の値の1つ（<see cref="F:System.Windows.Forms.ImageLayout.Center" />、<see cref="F:System.Windows.Forms.ImageLayout.None" />、<see cref="F:System.Windows.Forms.ImageLayout.Stretch" />、<see cref="F:System.Windows.Forms.ImageLayout.Tile" />、または<see cref="F:System.Windows.Forms.ImageLayout.Zoom" />）。デフォルト値は<see cref="F:System.Windows.Forms.ImageLayout.Tile" nolink="true" />です。</value>
      <remarks>
        <b>BackgroundImageLayout</b>プロパティは、コントロールに配置した画像の位置と動作を指定する場合に使用します。<b>BackgroundImageLayout</b>は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackgroundImage" />プロパティが設定されている場合にのみ有効です。<pare />大きな画像を使用した場合のパフォーマンスを向上させるには、<b>BackgroundImageLayout</b>を<see cref="F:System.Windows.Forms.ImageLayout.Tile" />以外に設定します。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定された列挙値が存在しません。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackgroundImage" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyle">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" /> の周囲に描画される罫線の種類を取得または設定します。</summary>
      <value>境界線スタイルを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyle" />列挙体。<br />デフォルト値は<b>BorderStyle.Fixed3D</b>です。</value>
      <remarks>
        <b>BorderStyle</b> プロパティを使用すると、既定の3次元コントロールに加えて、境界線のないフラットスタイルのコントロールを作成できます。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティに指定された値が有効な列挙値ではありません。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SingleBorderColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo">
      <summary>コントロールがコントロールでの直前の操作を取り消すことができるかどうかを示す値を取得します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>直前の動作を元に戻せます。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>直前の動作を元に戻せません。</description>
          </item>
        </list>
      </value>
      <remarks>このメソッドが <see langword="true" /> を返す場合は、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" /> メソッドを呼び出して、コントロールで最後に実行された操作を元に戻すことができます。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContentAlignment">
      <summary>コントロール内に表示するテキストの配置を取得または設定します。</summary>
      <value>コントロール内に表示するテキストの配置を表す<b><see cref="T:System.Drawing.ContentAlignment">ContentAlignment</see></b>値。 既定値は<b>TopLeft</b>です。 <list type="table"><listheader><term>ContentAlignmentの値</term><description>説明</description></listheader><item><term><b>1 - TopLeft</b></term><description>コンテンツは上端左寄せに配置されます。</description></item><item><term><b>2 - TopCenter</b></term><description>コンテンツは上端中央に配置されます。</description></item><item><term><b>4 - TopRight</b></term><description>コンテンツは上端右寄せに配置されます。</description></item><item><term><b>16 - MiddleLeft</b></term><description>コンテンツは中段左寄せに配置されます。</description></item><item><term><b>32 - MiddleCenter</b></term><description>コンテンツは中段中央に配置されます。</description></item><item><term><b>64 - MiddleRight</b></term><description>コンテンツは中段右寄せに配置されます。</description></item><item><term><b>256 - BottomLeft</b></term><description>コンテンツは下端左寄せに配置されます。</description></item><item><term><b>512 - BottomCenter</b></term><description>コンテンツは下端中央に配置されます。</description></item><item><term><b>1024 - BottomRight</b></term><description>コンテンツは下端右寄せに配置されます。</description></item></list></value>
      <remarks>コントロールの内容は9とおりに配置できます。このプロパティを使用していずれかの配置方法を設定できます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Padding" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContextMenu">
      <summary>コントロールに関連付けられたショートカットメニューを取得または設定します。</summary>
      <value>ショートカットメニューを表す<b><see cref="T:System.Windows.Forms.ContextMenu">ContextMenu</see></b>オブジェクト。 既定値は<b>Nothing</b>です。</value>
      <remarks>ショートカットメニューは、ユーザーがコントロールを右クリックしたときにコンテキストに固有のメニューオプションを提供するために使用します。<para /><b>継承時の注意: </b><para />派生クラスで<b>ContextMenu</b>プロパティをオーバーライドする場合は、基本クラスの<b>ContextMenu</b>プロパティを使用して基本実装を拡張します。それ以外の場合は、開発者が実装を提供する必要があります。<b>ContextMenu</b>プロパティのgetアクセサーとsetアクセサーを両方ともオーバーライドする必要はありません。必要であれば一方だけをオーバーライドできます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ShowContextMenu" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContextMenuStrip" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContextMenuStrip">
      <summary>このコントロールに関連付けられているコンテキストメニューストリップを取得または設定します。</summary>
      <value>このコントロールの<see cref="T:System.Windows.Forms.ContextMenuStrip" />。<see cref="T:System.Windows.Forms.ContextMenuStrip" nolink="true" />がない場合は<see langword="null" />。<br />デフォルト値は<see langword="null" />です。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContextMenu" />もコントロールに割り当てられている場合は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContextMenu" nolink="true" />の方が<b>ContextMenuStrip</b>よりも優先されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ShowContextMenu" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContextMenu" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DefaultImeMode">
      <summary>既定のIMEモードを取得します。</summary>
      <value>既定のIMEモードを表す<b><see cref="T:System.Windows.Forms.ImeMode">ImeMode</see></b>列挙体。 <list type="table"><listheader><term>DefaultImeModeの値</term><description>説明</description></listheader><item><term><b>-1 - Inherit</b></term><description>親コントロールの IME モードを継承します。</description></item><item><term><b>0 - NoControl</b></term><description>なし (既定)。</description></item><item><term><b>1 - On</b></term><description> IME がオンです。この値は、IME がオンであることを示し、中国語または日本語に固有の文字を入力できることを示します。 この設定は、日本語、簡体字中国語、および繁体字中国語の IME に対してだけ有効です。 </description></item><item><term><b>2 - Off</b></term><description> IME がオフです。このモードは、IME がオフであることを示します。つまり、オブジェクトの動作は英語入力モードと同様になります。 この設定は、日本語、簡体字中国語、および繁体字中国語の IME に対してだけ有効です。 </description></item><item><term><b>3 - Disable</b></term><description> IME が無効になっています。この設定では、ユーザーはキーボードを使用して IME を有効にすることができず、 IME のフローティング ウィンドウは非表示になります。 </description></item><item><term><b>4 - Hiragana</b></term><description>ひらがな DBC。この設定は、日本語 IME に対してだけ有効です。</description></item><item><term><b>5 - Katakana</b></term><description>カタカナ DBC。この設定は、日本語 IME に対してだけ有効です。</description></item><item><term><b>6 - KatakanaHalf</b></term><description>カタカナ SBC。この設定は、日本語 IME に対してだけ有効です。</description></item><item><term><b>7 - AlphaFull</b></term><description>2 バイトの英数字。この設定は、韓国語と日本語の IME に対してだけ有効です。</description></item><item><term><b>8 - Alpha</b></term><description>1 バイトの英数字 (SBC)。この設定は、韓国語と日本語の IME に対してだけ有効です。</description></item><item><term><b>9 - HangulFull</b></term><description>ハングル DBC。この設定は、韓国語 IME に対してだけ有効です。</description></item><item><term><b>10 - Hangul</b></term><description>ハングル SBC。この設定は、韓国語 IME に対してだけ有効です。</description></item></list></value>
      <remarks>IME（入力メソッドエディタ）は、ユーザーが日本の漢字などの複雑な文字や記号を標準のキーボードを使って入力できるようにするプログラムです。<para /><see cref="T:System.Windows.Forms.Control" />クラスに実装されたとき、このプロパティは常に<see cref="F:System.Windows.Forms.ImeMode.Inherit" />値を返します。Inherit値は、IMEモードが親コントロールから継承されることを指定します。<para /><b>継承時の注意: </b><para />派生クラスで<b>DefaultImeMode</b>プロパティをオーバーライドする場合は、基本クラスの<b>DefaultImeMode</b>プロパティを使用して基本実装を拡張します。それ以外の場合は、開発者がすべての実装を提供する必要があります。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ImeMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DefaultSize">
      <summary>コントロールの既定のサイズを取得します。</summary>
      <value>コントロールの既定のサイズを表す<b><see cref="T:System.Drawing.Size">Size</see></b>値。</value>
      <remarks>
        <b>DefaultSize</b>プロパティは、コントロールが最初に作成されるときのコントロールの<see cref="T:System.Drawing.Size" />を表します。コントロールのサイズを調整するには、その<see cref="T:System.Drawing.Size" nolink="true" />プロパティの値を設定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DisabledBackColor">
      <summary>コントロールが無効の場合の背景色を取得または設定します。</summary>
      <value>無効なときの背景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.Control" />です。</value>
      <remarks>このコントロールが無効な場合、このプロパティの値を使用して背景が表示されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BackColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DisabledForeColor">
      <summary>コントロールが無効の場合の文字色を取得または設定します。</summary>
      <value>無効なときの前景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.GrayText" />です。</value>
      <remarks>このコントロールが無効な場合、このプロパティの値を使用して前景が表示されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ForeColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.EditMode">
      <summary>コントロールの編集モードを取得または設定します。</summary>
      <value>このコントロールの編集モードを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditMode" /> 値。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EditMode.Insert" /> です。</value>
      <remarks>このプロパティの値に"Fixed"という接頭辞が付いている場合は、［Insert］キーを押しても編集モードに影響しません。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OverWrite" />プロパティがこのメソッドに影響を与える場合があります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ExitOnLastChar">
      <summary>コントロールに最後の文字が入力されると同時にタブオーダーの次のコントロールがフォーカスを受け取るかどうかを取得または設定します。</summary>
      <value>入力コントロールによって定義された最後の文字がコントロールに入力されると同時にタブオーダーの次のコントロールにフォーカスが移動する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>最後に入力した文字によってテキストがコントロールの制限を超えた場合、入力フォーカスが次のコントロールに移動します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ExitOnLeftRightKey" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ExitOnLeftRightKey">
      <summary>［←］キーまたは［→］キーを押したときにフォーカスがタブオーダーの前のコントロールまたは次のコントロールに自動的に移動するかどうかを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ExitOnLeftRightKey" /> 列挙値の１つ。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ExitOnLeftRightKey.None" /> です。</value>
      <remarks>このプロパティの値は、入力フォーカスを次のコントロールに移動するキーを示します。キャレットがこのコントロールの最後の文字にあるときに［→］キーを押すと、フォーカスが次のコントロールに移動します。キャレットがこのコントロールの最初の文字の前にあるときに［←］キーを押すと、フォーカスが前のコントロールに移動します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ExitOnLastChar" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.FlatStyle">
      <summary>派生クラスでオーバーライドされると、コントロールのフラットスタイルを取得または設定します。</summary>
      <value>編集コントロールのフラットスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx" />列挙体。</value>
      <remarks>
        <b>FlatStyle</b> プロパティは、コントロールの表示スタイルを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Font">
      <summary>コントロールによって表示されるテキストのフォントを取得または設定します。</summary>
      <value>コントロールによって表示されるテキストに適用する<see cref="T:System.Drawing.Font" />。 既定値は<see cref="P:System.Windows.Forms.Control.DefaultFont" /> プロパティの値です。</value>
      <remarks>
        <para>
          <b>Font</b>プロパティはアンビエントプロパティです。アンビエントプロパティとは、明示的に設定しない場合に親コントロールから取得されるコントロールプロパティです。たとえば<see cref="T:System.Windows.Forms.Button" />は、デフォルトでは親の<see cref="T:System.Windows.Forms.Form" />と同じ<see cref="P:System.Windows.Forms.Control.BackColor" />を持ちます。アンビエントプロパティの詳細については、<see cref="T:System.Windows.Forms.AmbientProperties" />クラスまたは<see cref="T:System.Windows.Forms.Control" />クラスの概要を参照してください。</para>
        <para />
        <para>
          <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ForeColor">
      <summary>コントロールの文字色を取得または設定します。</summary>
      <value>コントロールの文字色を指定する<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [WindowText]</b>です。</value>
      <remarks>システムカラーを指定するときは<b><see cref="T:System.Drawing.SystemColors">SystemColors</see></b>オブジェクトを使用し、 特定の色（<b>Blue</b>や<b>Red</b>など）を指定する場合は<b><see cref="T:System.Drawing.Color">Color</see></b>を使用します。 また、コントロールの背景色を設定する場合は、<b><see cref="P:GrapeCity.Win.Editors.EditBase.BackColor">BackColor</see></b> プロパティを使用します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DisabledForeColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.HideSelection">
      <summary>コントロールにフォーカスがないときに選択が表示されないようにするかどうかを示す値を取得または設定します。</summary>
      <value>選択が表示されないようにする場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>このプロパティを使用すると、ほかのコントロール、フォーム、またはダイアログボックスにフォーカスが移動したときに、 コントロールのテキストを強調表示にしておくことができます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ImeMode">
      <summary>コントロールのIMEモードを取得または設定します。</summary>
      <value>IMEモードを表す<b><see cref="T:System.Windows.Forms.ImeMode">ImeMode</see></b>列挙体。 <list type="table"><listheader><term>ImeModeの値</term><description>説明</description></listheader><item><term><b>-1 - Inherit</b></term><description>親コントロールの IME モードを継承します。</description></item><item><term><b>0 - NoControl</b></term><description>なし (既定)。</description></item><item><term><b>1 - On</b></term><description> IME がオンです。この値は、IME がオンであることを示し、中国語または日本語に固有の文字を入力できることを示します。 この設定は、日本語、簡体字中国語、および繁体字中国語の IME に対してだけ有効です。 </description></item><item><term><b>2 - Off</b></term><description> IME がオフです。このモードは、IME がオフであることを示します。つまり、オブジェクトの動作は英語入力モードと同様になります。 この設定は、日本語、簡体字中国語、および繁体字中国語の IME に対してだけ有効です。 </description></item><item><term><b>3 - Disable</b></term><description> IME が無効になっています。この設定では、ユーザーはキーボードを使用して IME を有効にすることができず、 IME のフローティング ウィンドウは非表示になります。 </description></item><item><term><b>4 - Hiragana</b></term><description>ひらがな DBC。この設定は、日本語 IME に対してだけ有効です。</description></item><item><term><b>5 - Katakana</b></term><description>カタカナ DBC。この設定は、日本語 IME に対してだけ有効です。</description></item><item><term><b>6 - KatakanaHalf</b></term><description>カタカナ SBC。この設定は、日本語 IME に対してだけ有効です。</description></item><item><term><b>7 - AlphaFull</b></term><description>2 バイトの英数字。この設定は、韓国語と日本語の IME に対してだけ有効です。</description></item><item><term><b>8 - Alpha</b></term><description>1 バイトの英数字 (SBC)。この設定は、韓国語と日本語の IME に対してだけ有効です。</description></item><item><term><b>9 - HangulFull</b></term><description>ハングル DBC。この設定は、韓国語 IME に対してだけ有効です。</description></item><item><term><b>10 - Hangul</b></term><description>ハングル SBC。この設定は、韓国語 IME に対してだけ有効です。</description></item></list></value>
      <remarks>IMEは、ユーザーが日本の漢字などの複雑な文字や記号を標準のキーボードを使って入力できるようにするプログラムです。<b>ImeMode</b>プロパティは通常、数値のみを入力するコントロールに対しては<see cref="F:System.Windows.Forms.ImeMode.Off" />に設定されます。<see cref="T:System.Windows.Forms.Form" />クラスに対しては、<see cref="F:System.Windows.Forms.ImeMode.NoControl" />に設定されます。<para />IMEを直接サポートしない（つまり、IMEから直接入力できない）ほとんどのクラスは、このプロパティの値を<see cref="F:System.Windows.Forms.ImeMode.NoControl" nolink="true" />に設定します。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定された値が<see cref="T:System.Windows.Forms.ImeMode" />列挙値ではありません。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DefaultImeMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Initializing">
      <summary>この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" />が初期化しているかどうかを示す値を取得します。</summary>
      <value>コントロールのが初期化中であるか、そうでないかを表す<b><see cref="T:System.Boolean">Boolean</see></b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Modified">
      <summary>コントロールが作成されてから、またはコントロールが最後に設定されてから、 ユーザーがテキストコントロールを変更したかどうかを示す値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>コントロールの内容が変更されています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>コントロールの内容は変更されていません。</description>
          </item>
        </list>既定値は<b>False</b>です。</value>
      <remarks>このプロパティを使用して、ユーザーがコントロールの内容を変更したかどうかを確認できます。また、アプリケーションによってコントロールに変更が加えられたことを示すために、このプロパティをコードで設定することもできます。このプロパティを検証メソッドやデータ保存メソッドで使用すれば、コントロールに変更が加えられたかどうかを確認し、変更された内容を検証または保存することが可能です。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OverWrite">
      <summary>現在の編集モードが上書きに設定されているかどうかを取得します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>現在は上書モードです。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>現在は挿入モードです。</description>
          </item>
        </list>
      </value>
      <remarks>
        <b>OverWrite</b>プロパティは、このコントロールの編集モードを示します。［Insert］キーを押すとこの値が変更されます。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.EditMode" />プロパティが<b>FixedInsert</b>または<b>FixedOverWrite</b>の場合、このプロパティは固定されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.EditMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Padding">
      <summary>コントロール内部の余白を取得または設定します。</summary>
      <value>コントロールの内部スペース特性を表す<see cref="T:System.Windows.Forms.Padding" />オブジェクト。<br />デフォルト値は"1,1,1,1"です。</value>
      <remarks>
        <b>Padding</b>プロパティは、テキストの表示に使用される矩形を示します。この矩形は、境界線から表示領域までの間の、サイドボタン領域を除いた部分です。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContentAlignment" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly">
      <summary>このコントロールが読み取り専用かどうかを示す値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>コントロールを読み取り専用にします。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>コントロールへの入力を許可します。</description>
          </item>
        </list>既定値は<b>False</b>です。</value>
      <remarks>このプロパティを<see langword="true" />に設定すると、実行時にユーザーがコントロールの内容を変更できなくなります。このプロパティが<see langword="true" />に設定されている場合でも、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" />プロパティの値をコードで設定することは可能です。<see cref="P:System.Windows.Forms.Control.Enabled" />プロパティによってコントロールを無効にする代わりにこの機能を使用することで、内容をコピーしたりツールチップを表示したりすることが可能となります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnlyBackColor">
      <summary>コントロールが読み取り専用のときの背景色を取得または設定します。</summary>
      <value>コントロールが読み取り専用のときの背景色を示す<see cref="T:System.Drawing.Color" />値。</value>
      <remarks>このコントロールが読み取り専用の場合、このプロパティの値を使用して背景が表示されます。</remarks>
      <exception cref="T:System.ArgumentException">値が透過色または半透過色です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnlyForeColor">
      <summary>コントロールが読み取り専用のときの前景色を取得または設定します。</summary>
      <value>コントロールが読み取り専用のときの前景色を示す<see cref="T:System.Drawing.Color" />値。</value>
      <remarks>このコントロールが読み取り専用の場合、このプロパティの値を使用して前景が表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.RightToLeft">
      <summary>右から左に表示するフォントを使用したロケールをサポートするためにコントロールの要素が配置されるかどうかを示す値を取得または設定します。</summary>
      <value>コントロールの要素の配置を表す<b><see cref="T:System.Windows.Forms.RightToLeft">RightToLeft</see></b>列挙体。 <list type="table"><listheader><term>RightToLeftの値</term><description>説明</description></listheader><item><term><b>0 - No</b></term><description>テキストは左から右へ表示されます。これは、既定の設定です。</description></item><item><term><b>1 - Yes</b></term><description>テキストは右から左へ表示されます。</description></item><item><term><b>2 - Inherit</b></term><description>テキストの表示方向は、親コントロールから継承されます。</description></item></list></value>
      <remarks>このプロパティは、このクラスでは意味がありません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectedText">
      <summary>コントロールで現在選択されているテキストを示す値を取得または設定します。</summary>
      <value>選択されているテキストの文字列を表す<b><see cref="T:System.String">String</see></b>値。</value>
      <remarks>このプロパティにテキストを代入すると、コントロールで現在選択されているテキストを変更できます。コントロールで現在テキストが選択されていない場合、このプロパティは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" />プロパティの現在のキャレット位置に新しい値を挿入します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Select(System.Int32,System.Int32)" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength">
      <summary>選択するテキストの文字数を取得または設定します。</summary>
      <value>選択するテキストの文字数を表す<b><see cref="T:System.Int32">Int32</see></b>値。 既定値は<b>0</b>です。</value>
      <remarks>このプロパティを使用すると、選択されたテキストに対して操作を実行する前に、コントロールで文字が選択されているかどうかを判断できます。<b>SelectionLength</b>プロパティの値がコントロールのテキストの文字数を超える値に設定されている場合、<b>SelectionLength</b>プロパティの値は、コントロール内のテキスト全体の長さから<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" />プロパティの値を引いた数に設定されます（<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" nolink="true" />プロパティに値が指定されている場合）。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">指定された値が0未満です。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectedText" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Select(System.Int32,System.Int32)" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart">
      <summary>選択を開始する文字の位置番号を取得または設定します。</summary>
      <value>選択を開始する文字の位置。<br />デフォルト値はゼロです。</value>
      <remarks>コントロールでテキストが選択されていない場合、このプロパティは新しいテキストの挿入位置を示します。このプロパティがコントロール内のテキストの長さを超えた位置に設定されている場合、開始位置は最後の文字の後ろになります。コントロールでテキストが選択されているときにこのプロパティを変更すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" />プロパティの値が小さくなる場合があります。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" />プロパティで示された位置より後ろにあるコントロール内の残りのテキストが<b>SelectionLength</b>プロパティの値より小さい場合、<b>SelectionLength</b>プロパティの値は自動的に小さくなります。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" nolink="true" />プロパティの値によって、<b>SelectionLength</b>プロパティの値が大きくなることはありません。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">指定された値が0未満です。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectedText" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Select(System.Int32,System.Int32)" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ShowContextMenu">
      <summary>コントロールのコンテキストメニューをポップアップするかどうかを示す値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>コントロールを右クリックしたとき、コンテキストメニューが表示されます。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>コントロールを右クリックしたとき、コンテキストメニューは表示されません。</description>
          </item>
        </list>既定値は<b>True</b>です。</value>
      <remarks>このプロパティは、コンテキストメニューを表示するかどうかを決定します。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContextMenu" />または<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContextMenuStrip" />が設定されている場合、このコントロールはその特定のメニューを表示します。どちらの値も設定されていない場合は、デフォルトのコンテキストメニューが表示されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContextMenu" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContextMenuStrip" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ShowGrippers">
      <summary>タッチ操作で入力を行うときにグリッパー（丸い選択ハンドル）を表示するかどうかを取得または設定します。</summary>
      <value>タッチ操作で入力を行うときにグリッパーを表示する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ShowTouchToolBar">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchToolBar" />の表示方法を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchToolBar" />の表示方法を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions" />値。デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions.TapGripper" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SingleBorderColor">
      <summary>派生クラスでオーバーライドされると、コントロールの<b>BorderStyle</b> プロパティが <b>FixedSingle</b>に設定されているときの境界線の色を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyle" />が<b>FixedSingle</b>のときの罫線の色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.WindowFrame" />です。</value>
      <remarks>この <see cref="T:System.Drawing.Color" /> は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyle" /> が <b>FixedSingle</b> のときにのみ有効です。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyle" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text">
      <summary>コントロールの現在のテキストを取得または設定します。</summary>
      <value>コントロールの現在のテキストを表す<b><see cref="T:System.String">String</see></b>値。</value>
      <remarks>
        <b>Text</b> プロパティは、このコントロールに表示される文字列値を取得します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TextLength" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TextLength">
      <summary>コントロールのテキストの長さを取得します。</summary>
      <value>コントロールのテキストの長さを表す<b><see cref="T:System.Int32">Int32</see></b>値。</value>
      <remarks>コントロールのテキストから特定の文字列を検索するタスクなどにおいて、文字数の総数が既知である必要がある場合は、 このプロパティを使用して、タスクの文字列の文字数を決定できます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchContextMenuScale">
      <summary>タッチによってコンテキストメニューがポップアップしたときにコンテキストメニュー項目の高さに適用する係数を取得または設定します。</summary>
      <value>この係数は、タッチによってコンテキストメニューがポップアップしたときにコンテキストメニュー項目の高さに適用されます。デフォルト値は1.5fです。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchContextMenuScale" />を設定することで、タッチによってコンテキストメニューがポップアップしたときにコンテキストメニュー項目の高さを高くすることができます。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">指定できる値は 1 から 4 までです。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchDropDownScale">
      <summary>タッチ操作でドロップダウンを表示した時ドロップダウン項目に適用するスケールの比率を取得または設定します。</summary>
      <value>タッチ操作でドロップダウンを表示した時ドロップダウン項目に適用するスケールの比率。規定値は 150%です。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">指定できる値は 1 から 4 までです。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchToolBar">
      <summary>タッチ操作によって表示される<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchToolBar" />を取得します。</summary>
      <value>タッチ操作によって表示される<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchToolBar" />インスタンス。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.AppendText(System.String)">
      <summary>コントロールの現在のテキストにテキストを追加します。</summary>
      <param name="text">コントロールの現在のテキストに追加するテキストを表す<b><see cref="T:System.String">String</see></b>値。</param>
      <remarks>
        <b>AppendText</b> メソッドは、連結演算子を使用して <b><see cref="P:GrapeCity.Win.Editors.EditBase.Text">Text</see></b> プロパティにテキストを連結する代わりに、このメソッドを使用してコントロールの既存のテキストにテキストを追加できます。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Clear">
      <summary>コントロールのすべてのテキストをクリアします。</summary>
      <remarks>このメソッドを使用すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" />プロパティに空の文字列を代入せずに、コントロールの内容を削除できます。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ClearUndo">
      <summary>コントロールのアンドゥ バッファから直前に実行された操作に関する情報を削除します。</summary>
      <remarks>
        <b>ClearUndo</b> メソッドを使用すると、アプリケーションの状態に基づいて、元に戻す操作が繰り返されるのを防ぐことができます。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Clear" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy">
      <summary>コントロールの現在の選択項目をクリップボードにコピーします。</summary>
      <remarks>
        <b>
          <see cref="T:System.Windows.Forms.Clipboard">Clipboard</see>
        </b>クラスの代わりに<b>Copy</b> メソッドを使用すると、 コントロールのテキストをコピーしてクリップボードに置くことができます。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Clear" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut">
      <summary>コントロールの現在の選択項目をクリップボードに移動します。</summary>
      <remarks>Cutメソッドは、コントロールでテキストが選択されている場合に、コントロールからテキストだけを切り取ります。 <b><see cref="T:System.Windows.Forms.Clipboard">Clipboard</see></b>クラスの代わりにこのメソッドを使用すると、 コントロールのテキストをコピーしてクリップボードに移動することができます。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Clear" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DeselectAll">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" /> プロパティの値をゼロにして、コントロールで文字が選択されていない状態にします。</summary>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectAll" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Dispose(System.Boolean)">
      <summary>このコントロールと子コントロールが使用しているアンマネージリソースを解放します。オプションで、マネージリソースも解放します。</summary>
      <param name="disposing">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>マネージリソースとアンマネージリソースの両方を解放します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>アンマネージリソースだけを解放します。</description>
          </item>
        </list>
      </param>
      <remarks>
        <see cref="T:System.Windows.Forms.Control" />の使用が終わったら、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Dispose(System.Boolean)" />を呼び出します。<b>Dispose</b>メソッドは、<see cref="T:System.Windows.Forms.Control" nolink="true" />を使用できない状態にします。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Dispose(System.Boolean)" nolink="true" />を呼び出した後で、<see cref="T:System.Windows.Forms.Control" nolink="true" />へのすべての参照を解放し、<see cref="T:System.Windows.Forms.Control" nolink="true" />によって占有されていたメモリをガベージコレクターがクリアできるようにする必要があります。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.GetPreferredSize(System.Drawing.Size)">
      <summary>コントロールが収まる矩形領域のサイズを取得します。</summary>
      <param name="proposedSize">調整対象となる<b><see cref="System.Drawing.Size">Size</see></b>値。</param>
      <returns>矩形の幅と高さを表す<see cref="T:System.Drawing.Size" />型オブジェクトの順序付きペア。</returns>
      <remarks>GetPreferredSizeの動作はコントロールによって異なります。LayoutEngineは、返されたサイズをコントロールに割り当てることができない場合があります。proposedSizeパラメーターによって示された制約よりも大きいサイズを返すことは可能ですが、制約が小さくなるのに合わせてproposedSizeも小さくする必要があります。たとえば、GetPreferredSize(new Size(100, 0))をGetPreferredSize(new Size(200, 0))より大きくしないでください。例外は、proposedSizeが0またはSize.Emptyの場合です。これらは制約なしとして定義されています。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.IsInputChar(System.Char)">
      <summary>文字が、コントロールによって認識される入力文字かどうかを判断します。</summary>
      <param name="charCode">判定する文字を表す<b><see cref="T:System.Char">Char</see></b>値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定された文字は入力文字です。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定された文字は入力文字ではありません。</description>
          </item>
        </list>
      </returns>
      <remarks>
        <b>IsInputChar</b>メソッドを呼び出すと、charCodeパラメーターで指定した文字が、コントロールに必要な入力文字かどうかを判断できます。このメソッドは、ウィンドウメッセージのプリプロセス中に呼び出され、指定された入力文字を前処理するか、直接コントロールに送信するかを決定します。<b>IsInputChar</b>が<see langword="true" />を返す場合、指定された文字はコントロールに直接送信されます。<b>IsInputChar</b>が<see langword="false" />を返す場合、文字は前処理され、プリプロセス中に文字に対する処理が終了されなかった場合だけ、コントロールに送信されます。文字のプリプロセス中には、その文字が別のコントロールのニーモニックかどうかのチェックなどが行われます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.IsInputKey(System.Windows.Forms.Keys)">
      <summary>指定されているキーが、コントロールに認識される入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</summary>
      <param name="keyData">キーを表す<b><see cref="T:System.Windows.Forms.Keys">Keys</see></b>値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定されたキーは入力キーです。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定されたキーは入力キーではありません。</description>
          </item>
        </list>
      </returns>
      <remarks>
        <b>IsInputKey</b> メソッドを呼び出すと、keyData パラメーターで指定したキーが、コントロールに必要な入力キーかどうかを判断できます。このメソッドは、ウィンドウメッセージのプリプロセス中に呼び出され、指定された入力キーを前処理するか、直接コントロールに送信するかを決定します。<b>IsInputKey</b> が <see langword="true" /> を返す場合、指定されたキーはコントロールに直接送信されます。<b>IsInputKey</b> が <see langword="false" /> を返す場合、キーは前処理され、プリプロセス中にキーに対する処理が終了されなかった場合だけ、コントロールに送信されます。前処理されるキーには、［Tab］、［Enter］、［Esc］、［↑］、［↓］、［←］、［→］の各キーが含まれます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>KeyExit イベントを使用してフォーカスを移動します。</summary>
      <param name="e">イベントデータを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> インスタンス。</param>
      <remarks>
        <b>ExitKeys.CharInput</b>、<b>ExitKeys.CtrlRight</b>、<b>ExitKeys.NextControl</b>、<b>ExitKeys.Right</b>、および<b>ExitKeys.Tab</b>は、フォーカスを前方に移動します。その他の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" />は、フォーカスを後方に移動します。<note>このメソッドを継承クラスでオーバーライドする場合は、基本メソッドを呼び出す必要があります。そうしなければ、フォーカスは移動しません。 </note></remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnBorderStyleChanged(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyleChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnBorderStyleChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnBorderStyleChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnBorderStyleChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnContentAlignmentChanged(System.EventArgs)">
      <summary>
        <b>ContentAlignment</b>プロパティが変更されたときに発生します。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnContentAlignmentChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnContentAlignmentChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnContentAlignmentChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnEditStatusChanged(GrapeCity.Win.Spread.InputMan.CellType.EditStatusChangedEventArgs)">
      <summary>
        <b>EditStatus</b>Changedイベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditStatusChangedEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEditStatusChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEditStatusChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEditStatusChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnEnabledChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnableChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEnableChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnableChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnEnter(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Enter" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnter</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEnter</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnter</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnFontChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.FontChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnFontChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnFontChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnFontChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnGotFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.GotFocus" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnGotFocus</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnGotFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnGotFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnHandleCreated(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.HandleCreated" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnHideSelectionChanged(System.EventArgs)">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.HideSelection" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnHideSelectionChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnHideSelectionChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本OnHideSelectionChangedの<b>OnGotFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnInvalidInput(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnInvalidInput</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnInvalidInput</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnInvalidInput</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.KeyExit" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnKeyExit</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnKeyExit</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnKeyExit</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnLeave(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Leave">Leave</see> /&gt; イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnLeave</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnLeave</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnLeave</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnLocationChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.LocationChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnLostFocus(System.EventArgs)">
      <summary>
        <see cref="T:System.Windows.Forms.Control.LostFocus" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnLostFocus</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnLostFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnLostFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnModifiedChanged(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ModifiedChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnModifiedChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnModifiedChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnModifiedChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnPaddingChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.PaddingChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnPaddingChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnPaddingChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnPaddingChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnParentBackColorChanged(System.EventArgs)">
      <summary>コントロールのコンテナの<b><see cref="P:System.Windows.Forms.Control.BackColor">BackColor</see></b> プロパティが変更されたとき、<see cref="E:System.Windows.Forms.Control.BackColorChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnParentBackColorChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnParentBackColorChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnParentBackColorChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnReadOnlyChanged(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnlyChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnReadOnlyChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnReadOnlyChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnReadOnlyChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnTextChanging(GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TextChanging" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnTextChanging</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnTextChanging</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnTextChanging</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnValidated(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Validated" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnValidated</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnValidated</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnValidated</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Validating" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.ComponentModel.CancelEventArgs">CancelEventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnValidating</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnValidating</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnValidating</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OnVisibleChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnVisibleChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnVisibleChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnVisibleChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste">
      <summary>コントロールの現在の選択項目にクリップボードの内容を貼り付けます。</summary>
      <remarks>
        <b>Paste</b> メソッドは、クリップボードにテキストが保持されている場合、テキストのみをコントロールに貼り付けます。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Clear" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ResetText">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" /> プロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ScrollToCaret">
      <summary>コントロールの内容を現在のキャレット位置にスクロールします。</summary>
      <remarks>
        <para>
          <b>ScrollToCaret</b> メソッドを使用すると、キャレットがコントロールの表示領域内に入るまでコントロールの内容を スクロールできるようになります。キャレットがコントロールの表示領域より下にある場合、 <b>ScrollToCaret</b> メソッドは、 キャレットがコントロールの一番下に表示されるまでコントロールの内容をスクロールします。反対に、 キャレットがコントロールの表示領域より上にある場合、このメソッドは、キャレットがコントロールの一番上に 表示されるまでコントロールの内容をスクロールします。 </para>
        <para> このメソッドを複数行テキストコントロールで使用すると、テキストエントリポイントをコントロールの表示領域内に確実に入れられます。 </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Select(System.Int32,System.Int32)">
      <summary>テキストの指定範囲を選択します。</summary>
      <param name="start">選択する最初の文字を指定する<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="length">選択する文字数を指定する<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">startパラメーターの値<b></b>が0未満です。</exception>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectAll" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DeselectAll" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectedText" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectAll">
      <summary>ドロップダウンエディットウィンドウのすべてのテキストを選択します。</summary>
      <remarks>このメソッドを使用すると、コントロールのすべてのテキストを選択できます。このメソッドを<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut" />メソッド（コントロールでテキストが選択されている必要がある）と組み合わせて使用すると、コントロールの内容を切り取って<b>Clipboard</b>に貼り付けることができます。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.DeselectAll" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
        <b>EditBase</b>コントロールの指定された境界を設定します。</summary>
      <param name="x">
        <b>
          <see cref="P:System.Windows.Forms.Control.Left">Left</see>
        </b> プロパティを設定する <b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="y">
        <b>
          <see cref="P:System.Windows.Forms.Control.Top">Top</see>
        </b> プロパティを設定する <b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="width">
        <b>
          <see cref="P:System.Windows.Forms.Control.Width">Width</see>
        </b> プロパティを設定する <b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="height">
        <b>
          <see cref="P:System.Windows.Forms.Control.Height">Height</see>
        </b> プロパティを設定する <b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="specified">境界の設定に使用される引数を指定する<b><see cref="T:System.Windows.Forms.BoundsSpecified">BoundsSpecified</see></b> 値のビットごとの組み合わせ。列挙体。</param>
      <remarks>通常、境界に対応する各パラメーターは、specifiedパラメーターを除き、それぞれの現在の値を指定して渡されます。たとえば、コントロールの現在のインスタンスに関連する<see cref="P:System.Windows.Forms.Control.Height" />プロパティ、<see cref="P:System.Windows.Forms.Control.Width" />プロパティ、<see cref="P:System.Windows.Forms.Control.Location" />プロパティの<see cref="P:System.Drawing.Point.X" />または<see cref="P:System.Drawing.Point.Y" />プロパティを渡すことができます。ただし、渡した値はすべて受け入れられ、コントロールに適用されます。<para />specifiedパラメーターは、アプリケーションによって変更されたコントロールの<see cref="P:System.Windows.Forms.Control.Bounds" />の要素を表します。たとえば、コントロールの<see cref="T:System.Drawing.Size" />を変更した場合、specifiedパラメーターの値は<see cref="T:System.Windows.Forms.BoundsSpecified" />の<b>Size</b>値になります。ただし、<see cref="P:System.Windows.Forms.Control.Dock" />プロパティが設定された結果として<b>Size</b>が調整された場合、specifiedパラメーターの値は<b>BoundsSpecified</b>のNone値になります。<para /><b>継承時の注意: </b><para />派生クラスでSetBoundsCoreをオーバーライドする場合は、基本クラスのSetBoundsCoreメソッドを呼び出して、コントロールの境界を強制的に変更してください。派生クラスでは、SetBoundsCoreメソッドにサイズの制約を追加できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ShortcutClear">
      <summary>ショートカットを使用してコントロールのすべてのテキストをクリアします。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />に使用されます。その動作は<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Clear" />メソッドとほぼ同じです。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo">
      <summary>コントロールで直前に実行された操作を元に戻します。</summary>
      <remarks>このメソッドは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo" /> プロパティが <see langword="true" /> を返す場合に、コントロールで最後に実行された <b>Clipboard</b> 操作またはテキスト変更操作を元に戻します。<note>このメソッドは、コントロールにフォーカスがない場合、またはキャレットがすでにコントロールの表示領域に位置している場合には効果がありません。 </note></remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Clear" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.WndProc(System.Windows.Forms.Message@)">
      <summary>ウィンドウメッセージを処理します。</summary>
      <param name="m">処理対象の<b><see cref="T:System.Windows.Forms.Message">Message</see></b>。</param>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.AutoSizeChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.AutoSize" />プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.AutoSize" /> プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyleChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyle" />プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.BorderStyle" /> プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContentAlignmentChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContentAlignment" /> プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ContentAlignment" /> プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.EditStatusChanged">
      <summary>
        <b>
          <see cref="P:GrapeCity.Win.Editors.EditBase.EditMode">EditMode</see>
        </b> プロパティの値が変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OverWrite" />プロパティが変更されるか、ユーザーが［Insert］キーを押した場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.HideSelectionChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.HideSelection" />プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.HideSelectionChanged" /> プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput">
      <summary>無効な文字を入力したときに発生します。</summary>
      <remarks>このイベントは、キーボードまたは<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" />メソッドを使用して無効な文字が入力された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.KeyExit">
      <summary>コントロールからフォーカスを移動させる特別なキーを入力したときに発生します。</summary>
      <remarks>このイベントは、キーボード操作によってフォーカスがコントロールから離れた場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ModifiedChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Modified" /> プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Modified" /> プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnlyChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" /> プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" /> プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.RightToLeftChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.RightToLeft" /> プロパティが変更されたときに発生します。<para />このイベントは、このクラスには関連していません。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.RightToLeft" /> プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TextChanging">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" /> プロパティがコントロールで変更される直前に発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" />プロパティが変更される前に発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.EditStatusChangedEventArgs">
      <summary>
        <b>EditStatusChanged</b> イベントのイベントデータを格納します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.EditStatusChangedEventArgs.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditStatusChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="overwrite">現在の編集ステータスが上書きモードかどうかを示す値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.EditStatusChangedEventArgs.Overwrite">
      <summary>現在の編集ステータスが上書きモードかどうかを示す値を取得します。</summary>
      <value>現在の編集ステータスが上書きモードかどうかを示す<see langword="bool" />値。</value>
      <remarks>このプロパティは、編集状態を取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs.Field" /> 通知の <see cref="T:System.EventArgs" /> を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs.#ctor(GrapeCity.Win.Spread.InputMan.CellType.Fields.Field)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="field">フォーカスのあるフィールドを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs.Field" /> オブジェクト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs.Field">
      <summary>イベントを発生させるフィールドを取得します。</summary>
      <value>イベントを発生させたフィールドを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs.Field" /> オブジェクト。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl" /> の <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldPaint" /> イベントの <see cref="T:System.EventArgs" /> を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,GrapeCity.Win.Spread.InputMan.CellType.Fields.Field)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="graphics">項目の描画に使用される<see cref="T:System.Drawing.Graphics" />オブジェクト。</param>
      <param name="clipRectangle">描画先の矩形を表すクリップされた <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="field">描画された <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs.Field" />。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs.Field">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldPaint" /> イベントを発生させたフィールドを取得します。</summary>
      <value>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldPaint" /> イベントを発生させたフィールドを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs.Field" /> オブジェクト。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl">
      <summary>書式付きテキストエディタの基本クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>
        <para> このクラスはテキストエディタコントロールの基本機能を実装します。これらの機能にはテキストの選択、クリップボード機能、アンドゥ、 および多くのイベントが含まれます。 </para>
        <note> 通常、このクラスから継承することはありません。独自テキストコントロールクラスを作成するには、 <b><see cref="T:GrapeCity.Win.Editors.GcTextBox">GcTextBox</see></b>から継承します。 </note>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="container">コントロールが配置されるコンテナを表す<b><see cref="T:System.ComponentModel.IContainer">IContainer</see></b>オブジェクト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
      <value>コントロールの背景色を指定する<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [Window]</b>です。</value>
      <remarks>
        <b>BackColor</b>プロパティを使用してテキストコントロールの背景色を変更し、コントロールをフォームの色彩設計に合わせることができます。<para />コントロール内のテキストの色を変更するには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ForeColor" />プロパティを使用します。テキストコントロールの<b>BackColor</b>プロパティを設定するときは、コントロールのテキストが見えなくなるような色を選ばないでください。たとえば、<b>BackColor</b>プロパティと<b>ForeColor</b>プロパティを両方とも<b>Color.Black</b>に設定した場合、テキストボックスコントロール内のテキストは見えなくなります。<para />このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" />プロパティが<see langword="true" />に設定されている場合、無効になることがあります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.BorderStyle">
      <summary>コントロールの境界線の種類を取得または設定します。</summary>
      <value>罫線スタイルを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.BorderStyle" /> 列挙体。</value>
      <remarks>
        <b>BorderStyle</b> プロパティを使用すると、既定の3次元コントロールに加えて、境界線のないフラットスタイルのコントロールを作成できます。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティに指定された値が有効な列挙値ではありません。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.SingleBorderColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ClipContent">
      <summary>データをクリップボードにコピーする方法を取得または設定します。</summary>
      <value>クリップボードへのデータのコピー方法を指定する <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ClipContent" /> 列挙値の１つ。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" /> です。</value>
      <remarks>
        <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" /> 値は、メソッドまたは UI 操作によってデータを <see cref="T:System.Windows.Forms.Clipboard" /> に設定するときにすべての表示テキストがコピーされることを意味します。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.ExcludeLiterals" /> 値は、リテラルフィールドのテキストを除く表示テキストがコピーされることを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.DisplayText">
      <summary>コントロールがフォーカスを持っていないときに表示される文字列を取得します。</summary>
      <value>表示テキストを示す <see cref="T:System.String" /> 値。<br />既定値は <see cref="F:System.String.Empty" /> です。</value>
      <remarks>このプロパティは、入力フォーカスがないときに表示されるテキストを取得します。<see cref="T:GrapeCity.Win.Views.DisplayField" /> プロパティと <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> プロパティがこのプロパティの基になります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FlatStyle">
      <summary>コントロールのフラットスタイルを取得または設定します。</summary>
      <value>編集コントロールのフラットスタイルを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx" /> 列挙体。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Standard" /> です。</value>
      <remarks>
        <b>FlatStyle</b> プロパティは、コントロールの表示スタイルを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ForeColor">
      <summary>コントロールの文字色を取得または設定します。</summary>
      <value>コントロールの文字色を指定する<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [WindowText]</b>です。</value>
      <remarks>
        <b>ForeColor</b>プロパティを使用してコントロール内のテキストの色を変更し、フォーム上の他のコントロールのテキストに合わせることができます。また、このプロパティを使用して、無効な値を含む特定のコントロールを強調表示することもできます。<para />コントロールの背景色を変更するには、<b>BackColor</b>プロパティを使用します。テキストコントロールのForeColorプロパティを設定するときは、コントロールのテキストが見えなくなるような色を選ばないでください。たとえば、<b>ForeColor</b>プロパティと<b>BackColor</b>プロパティを両方とも<b>Color.Black</b>に設定した場合、テキストボックス内のテキストは見えなくなります。<para />このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" />プロパティがtrueに設定されている場合、無効になることがあります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.HighlightText">
      <summary>コントロールがフォーカスを受け取ったときに、テキストを選択するかどうかを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.HighlightText" /> 列挙値の１つ。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.None" /> です。</value>
      <remarks>入力フォーカスがはじめてコントロールに入るとき、このプロパティによってコントロールのハイライトモードが決定されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.None" /> の場合、ハイライト効果はありません。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.Field" /> の場合は、キャレットのあるフィールドが強調表示されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.All" /> の場合は、すべてのテキストが強調表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.InputStatus">
      <summary>フィールドの入力状態を取得します。</summary>
      <value>テキストが完全に入力されているか、部分的に入力されているか、またはまったく入力されていないかを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.InputStatus" />列挙体。</value>
      <remarks>テキストが入力されていない場合、このプロパティは <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.InputStatus.Empty" /> になります。テキストの一部が入力されている場合、このプロパティは <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.InputStatus.Part" /> になります。テキストがすべて入力されている場合、このプロパティは <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.InputStatus.Full" /> になります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.PromptChar">
      <summary>入力プロンプトとして使用される文字を取得または設定します。</summary>
      <value>入力プロンプトとして使用される文字。既定値はアンダースコア（"_"）です。</value>
      <remarks>
        <b>PromptChar</b> プロパティは、１つ以上の入力フィールドまたは表示フィールドが存在していて <see cref="N:GrapeCity.Win.Value" /> がないときに表示されるテキストを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ShowLiterals">
      <summary>入力中にリテラル文字列を表示するかどうかを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ShowLiterals" /> 列挙値の１つ。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.Always" /> です。</value>
      <remarks>
        <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.Always" /> の場合、リテラルフィールドは常に表示されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.PostDisplay" /> の場合は、リテラルフィールドに隣接するフィールドが入力された後にリテラルフィールドが表示されます（フィールドにデータがある場合のみ）。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.PreDisplay" /> の場合は、リテラルフィールドに隣接するフィールドが入力される前にリテラルフィールドが表示されます（フィールドにデータがある場合のみ）。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.SingleBorderColor">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.BorderStyle" /> が <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" /> のときの色を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.BorderStyle" /> が <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" /> のときの罫線の色を示す <see cref="T:System.Drawing.Color" />。</value>
      <remarks>この色は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.BorderStyle" /> が <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" /> のときにのみ有効です。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.TabAction">
      <summary>［Tab］キーを押したときにコントロール間でフォーカスを移動するか、コントロール内のフィールド間でフォーカスを移動するかを決定する値を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.TabAction" /> 列挙値の１つ。既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Control" /> です。</value>
      <remarks>このプロパティが <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Field" /> の場合、キャレットは次のフィールドに移動します。キャレットが最後のフィールドにあるときに［Tab］キーを押すと、入力フォーカスがこのコントロールから離れます。値が <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Control" /> の場合は、標準コントロールと同じように動作します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.Dispose(System.Boolean)">
      <summary>このコントロールと子コントロールが使用しているアンマネージリソースを解放します。オプションで、マネージリソースも解放します。</summary>
      <param name="disposing">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>マネージリソースとアンマネージリソースの両方を解放します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>アンマネージリソースだけを解放します。</description>
          </item>
        </list>
      </param>
      <remarks>
        <see cref="T:System.Windows.Forms.Control" />の使用が終わったら、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.Dispose(System.Boolean)" />を呼び出します。<b>Dispose</b>メソッドは、<see cref="T:System.Windows.Forms.Control" nolink="true" />を使用できない状態にします。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.Dispose(System.Boolean)" nolink="true" />を呼び出した後で、<see cref="T:System.Windows.Forms.Control" nolink="true" />へのすべての参照を解放し、<see cref="T:System.Windows.Forms.Control" nolink="true" />によって占有されていたメモリをガベージコレクターがクリアできるようにする必要があります。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.DoSpinDown">
      <summary>スピンダウン動作を実行します。</summary>
      <remarks>このメソッドの動作は［↓］キーを押した場合と同じです。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.DoSpinUp" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.DoSpinUp">
      <summary>スピンアップ動作を実行します。</summary>
      <remarks>このメソッドの動作は［↑］キーを押した場合と同じです。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.DoSpinDown" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>指定されているキーが、コントロールに認識される入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</summary>
      <param name="keyData">キーを表す<b><see cref="T:System.Windows.Forms.Keys">Keys</see></b>値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定されたキーは入力キーです。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定されたキーは入力キーではありません。</description>
          </item>
        </list>
      </returns>
      <remarks>
        <b>IsInputKey</b> メソッドを呼び出すと、keyData パラメーターで指定したキーが、コントロールに必要な入力キーかどうかを判断できます。このメソッドは、ウィンドウメッセージのプリプロセス中に呼び出され、指定された入力キーを前処理するか、直接コントロールに送信するかを決定します。<b>IsInputKey</b> が <see langword="true" /> を返す場合、指定されたキーはコントロールに直接送信されます。<b>IsInputKey</b> が <see langword="false" /> を返す場合、キーは前処理され、プリプロセス中にキーに対する処理が終了されなかった場合だけ、コントロールに送信されます。前処理されるキーには、［Tab］、［Enter］、［Esc］、［↑］、［↓］、［←］、［→］の各キーが含まれます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnEnabledChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnableChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEnableChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnableChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnFieldEnter(GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnFieldEnter</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnFieldEnter</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnFieldEnter</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnFieldLeave(GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldEventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnFieldLeave</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnFieldLeave</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnFieldLeave</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnFieldPaint(GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldPaint" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnFieldPaint</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnFieldPaint</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnFieldPaint</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnGotFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.GotFocus" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnGotFocus</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnGotFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnGotFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the KeyDown event.</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnLostFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.LostFocus" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnLostFocus</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnLostFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnLostFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>MouseUp イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.Windows.Forms.MouseEventArgs">MouseEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnSpinDown(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.SpinDown" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnSpinDown</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnSpinDown</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnSpinDown</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnSpinUp(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.SpinUp" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnSpinUp</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnSpinUp</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnSpinUp</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.OnVisibleChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnVisibleChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnVisibleChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnVisibleChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ShortcutSpinDown">
      <summary>ショートカットキーのスピンダウンアクションを実行します。</summary>
      <remarks>このメソッドは主に <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" /> に使用されます。その動作は <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.DoSpinDown" /> メソッドを使用した場合と同じです。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.ShortcutSpinUp">
      <summary>ショートカットキーのスピンアップアクションを実行します。</summary>
      <remarks>このメソッドは主に <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" /> に使用されます。その動作は <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.DoSpinUp" /> メソッドを使用した場合と同じです。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter">
      <summary>いずれかのフィールドに入ったときに発生します。</summary>
      <remarks>このイベントは、入力フォーカスがフィールドに入ったときに発生します。</remarks>
      <seealso cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" />
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave">
      <summary>入力フォーカスがフィールドから離れると発生します。</summary>
      <remarks>このイベントは、入力フォーカスがフィールドから離れたときに発生します。</remarks>
      <seealso cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" />
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldPaint">
      <summary>いずれかのフィールドが描画されたときに発生します。</summary>
      <remarks>このイベントは、フィールドが再描画されたときに発生します。<b>FieldPaint</b> イベントを処理するメソッドに <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldPaintEventArgs" /> のインスタンスを渡します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.SpinDown">
      <summary>スピンアクションがダウンのときに発生します。</summary>
      <remarks>このイベントは、スピンダウンアクションが実行されるときに発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.SpinUp">
      <summary>スピンアクションがアップのときに発生します。</summary>
      <remarks>このイベントは、スピンアップアクションが実行されるときに発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType">
      <summary>書式付きテキストエディタの基本クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.ClipContent">
      <summary>クリップボードへのデータのコピー方法を取得または設定します。</summary>
      <value>クリップボードへのデータのコピー方法を指定する <see cref="P:GrapeCity.Win.Spread.InputMan.CellTypeEditorControl.ClipContent" /> 列挙値の１つ。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" /> です。</value>
      <remarks>
        <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" /> 値は、メソッドまたは UI 操作によってデータを <see cref="T:System.Windows.Forms.Clipboard" /> に設定するときにすべての表示テキストがコピーされることを意味します。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.ExcludeLiterals" /> 値は、リテラルフィールドのテキストを除く表示テキストがコピーされることを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.PromptChar">
      <summary>フィールドに何も入力されていないときに表示するプロンプト文字を取得または設定します。</summary>
      <value>プロンプト文字を表す<b><see cref="T:System.Char">Char</see></b>値。 既定値は<b>_</b>です。</value>
      <remarks>
        <b>PromptChar</b> プロパティは、１つ以上の入力フィールドまたは表示フィールドが存在していて <see cref="N:GrapeCity.Win.Value" /> がないときに表示されるテキストを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.ShowLiterals">
      <summary>入力中にリテラル文字列を表示するかどうかを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellTypeEditorControl.ShowLiterals" /> 列挙値の１つ。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.Always" /> です。</value>
      <remarks>
        <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.Always" /> の場合、リテラルフィールドは常に表示されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.PostDisplay" /> の場合は、リテラルフィールドに隣接するフィールドがデータを取得した後にのみリテラルフィールドが表示されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.PreDisplay" /> の場合は、リテラルフィールドに隣接するフィールドがデータを取得する前にのみリテラルフィールドが表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.TabAction">
      <summary>［Tab］キーを押したときにコントロール間でフォーカスを移動するか、コントロール内のフィールド間でフォーカスを移動するかを決定する値を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellTypeEditorControl.TabAction" /> 列挙値の１つ。既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Control" /> です。</value>
      <remarks>このプロパティが <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Field" /> の場合、キャレットは次のフィールドに移動します。キャレットが最後のフィールドにあるときに［Tab］キーを押すと、入力フォーカスがこのコントロールから離れます。値が <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Control" /> の場合は、標準コントロールと同じように動作します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.Clone">
      <summary>基本 InputMan セルを作成して返します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に対して、ターゲットオブジェクトのシリアル化に必要なデータを設定します。</summary>
      <param name="info">データを設定する <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">このシリアル化のシリアル化（<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照）。</param>
      <exception cref="T:System.Security.SecurityException">呼び出し元に必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>エディタコントロールを初期化します。</summary>
      <param name="control">初期化するエディタコントロール。</param>
      <param name="appearance">外観設定。</param>
      <param name="zoomFactor">コントロールの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControlCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance">
      <summary>
        <b>FlatButtonAppearance</b>クラスを表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance.BorderColor">
      <summary>ボタンの周囲の境界線の色を取得または設定します。</summary>
      <value>ボタンを囲む境界線の色を表す<see cref="T:System.Drawing.Color" />構造体。</value>
      <exception cref="T:System.ArgumentException">透過色はサポートされていません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance.BorderSize">
      <summary>ボタンの周囲の境界線のサイズ（ピクセル単位）を指定する値を取得または設定します。</summary>
      <value>ボタンを囲む境界線のサイズ（ピクセル単位）を表す<see cref="T:System.Int32" />。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">フラットボタンの<b>BorderSize</b>は0以上にする必要があります。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance.CheckedBackColor">
      <summary>ボタンがオンになっていて、マウスポインタがコントロールの境界の外側にあるときの、ボタンのクライアント領域の色を取得または設定します。</summary>
      <value>ボタンのクライアント領域の色を表す<see cref="T:System.Drawing.Color" />構造体。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance.MouseDownBackColor">
      <summary>マウスがコントロールの境界内で押されたときの、ボタンのクライアント領域の色を取得または設定します。</summary>
      <value>ボタンのクライアント領域の色を表す<see cref="T:System.Drawing.Color" />構造体。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance.MouseOverBackColor">
      <summary>マウスポインタがコントロールの境界内にあるときの、ボタンのクライアント領域の色を取得または設定します。</summary>
      <value>ボタンのクライアント領域の色を表す<see cref="T:System.Drawing.Color" />構造体。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday">
      <summary>曜日規則によって設定された、特定の年の臨時休業日を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.#ctor">
      <summary>指定した日付を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.#ctor(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.MonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags)">
      <summary>指定した日付を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="year">ForceDayOfWeekHolidayの年を示す<see cref="T:System.Int32" />値。</param>
      <param name="month">月を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" />列挙値。</param>
      <param name="weekdayOrder">月の第X曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" />列挙値。</param>
      <param name="dayOfWeek">曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" />列挙値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.#ctor(System.String,System.Int32,GrapeCity.Win.Spread.InputMan.CellType.MonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags)">
      <summary>指定した日付を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">ForceDayOfWeekHolidayの名前を示す<see cref="T:System.String" />値。</param>
      <param name="year">ForceDayOfWeekHolidayの年を示す<see cref="T:System.Int32" />値。</param>
      <param name="month">月を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" />列挙値。</param>
      <param name="weekdayOrder">月の第X曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" />列挙値。</param>
      <param name="dayOfWeek">曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" />列挙値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.DayOfWeek">
      <summary>曜日を取得または設定します。</summary>
      <value>曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" />列挙値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.DayOfWeekInMonth">
      <summary>休日が適用される週を取得または設定します。</summary>
      <value>月の第X曜日を表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" />列挙値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.IsYearly">
      <summary>
        <b>
          <see cref="T:GrapeCity.Win.Editors.IHoliday">IHoliday</see>
        </b>インタフェースが提供するプロパティで、 <b><see cref="T:GrapeCity.Win.Editors.ForceDayOfWeekHoliday">ForceDayOfWeekHoliday</see></b>オブジェクトでは常に <b>False</b>に設定されています。</summary>
      <value>DayOfWeekHolidayが毎年適用される場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>この実装のForceDayOfWeekHolidayは毎年繰り返されないため、常に<see langword="false" />が返されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.Month">
      <summary>休日が適用される月を取得または設定します。</summary>
      <value>月を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" />列挙値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.Name">
      <summary>臨時休業日の名称を取得または設定します。</summary>
      <value>臨時休業日の名称を表す<b><see cref="T:System.String">String</see></b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.Year">
      <summary>臨時休業日が適用される年を取得または設定します。</summary>
      <value>年を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.Clone">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" /> オブジェクトのシャローコピーを作成します。</summary>
      <returns>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" /> のシャローコピー。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.IsHoliday(System.DateTime)">
      <summary>指定の日付がオブジェクトに関連付けられているかどうかを返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定された日付がオブジェクトに関連付けられています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定された日付はオブジェクトに関連付けられていません。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday.TypeOfDay(System.DateTime)">
      <summary>指定の日付の種類を返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>日のタイプを表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> 列挙体。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday">
      <summary>曜日規則によって設定された、特定の年の臨時営業日を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.#ctor">
      <summary>指定した日付を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.#ctor(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.MonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags)">
      <summary>指定した日付を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="year">ForceDayOfWeekWorkdayの年を示す<see cref="T:System.Int32" />値。</param>
      <param name="month">月を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" />列挙値。</param>
      <param name="weekdayOrder">月の第X曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" />列挙値。</param>
      <param name="dayOfWeek">曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" />列挙値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.#ctor(System.String,System.Int32,GrapeCity.Win.Spread.InputMan.CellType.MonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags)">
      <summary>指定した日付を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">ForceDayOfWeekWorkdayの名前を示す<see cref="T:System.String" />値。</param>
      <param name="year">ForceDayOfWeekWorkdayの年を示す<see cref="T:System.Int32" />値。</param>
      <param name="month">月を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" />列挙値。</param>
      <param name="weekdayOrder">月の第X曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" />列挙値。</param>
      <param name="dayOfWeek">曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" />列挙値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.DayOfWeek">
      <summary>曜日を取得または設定します。</summary>
      <value>曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags" />列挙値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.NotSet" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.DayOfWeekInMonth">
      <summary>休日が適用される週を取得または設定します。</summary>
      <value>月の第X曜日を表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags" />列挙値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.NotSet" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.IsYearly">
      <summary>
        <b>
          <see cref="T:GrapeCity.Win.Editors.IHoliday">IHoliday</see>
        </b>インタフェースが提供するプロパティで、 <b><see cref="T:GrapeCity.Win.Editors.ForceDayOfWeekHoliday">ForceDayOfWeekHoliday</see></b>オブジェクトでは常に <b>False</b>に設定されています。</summary>
      <value>DayOfWeekHolidayが毎年適用される場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>この実装のForceDayOfWeekHolidayは毎年繰り返されないため、常に<see langword="false" />が返されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.Month">
      <summary>臨時営業日が適用される月を取得または設定します。</summary>
      <value>月を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags" />列挙値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.NotSet" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.Name">
      <summary>臨時休業日の名称を取得または設定します。</summary>
      <value>臨時休業日の名称を表す<b><see cref="T:System.String">String</see></b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.Year">
      <summary>臨時営業日が適用される年を取得または設定します。</summary>
      <value>年を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.Clone">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" /> オブジェクトのシャローコピーを作成します。</summary>
      <returns>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekHoliday" /> のシャローコピー。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.IsHoliday(System.DateTime)">
      <summary>指定した日付がForceDayOfWeekWorkdayかどうかを判断します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>指定した日付がForceDayOfWeekWorkdayの場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceDayOfWeekWorkday.TypeOfDay(System.DateTime)">
      <summary>指定の日付の種類を返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>日のタイプを表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> 列挙体。</returns>
      <remarks>このメソッドは、指定した日付がDayOfWeekHolidayの場合は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.ForcedWorkday" />を返し、それ以外の場合は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Normal" />を返します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday">
      <summary>正確に指定された日付に基づく、特定の年のみに適用される休日（臨時休業日）の実装。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.#ctor(System.DateTime)">
      <summary>指定した設定を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="date">臨時休業日を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.#ctor(System.String,System.DateTime)">
      <summary>指定した設定を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">休日の名称を表す<b><see cref="T:System.String">String</see></b>値。</param>
      <param name="date">臨時休業日を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.#ctor(System.DateTime,System.DateTime)">
      <summary>指定した設定を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="startDate">開始日を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</param>
      <param name="endDate">終了日を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.#ctor(System.String,System.DateTime,System.DateTime)">
      <summary>指定した設定を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">休日の名称を表す<b><see cref="T:System.String">String</see></b>値。</param>
      <param name="startDate">開始日を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</param>
      <param name="endDate">終了日を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.End">
      <summary>臨時休業の終了日を取得または設定します。</summary>
      <value>臨時休業期間の終了日を表す<see cref="T:System.DateTime" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.IsYearly">
      <summary>休日が毎年適用されるか、されないかを取得します。</summary>
      <value>この休日が毎年適用される場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>この実装の臨時休業日は毎年繰り返されないため、常に<see langword="false" />が返されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.Name">
      <summary>休日の名称を取得または設定します。</summary>
      <value>休日の名前を示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.Start">
      <summary>臨時休業の開始日を取得または設定します。</summary>
      <value>臨時休業期間の開始日を表す<see cref="T:System.DateTime" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.Clone">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> オブジェクトのシャローコピーを作成します。</summary>
      <returns>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> のシャローコピー。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.IsHoliday(System.DateTime)">
      <summary>指定の日付がオブジェクトに関連付けられているかどうかを返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定された日付がオブジェクトに関連付けられています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定された日付はオブジェクトに関連付けられていません。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday.TypeOfDay(System.DateTime)">
      <summary>指定の日付の種類を返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>日のタイプを表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> 列挙体。</returns>
      <remarks>このメソッドは、指定した日付が休日の場合は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.ForcedWorkday" />を返し、それ以外の場合は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Normal" />を返します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday">
      <summary>正確に指定された日付に基づく、特定の年のみに適用される営業日（臨時営業日）の実装。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.#ctor(System.DateTime)">
      <summary>指定した日付を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="date">臨時営業日を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.#ctor(System.String,System.DateTime)">
      <summary>指定した日付を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">休日の名称を表す<b><see cref="T:System.String">String</see></b>値。</param>
      <param name="date">臨時営業日を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.#ctor(System.DateTime,System.DateTime)">
      <summary>指定した日付を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="startDate">開始日を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</param>
      <param name="endDate">終了日を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.#ctor(System.String,System.DateTime,System.DateTime)">
      <summary>指定した日付を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">休日の名称を表す<b><see cref="T:System.String">String</see></b>値。</param>
      <param name="startDate">開始日を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</param>
      <param name="endDate">終了日を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.End">
      <summary>臨時営業の終了日を取得または設定します。</summary>
      <value>臨時営業期間の終了日を表す<see cref="T:System.DateTime" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.IsYearly">
      <summary>
        <b>
          <see cref="T:GrapeCity.Win.Editors.IHoliday">IHoliday</see>
        </b>インタフェースが提供するプロパティで、 <b><see cref="T:GrapeCity.Win.Editors.ForceWorkday">ForceWorkday</see></b>オブジェクトでは常に<b>False</b>に設定されています。</summary>
      <value>この営業日が毎年適用される場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>この実装の臨時営業日は毎年繰り返されないため、常に<see langword="false" />が返されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.Name">
      <summary>臨時営業日の名称を取得または設定します。</summary>
      <value>臨時営業期間の名前を示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.Start">
      <summary>臨時営業の開始日を取得または設定します。</summary>
      <value>臨時営業期間の開始日を表す<see cref="T:System.DateTime" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.Clone">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday" /> オブジェクトのシャローコピーを作成します。</summary>
      <returns>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday" /> のシャローコピー。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.IsHoliday(System.DateTime)">
      <summary>指定の日付がオブジェクトに関連付けられているかどうかを返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定された日付がオブジェクトに関連付けられています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定された日付はオブジェクトに関連付けられていません。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday.TypeOfDay(System.DateTime)">
      <summary>指定の日付の種類を返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>日のタイプを表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> 列挙体。</returns>
      <remarks>このメソッドは、指定した日付が臨時営業日の場合は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.ForcedWorkday" />を返し、それ以外の場合は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Normal" />を返します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask">
      <summary>
        <b>GcCharMask</b>コントロールを表します。</summary>
      <remarks>GcCharMaskコントロールを使用すると、機能的なテキスト入力インタフェースを迅速かつ効率的に設計できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="container">コントロールが配置されるコンテナを表す<b><see cref="T:System.ComponentModel.IContainer">IContainer</see></b>オブジェクト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AcceptsCrLf">
      <summary>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理方法を示す値を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理モードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" />列挙体。<br />デフォルト値は<b>CrLfMode.NoControl</b>です。</value>
      <remarks>
        <b>CrLf.Cut</b>に設定すると、<b>GcCharMask</b>で文字列をコピー、切り取り、および貼り付けるときの動作が標準の<b>TextBox</b>と同じになります。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AllowSpace">
      <summary>スペースの入力を許可するかどうかを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AllowSpace" />値の1つ。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.Both" />です。</value>
      <remarks>
        <para>
          <b>AllowSpace</b>プロパティを使用して、テキストに入力できるスペースの種類を指定します。</para>
        <para />
        <para>
          <b>AllowSpace</b>が<b>None</b>モードの場合、この<b>GcCharMask</b>にはスペースを入力できません。<b>AllowSpace.Narrow</b>の場合は、半角スペースを入力できます。<b>AllowSpace.Wide</b>の場合は、全角スペースを入力できます。<b>AllowSpace.Both</b>の場合は、すべての種類のスペースを入力できます。</para>
        <para />
        <note>
          <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoConvert" />プロパティが<see langword="true" />で、<b>AllowSpace</b>が<b>AllowSpace.Wide</b>の場合、ユーザーがコントロールに半角スペースを入力すると、自動的に半角スペースが全角スペースに変換されます。これは他の設定についても同じです。また、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Format" />プロパティは常にこのAllowSpaceプロパティと組み合わせて使用されます。 </note>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoConvert" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Format" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoConvert">
      <summary>入力された文字をフィールドの設定に従って自動的に変換するかどうかを取得または設定します。</summary>
      <value>入力マスクに従って文字が自動的に変換される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。デフォルト値は<see langword="true" />です。</value>
      <remarks>
        <para>
          <b>AutoConvert</b>プロパティを<see langword="true" />に設定すると、変換可能なすべての文字が入力マスクに従って自動的に変換されます。たとえば、入力マスクを"A"に設定した場合、小文字を入力すると自動的に大文字に変換されます。</para>
        <para>全角文字入力マスクに半角文字を入力した場合、入力した文字は自動的に全角に変換されます。また、コントロールで半角文字のみが許可されている場合には、全角のスペースは自動的に半角のスペースに変換されます。 </para>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AllowSpace" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Format" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoSize">
      <summary>内容が垂直方向に完全に表示されるようにコントロールのサイズが自動的に設定されるかどうかを示す値を取得または設定します。</summary>
      <value>有効な場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
      <remarks>このプロパティが<see langword="true" />に設定されている場合、<b>GcCharMask</b>の内容全体が表示されるようにその幅が調整されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
      <value>コントロールの背景色を表す<see cref="T:System.Drawing.Color" />。</value>
      <remarks>
        <b>BackColor</b>プロパティを使用してテキストコントロールの背景色を変更し、コントロールをフォームの色彩設計に合わせることができます。<para />コントロール内のテキストの色を変更するには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ForeColor" />プロパティを使用します。テキストコントロールの<b>BackColor</b>プロパティを設定するときは、コントロールのテキストが見えなくなるような色を選ばないでください。たとえば、<b>BackColor</b>プロパティと<b>ForeColor</b>プロパティを両方とも<b>Color.Black</b>に設定した場合、テキストボックスコントロール内のテキストは見えなくなります。<para />このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditBase" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" />プロパティが<see langword="true" />に設定されている場合、無効になることがあります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.BackgroundImage">
      <summary>コントロールに表示する背景画像を取得または設定します。</summary>
      <value>コントロールの背景に表示する画像を表す<see cref="T:System.Drawing.Image" />。</value>
      <remarks>半透明の色または透過色を使った画像は、背景画像として適切に表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.BorderStyle">
      <summary>コントロールの境界線スタイルを取得または設定します。</summary>
      <value>コントロールの境界線スタイルを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.BorderStyle" />。<br /> デフォルト値は<see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />です。</value>
      <remarks>
        <b>BorderStyle</b> プロパティを使用すると、既定の3次元コントロールに加えて、境界線のないフラットスタイルのコントロールを作成できます。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティに指定された値が有効な列挙値ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.CharBoxSpacing">
      <summary>キャラクターボックス間の間隔を示す値を取得または設定します。</summary>
      <value>キャラクターボックス間の間隔を示す<see cref="T:System.Int32" />値。<br /> デフォルト値は-1です。</value>
      <remarks>
        <b>CharBoxSpacing</b>プロパティは、2つの隣接するキャラクターボックス間の間隔を決定します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.CharBoxes" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.CharBoxes">
      <summary>キャラクターボックスのコレクションを取得します。</summary>
      <value>キャラクターボックスが格納されたコレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" />。</value>
      <remarks>
        <b>CharBoxes</b>にはいくつかの種類のキャラクターボックスを追加または削除できます。これには<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.InputBox" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LiteralBox" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBox" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ClipContent">
      <summary>データをクリップボードにコピーする方法を取得または設定します。</summary>
      <value>クリップボードへのデータのコピー方法を指定する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ClipContent" />列挙値の1つ。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" />です。</value>
      <remarks>
        <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" />値は、メソッドまたはUI操作によってデータを<see cref="T:System.Windows.Forms.Clipboard" />に設定するときにすべての表示テキストがコピーされることを意味します。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.ExcludeLiterals" />値は、リテラルフィールドのテキストを除く表示テキストがコピーされることを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.DefaultSize">
      <summary>コントロールのデフォルトサイズを取得します。</summary>
      <value>コントロールの既定のサイズを表す<b><see cref="T:System.Drawing.Size">Size</see></b>値。</value>
      <remarks>
        <b>DefaultSize</b>プロパティは、コントロールが最初に作成されるときのコントロールの<see cref="T:System.Drawing.Size" />を表します。コントロールのサイズを調整するには、その<see cref="T:System.Drawing.Size" nolink="true" />プロパティの値を設定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.FlatStyle">
      <summary>派生クラスでオーバーライドされると、コントロールのフラットスタイルを取得または設定します。</summary>
      <value>編集コントロールのフラットスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx" />列挙体。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Standard" />です。</value>
      <remarks>
        <b>FlatStyle</b> プロパティは、コントロールの表示スタイルを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Format">
      <summary>入力可能な文字種を指定する書式を取得または設定します。</summary>
      <value>コントロールへのテキストの入力書式を指定する文字列。</value>
      <remarks>書式は、キーワードとリテラルを組み合わせたマスクによって指定します。<note> 入力マスクをリテラルのみで構成することはできません。 </note></remarks>
      <seealso cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.InvalidInput" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoConvert" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AllowSpace" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.HighlightText">
      <summary>コントロールがフォーカスを受け取ったときに、テキストを選択するかどうかを取得または設定します。</summary>
      <value>コントロールがフォーカスを取得したときにすべてのテキストが選択される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。デフォルト値は<see langword="false" />です。</value>
      <remarks>
        <para>このプロパティを使用して、コントロールがフォーカスを受け取ったときにコントロールのすべてのテキストを強調表示できます。</para>
        <para>Trueの場合は、コントロールのすべての内容が選択されます。</para>
        <para>False（デフォルト値）の場合は、コントロールの内容は選択されず、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" />プロパティと<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" />プロパティの設定に従ってキャレットが配置されます。 </para>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.SelectionStart" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.SelectionLength" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.InputDirection">
      <summary>入力方向を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection" />を取得または設定します。</summary>
      <value>入力方向を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection" />。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection.LeftToRight" />です。</value>
      <remarks>
        <b>InputDirection</b>プロパティを使用して、ユーザーがデータを入力するときの方向と順序を指定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.PasswordChar">
      <summary>コントロールに入力されたパスワード文字をマスクするために使用される文字を取得または設定します。</summary>
      <value>コントロールに入力された文字をマスクするために使用される文字。入力された文字をマスクしない場合は、このプロパティの値を0（文字値）に設定します。デフォルト値は0（文字値）です。</value>
      <remarks>
        <para>
          <b>PasswordChar</b>を使用して、ダイアログボックスにパスワードフィールドを作成できます。任意の半角文字を使用できますが、Windowsベースのアプリケーションではアスタリスク（*）（Chr(42)）を使うのが一般的です。</para>
        <para>このプロパティは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Text" />プロパティには影響しません。<b>Text</b>にはユーザーが入力した文字列、またはコードから設定した文字列がそのまま格納されます。<b>PasswordChar</b>を0（デフォルト値）に設定すると、コントロールの実際のテキストが表示されます。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.PreferredHeight">
      <summary>コントロールに最適な高さを取得します。</summary>
      <value>コントロールの最適な高さを示す<see cref="T:System.Int32" />値。</value>
      <remarks>このプロパティは、<see cref="P:System.Windows.Forms.Control.PreferredSize" />プロパティの高さと同じです。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>入力候補値を示す<see cref="T:System.String" />値。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>
        <b>RecommendedValue</b>プロパティは、値が完全に入力されていないときにユーザーに提示されるヒントを提供します。値の入力中に特定のショートカットキーまたはキーの組み合わせを押すと、入力候補値を取得できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを示す値を取得または設定します。</summary>
      <value>入力候補値を表示する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>この<b>ShowRecommendedValue</b>が<see langword="true" />の場合、値が完全に入力されていないときに<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.RecommendedValue" />プロパティの値が表示されます。それ以外の場合、<b>RecommendedValue</b>プロパティの値は表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.SingleBorderColor">
      <summary>コントロールの一重境界線の色を取得または設定します。</summary>
      <value>コントロールの境界線の色を指定する<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [WindowFrame]</b>です。</value>
      <remarks>この色は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.BorderStyle" />が<see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />のときにのみ有効です。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Text">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask" />コントロールの現在のテキストを取得または設定します。</summary>
      <value>コントロールの現在のテキストを表す<b><see cref="T:System.String">String</see></b>値。</value>
      <remarks>
        <b>Text</b>プロパティには、すべてのリテラルと入力可能なキャラクターボックス内のすべての文字が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.TouchDropDownScale">
      <summary>タッチ操作でドロップダウンを表示した時ドロップダウン項目に適用するスケールの比率を取得または設定します。</summary>
      <value>タッチ操作でドロップダウンを表示した時ドロップダウン項目に適用するスケールの比率。規定値は 150%です。</value>
      <remarks>このプロパティは、このクラスでは意味がありません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.UseSystemPasswordChar">
      <summary>システムパスワード文字を使用するかどうかを示す値を取得または設定します。</summary>
      <value>システムパスワード文字を使用する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="false" />です。</value>
      <remarks>
        <b>UseSystemPasswordChar</b>プロパティは<b>PasswordChar</b>プロパティよりも優先されます。<b>UseSystemPasswordChar</b>が<see langword="true" />に設定されている場合は常にデフォルトのシステムパスワード文字が使用され、<b>PasswordChar</b>に設定された文字は無視されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Value">
      <summary>コントロールに割り当てられた基になる値を取得または設定します。</summary>
      <value>コントロールの値を示す<see cref="T:System.String" />値。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>これは、フィールド内のすべての文字からリテラルを除いた文字列です。このコントロールにどのようなフィールドがあるかにかかわらず、この<b>Value</b>は常に同じです。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ValueIsFull">
      <summary>コントロールが完全に満たされているかどうかを取得します。</summary>
      <value>コントロールが完全に満たされている場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
      <remarks>このプロパティは、入力可能なすべてのキャラクターボックスが値を持っているかどうかを示します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AboutBox">
      <summary>バージョン情報ダイアログボックスを表示します。</summary>
      <remarks>このメソッドが呼び出された後、製品情報を含むウィンドウが表示されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ApplyRecommendedValue">
      <summary>入力候補値をコントロールに適用します。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />のために使用されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.CreateAccessibilityInstance">
      <summary>新しいユーザー補助オブジェクトを作成します。</summary>
      <returns>新しい<see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Dispose(System.Boolean)">
      <summary>Controlで使用されているアンマネージリソースを解放します。オプションで、マネージリソースを解放することもできます。</summary>
      <param name="disposing">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>マネージリソースとアンマネージリソースの両方を解放します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>アンマネージリソースだけを解放します。</description>
          </item>
        </list>
      </param>
      <remarks>
        <see cref="T:System.Windows.Forms.Control" />の使用が終わったら、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Dispose(System.Boolean)" />を呼び出します。<b>Dispose</b>メソッドは、<see cref="T:System.Windows.Forms.Control" nolink="true" />を使用できない状態にします。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Dispose(System.Boolean)" nolink="true" />を呼び出した後で、<see cref="T:System.Windows.Forms.Control" nolink="true" />へのすべての参照を解放し、<see cref="T:System.Windows.Forms.Control" nolink="true" />によって占有されていたメモリをガベージコレクターがクリアできるようにする必要があります。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.GetDefaultCharBoxes">
      <summary>デフォルトキャラクターボックスを取得します。</summary>
      <returns>入力用のすべてのデフォルトキャラクターボックスを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />の配列。</returns>
      <remarks>派生クラスで<b>GetDefaultCharBoxes</b>メソッドを使用して、コントロールが作成されるときのデフォルトキャラクターボックスをカスタマイズできます。このメソッドが<see langword="null" />を返す場合、コントロールにフィールドは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
      <returns>既定のショートカット機能を含む<b>Dictionary</b><b>&lt;</b><b>Keys, string</b><b>&gt;</b>インタフェースを実装したオブジェクト。</returns>
      <remarks>
        <b>GetDefaultShortcuts</b> メソッドはコントロールが作成されるときに派生クラスに対して既定のショートカット機能の設定を行います。<see langword="null" />を設定した場合には、ショートカット機能は何も設定されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.GetPreferredSize(System.Drawing.Size)">
      <summary>コントロールが収まる矩形領域のサイズを取得します。</summary>
      <param name="proposedSize">調整対象となる<b><see cref="System.Drawing.Size">Size</see></b>値。</param>
      <returns>矩形の幅と高さを表す<see cref="T:System.Drawing.Size" />型オブジェクトの順序付きペア。</returns>
      <remarks>このメソッドは、すべての内容を表示できる最小サイズを取得します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.IsInputChar(System.Char)">
      <summary>文字が、コントロールによって認識される入力文字かどうかを判断します。</summary>
      <param name="charCode">判定する文字を表す<b><see cref="T:System.Char">Char</see></b>値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定された文字は入力文字です。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定された文字は入力文字ではありません。</description>
          </item>
        </list>
      </returns>
      <remarks>
        <b>IsInputChar</b>メソッドを呼び出すと、charCodeパラメーターで指定した文字が、コントロールに必要な入力文字かどうかを判断できます。このメソッドは、ウィンドウメッセージのプリプロセス中に呼び出され、指定された入力文字を前処理するか、直接コントロールに送信するかを決定します。<b>IsInputChar</b>がtrueを返す場合、指定された文字はコントロールに直接送信されます。<b>IsInputChar</b>が<see langword="false" />を返す場合、文字は前処理され、プリプロセス中に文字に対する処理が終了されなかった場合だけ、コントロールに送信されます。文字のプリプロセス中には、その文字が別のコントロールのニーモニックかどうかのチェックなどが行われます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.OnContextMenuChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.ContextMenuChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnContextMenuChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b><para />派生クラスで<b>OnContextMenuChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnContextMenuChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.OnContextMenuStripChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnContextMenuStripChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b><para />派生クラスで<b>OnContextMenuStripChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnContextMenuStripChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.OnEnabledChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnableChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEnableChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnableChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.OnFontChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.FontChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnFontChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnFontChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnFontChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.OnForeColorChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.ForeColorChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnForeColorChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b><para />派生クラスで<b>OnForeColorChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnForeColorChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.OnGotFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.GotFocus" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnGotFocus</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnGotFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnGotFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.OnValueChanged(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ValueChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnValueChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnValueChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnValueChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ResetBackColor">
      <summary>
        <b>BackColor</b>プロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ResetCursor">
      <summary>
        <b>Cursor</b>プロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ResetDisabledBackColor">
      <summary>
        <b>DisabledBackColor</b>プロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ResetDisabledForeColor">
      <summary>
        <b>DisabledForeColor</b>プロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ResetForeColor">
      <summary>
        <b>ForeColor</b>プロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ResetFormat">
      <summary>
        <b>Format</b>プロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ResetSingleBorderColor">
      <summary>
        <b>SingleBorderColor</b>プロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>このコントロールの指定した境界を設定する作業を実行します。</summary>
      <param name="x">
        <b>
          <see cref="P:System.Windows.Forms.Control.Left">Left</see>
        </b> プロパティを設定する <b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="y">
        <b>
          <see cref="P:System.Windows.Forms.Control.Top">Top</see>
        </b> プロパティを設定する <b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="width">
        <b>
          <see cref="P:System.Windows.Forms.Control.Width">Width</see>
        </b> プロパティを設定する <b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="height">
        <b>
          <see cref="P:System.Windows.Forms.Control.Height">Height</see>
        </b> プロパティを設定する <b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="specified">境界の設定に使用される引数を指定する<b><see cref="T:System.Windows.Forms.BoundsSpecified">BoundsSpecified</see></b> 値のビットごとの組み合わせ。列挙体。</param>
      <remarks>通常、境界に対応する各パラメーターは、specifiedパラメーターを除き、それぞれの現在の値を指定して渡されます。たとえば、コントロールの現在のインスタンスに関連する<see cref="P:System.Windows.Forms.Control.Height" />プロパティ、<see cref="P:System.Windows.Forms.Control.Width" />プロパティ、<see cref="P:System.Windows.Forms.Control.Location" />プロパティの<see cref="P:System.Drawing.Point.X" />または<see cref="P:System.Drawing.Point.Y" />プロパティを渡すことができます。ただし、渡した値はすべて受け入れられ、コントロールに適用されます。<para />specifiedパラメーターは、アプリケーションによって変更されたコントロールの<see cref="P:System.Windows.Forms.Control.Bounds" />の要素を表します。たとえば、コントロールの<see cref="T:System.Drawing.Size" />を変更した場合、specifiedパラメーターの値は<see cref="T:System.Windows.Forms.BoundsSpecified" />の<b>Size</b>値になります。ただし、<see cref="P:System.Windows.Forms.Control.Dock" />プロパティが設定された結果として<b>Size</b>が調整された場合、specifiedパラメーターの値は<b>BoundsSpecified</b>のNone値になります。<para /><b>継承時の注意: </b><para />派生クラスでSetBoundsCoreをオーバーライドする場合は、基本クラスのSetBoundsCoreメソッドを呼び出して、コントロールの境界を強制的に変更してください。派生クラスでは、SetBoundsCoreメソッドにサイズの制約を追加できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ShouldSerializeBackColor">
      <summary>
        <b>BackColor</b>プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ShouldSerializeDisabledBackColor">
      <summary>
        <b>DisabledBackColor</b>プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ShouldSerializeDisabledForeColor">
      <summary>
        <b>DisabledForeColor</b>プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ShouldSerializeForeColor">
      <summary>
        <b>ForeColor</b>プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ShouldSerializeFormat">
      <summary>
        <b>Format</b>プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ShouldSerializeSingleBorderColor">
      <summary>
        <b>SingleBorderColor</b>プロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合はtrue、それ以外の場合はfalse。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.WndProc(System.Windows.Forms.Message@)">
      <summary>ウィンドウメッセージを処理します。</summary>
      <param name="m">処理対象の<b><see cref="T:System.Windows.Forms.Message">Message</see></b>。</param>
      <remarks>
        <para>すべてのメッセージは、<see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />メソッドを通じてフィルタ処理された後に<b>WndProc</b>メソッドに送られます。</para>
        <para />
        <para>
          <b>WndProc</b>メソッドは、Windows WindowProc関数に正確に対応しています。Windowsメッセージの処理方法の詳細については、MSDNライブラリ（http://msdn.microsoft.com/library/ja）にあるWindowsプラットフォームSDKのリファレンスでWindowProc関数のドキュメントを参照してください。</para>
        <para />
        <para>
          <br />
          <b>継承時の注意: </b>継承コントロールでは、自身で処理できないメッセージを処理するために、基本クラスの<b>WndProc</b>メソッドを呼び出す必要があります。 </para>
      </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoSizeChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoSize" />プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoSize" />プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.ValueChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Value" />プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Value" />プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType">
      <summary>
        <b>GcCharMaskCellType</b>クラスを表します。</summary>
      <remarks>GcCharMaskCellTypeは正および負の数値の入力機能を備えており、機能的な数値入力インタフェースを迅速かつ効率的に設計するのに役立ちます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.AcceptsCrLf">
      <summary>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理方法を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理モードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" />列挙体。<br />デフォルト値は<b>CrLfMode.NoControl</b>です。</value>
      <remarks>
        <b>CrLf.Cut</b>に設定すると、<b>GcCharMask</b>で文字列をコピー、切り取り、または貼り付けるときの動作が標準の<b>TextBox</b>と同じになります。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.AllowSpace">
      <summary>スペースの入力を許可するかどうかを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.AllowSpace" />値の1つ。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.Both" />です。</value>
      <remarks>
        <para>
          <b>AllowSpace</b>プロパティを使用して、テキストに入力できるスペースの種類を指定します。</para>
        <para />
        <para>
          <b>AllowSpace</b>が<b>None</b>の場合、<b>GcCharMask</b>にはスペースを入力できません。<b>AllowSpace.Narrow</b>モードを指定すると、半角スペースを入力できます。<b>AllowSpace.Wide</b>モードを指定すると、全角スペースを入力できます。<b>AllowSpace.Both</b>モードを指定すると、すべての種類のスペースを入力できます。</para>
        <para />
        <note>
          <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.AutoConvert" />プロパティが<see langword="true" />で、<b>AllowSpace</b>が<b>AllowSpace.Wide</b>の場合、ユーザーがコントロールに半角スペースを入力すると、自動的に半角スペースが全角スペースに変換されます。これは他の設定についても同じです。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Format" />プロパティは常にAllowSpaceプロパティと組み合わせて使用されます。 </note>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoConvert" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Format" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.AutoConvert">
      <summary>入力された文字をフィールドの設定に従って自動的に変換するかどうかを取得または設定します。</summary>
      <value>入力マスクに従って文字が自動的に変換される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。デフォルト値は<see langword="true" />です。</value>
      <remarks>
        <para>
          <b>AutoConvert</b>プロパティを<see langword="true" />に設定すると、変換可能なすべての文字が入力マスクに従って自動的に変換されます。たとえば、入力マスクを"A"に設定した場合、小文字を入力すると自動的に大文字に変換されます。</para>
        <para>全角文字入力マスクに半角文字を入力した場合、入力した文字は自動的に全角に変換されます。また、コントロールで半角文字のみが許可されている場合には、全角のスペースは自動的に半角のスペースに変換されます。 </para>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AllowSpace" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.Format" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.BaseClearCollection">
      <summary>デザイナによる内部使用。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.CharBoxSpacing">
      <summary>キャラクターボックス間の間隔を取得または設定します。</summary>
      <value>キャラクターボックス間の間隔を示す<see cref="T:System.Int32" />値。<br /> デフォルト値は-1です。</value>
      <remarks>
        <b>CharBoxSpacing</b>プロパティは、2つのキャラクターボックス間の間隔を決定します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.CharBoxes" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.CharBoxes">
      <summary>キャラクターボックスのコレクションを取得します。</summary>
      <value>キャラクターボックスが格納されたコレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxCollection" />。</value>
      <remarks>
        <b>CharBoxes</b>にはいくつかの種類のキャラクターボックスを追加または削除できます。これには<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.InputBox" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LiteralBox" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBox" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.ClipContent">
      <summary>データをクリップボードにコピーする方法を取得または設定します。</summary>
      <value>クリップボードへのデータのコピー方法を指定する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ClipContent" />列挙値の1つ。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" />です。</value>
      <remarks>
        <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals" />値は、メソッドまたはUI操作によってデータを<see cref="T:System.Windows.Forms.Clipboard" />に設定するときにすべての表示テキストがコピーされることを意味します。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.ExcludeLiterals" />値は、リテラルフィールドのテキストを除く表示テキストがコピーされることを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.ExcelExportFormat">
      <summary>Excel エクスポート書式を取得または設定します。</summary>
      <value>Excel エクスポート書式。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.FocusPosition">
      <summary>エディタがフォーカスを取得したときの初期カーソル位置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.FormatString">
      <summary>入力可能な文字種を指定する書式を取得または設定します。</summary>
      <value>コントロールへのテキストの入力書式を指定する文字列。</value>
      <remarks>書式は、キーワードとリテラルを組み合わせたマスクによって指定します。<note> 入力マスクをリテラルのみで構成することはできません。 </note></remarks>
      <seealso cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.InvalidInput" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AutoConvert" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask.AllowSpace" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.InputDirection">
      <summary>入力方向を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection" />を取得または設定します。</summary>
      <value>入力方向を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection" />。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection.LeftToRight" />です。</value>
      <remarks>
        <b>InputDirection</b>プロパティを使用して、ユーザーがデータを入力するときの方向と順序を指定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.PaintByControl">
      <summary>セルの描画方法を示す値を取得または設定します。true の場合、内部コントロールの描画を使用してセルが描画されます。この場合、セルは編集コントロールとまったく同じように描画されます。セルのすべての設定（スタイルの異なるフィールドなど）がセルの描画時に有効になります。文字列を直接描画するのではなくコントロールによって描画する場合、セルの描画パフォーマンスは遅くなります。また、PDF にエクスポートしたときにセルのテキストは選択できません。false の場合、パフォーマンスは良好ですが、一部の設定が無効になります。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.PasswordChar">
      <summary>コントロールに入力されたパスワード文字をマスクするために使用される文字を取得または設定します。</summary>
      <value>コントロールに入力された文字をマスクするために使用される文字。入力された文字をマスクしない場合は、このプロパティの値を0（文字値）に設定します。デフォルト値は0（文字値）です。</value>
      <remarks>
        <para>
          <b>PasswordChar</b>を使用して、ダイアログボックスにパスワードフィールドを作成できます。任意の半角文字を使用できますが、Windowsベースのアプリケーションではアスタリスク（*）（Chr(42)）を使うのが一般的です。</para>
        <para>このプロパティは<see cref="N:GrapeCity.Win.Text" />プロパティには影響しません。<b>Text</b>にはユーザーが入力した文字列、またはコードから設定した文字列がそのまま格納されます。<b>PasswordChar</b>を0（デフォルト値）に設定すると、コントロールの実際のテキストが表示されます。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>入力候補値を示す<see cref="T:System.String" />値。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>
        <b>RecommendedValue</b>プロパティはユーザーへのヒントを提供するもので、値が完全に入力されていないときに表示されます。値の入力中に特定のショートカットキーまたはキーの組み合わせを押すと、入力候補値を取得できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを取得または設定します。</summary>
      <value>入力候補値を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>
        <b>ShowRecommendedValue</b>が<see langword="true" />の場合、値が完全に入力されていないときに<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.RecommendedValue" />プロパティの値が表示されます。それ以外の場合、<b>RecommendedValue</b>プロパティの値は表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.UseSystemPasswordChar">
      <summary>システムパスワード文字を使用するかどうかを取得または設定します。</summary>
      <value>システムパスワード文字を使用する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="false" />です。</value>
      <remarks>
        <b>UseSystemPasswordChar</b>プロパティは<b>PasswordChar</b>プロパティよりも優先されます。<b>UseSystemPasswordChar</b>が<see langword="true" />に設定されている場合は常にデフォルトのシステムパスワード文字が使用され、<b>PasswordChar</b>に設定された文字は無視されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.Clone">
      <summary>基本セルを作成して返します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.Format(System.Object)">
      <summary>指定したデータをセル型の書式に書式設定し、それを文字列として返します。</summary>
      <param name="obj">書式設定するセルデータを含む、データモデル内のオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.FormatToClipboard(System.Object)">
      <summary>クリップボードに書式設定します。</summary>
      <param name="obj">オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetDefaultCharMaskBoxes">
      <summary>既定の表示フィールドを取得します。</summary>
      <returns>表示用のすべてのデフォルトフィールドを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo" />の配列。</returns>
      <remarks>派生クラスで<b>GetDefaultMaskFields</b>メソッドを使用して、セルが作成されるときのデフォルト表示フィールドをカスタマイズできます。このメソッドが<see langword="null" />を返す場合、セルに表示フィールドは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
      <returns>すべてのデフォルトショートカットを含むディクショナリー。</returns>
      <remarks>派生クラスで <b>GetDefaultShortcuts</b> メソッドを使用して、セルが作成されるときのデフォルトショートカットをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルにショートカットは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetDisplayText(System.Object)">
      <summary>表示テキストを取得します。</summary>
      <param name="value">セル値。</param>
      <returns>表示テキスト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>外観と倍率を指定してこのセル型の編集コントロールを取得します。</summary>
      <param name="appearance">セルの外観設定。</param>
      <param name="zoomFactor">セルの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetEditorValue">
      <summary>編集コントロール内の書式なしの値を取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />オブジェクトに対して、ターゲットオブジェクトのシリアル化に必要なデータを設定します。</summary>
      <param name="info">データを設定する<see cref="T:System.Runtime.Serialization.SerializationInfo" />オブジェクト。</param>
      <param name="context">このシリアル化のシリアル化（<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照）。</param>
      <exception cref="T:System.Security.SecurityException">呼び出し元に必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>レンダラーコントロールのためにセルの優先サイズ（必要な最大サイズ）を取得します。</summary>
      <param name="g">セルを描画するためのグラフィックデバイスインタフェース。</param>
      <param name="size">優先サイズまたは必要な最大サイズ。</param>
      <param name="appearance">レンダラーコントロールの外観設定。</param>
      <param name="value">レンダラーコントロールの名前を含むオブジェクト。</param>
      <param name="zoomFactor">レンダラーコントロールの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>エディタコントロールのためにセルの優先サイズ（必要な最大サイズ）を取得します。</summary>
      <param name="editor">エディタコントロールの名前。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>エディタコントロールを初期化します。</summary>
      <param name="control">設定対象となるコントロールを表す<b><see cref="T:System.Windows.Forms.Control">Control</see></b>オブジェクト。</param>
      <param name="appearance">外観。</param>
      <param name="zoomFactor">倍率。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>指定したコントロールが再利用できるかどうかを判断します。</summary>
      <param name="control">設定対象となるコントロールを表す<b><see cref="T:System.Windows.Forms.Control">Control</see></b>オブジェクト。</param>
      <returns>指定したコントロールが再利用できる場合は <c>true</c>。それ以外の場合は <c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.IsValid(System.Object)">
      <summary>指定した値が有効かどうかを判断します。</summary>
      <param name="value">検証する値（オブジェクトとして）。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.Parse(System.String)">
      <summary>指定した文字列をセル型のデータ型に解析し、それをオブジェクトとして返します。</summary>
      <param name="s">解析するシート上のセルの文字列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.SetEditorValue(System.Object)">
      <summary>編集コントロールの値を設定します。</summary>
      <param name="value">エディタコントロールの（オブジェクトとしての）値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.ShowSubEditor">
      <summary>セルに関連付けられたサブエディタコントロールを表示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>セルの編集を開始します。</summary>
      <param name="e">イベント。</param>
      <param name="selectAll">すべてのセルデータを選択するかどうか。</param>
      <param name="autoClipboard">クリップボードアクションのショートカットキーを許可するかどうか。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskCellType.StopEditing">
      <summary>セルの編集を終了します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl">
      <summary>GcCharMaskCellTypeの編集コントロール。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.Font">
      <summary>コントロールによって表示されるテキストのフォントを取得または設定します。</summary>
      <value>コントロールによって表示されるテキストに適用する<see cref="T:System.Drawing.Font" />。 既定値は<see cref="P:System.Windows.Forms.Control.DefaultFont" /> プロパティの値です。</value>
      <remarks>
        <para>
          <b>Font</b>プロパティはアンビエントプロパティです。アンビエントプロパティとは、明示的に設定しない場合に親コントロールから取得されるコントロールプロパティです。たとえば<see cref="T:System.Windows.Forms.Button" />は、デフォルトでは親の<see cref="T:System.Windows.Forms.Form" />と同じ<see cref="P:System.Windows.Forms.Control.BackColor" />を持ちます。アンビエントプロパティの詳細については、<see cref="T:System.Windows.Forms.AmbientProperties" />クラスまたは<see cref="T:System.Windows.Forms.Control" />クラスの概要を参照してください。</para>
        <para />
        <para>
          <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.SubEditor">
      <summary>セルのサブエディタを取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>指定されているキーが、コントロールに認識される入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</summary>
      <param name="keyData">キーを表す<b><see cref="T:System.Windows.Forms.Keys">Keys</see></b>値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定されたキーは入力キーです。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定されたキーは入力キーではありません。</description>
          </item>
        </list>
      </returns>
      <remarks>
        <b>IsInputKey</b>メソッドを呼び出すと、keyDataパラメーターで指定したキーが、コントロールに必要な入力キーかどうかを判断できます。このメソッドは、ウィンドウメッセージのプリプロセス中に呼び出され、指定された入力キーを前処理するか、直接コントロールに送信するかを決定します。<b>IsInputKey</b>が<see langword="true" />を返す場合、指定されたキーはコントロールに直接送信されます。<b>IsInputKey</b>が<see langword="false" />を返す場合、キーは前処理され、プリプロセス中にキーに対する処理が終了されなかった場合だけ、コントロールに送信されます。前処理されるキーには、［Tab］、［Enter］、［Esc］、［↑］、［↓］、［←］、［→］が含まれます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>KeyExit イベントを使用してフォーカスを移動します。</summary>
      <param name="e">イベントデータを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> インスタンス。</param>
      <remarks>
        <b>ExitKeys.CharInput</b>、<b>ExitKeys.CtrlRight</b>、<b>ExitKeys.NextControl</b>、<b>ExitKeys.Right</b>、および<b>ExitKeys.Tab</b>は、フォーカスを前方に移動します。その他の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" />は、フォーカスを後方に移動します。<note>このメソッドを継承クラスでオーバーライドする場合は、基本メソッドを呼び出す必要があります。そうしなければ、フォーカスは移動しません。 </note></remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.NextCell">
      <summary>次のセルに移動します。ショートカットアクションを使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.OnAfterFocus(System.EventArgs)">
      <summary>AfterFocusイベントを発生させます。</summary>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.OnEnter(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Enter" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnter</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEnter</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnter</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.OnGotFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.GotFocus" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnGotFocus</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnGotFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnGotFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.OnInvalidInput(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnInvalidInput</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnInvalidInput</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnInvalidInput</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the KeyDown event.</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>KeyPress イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.OnParentChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.ParentChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.PreviousCell">
      <summary>前のセルに移動します。ショートカットアクションを使用します。</summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcCharMaskEditingControl.AfterFocus">
      <summary>コントロールがフォーカスを取得した後に発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.#ctor(System.ComponentModel.IContainer)">
      <summary>コンテナータイプパラメーターを指定して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="container">コントロールが配置されるコンテナを表す<b><see cref="T:System.ComponentModel.IContainer">IContainer</see></b>オブジェクト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AcceptsCrLf">
      <summary>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理方法を示す値を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理モードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" />列挙体。<br />デフォルト値は<b>CrLfMode.NoControl</b>です。</value>
      <remarks>
        <b>CrLf.Cut</b>に設定すると、<b>GcComboBox</b>で文字列をコピー、切り取り、および貼り付けるときの動作が標準の<b>TextBox</b>と同じになります。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AcceptsTabChar">
      <summary>文字列をコピー、切り取り、および貼り付けるときのタブ文字の処理方法を示す値を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときのタブ文字の処理モードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" />列挙体。<br />デフォルト値は<b>TabCharMode.NoControl</b>です。</value>
      <remarks>
        <b>TabCharMode.Cut</b>に設定すると、<b>GcComboBox</b>で文字列をコピー、切り取り、および貼り付けるときの動作が標準の<b>TextBox</b>と同じになります。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b>が有効な<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" />項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AllowSpace">
      <summary>許容されるスペース文字の種類を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AllowSpace" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace" />値。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.Both" />です。</value>
      <remarks>
        <para>
          <b>AllowSpace</b>プロパティを使用して、テキストに入力できるスペースの種類を指定します。</para>
        <para />
        <para>
          <b>AllowSpace</b>が<b>None</b>モードの場合、この<b>GcComboBox</b>にはスペースを入力できません。<b>AllowSpace.Narrow</b>の場合は、半角スペースを入力できます。<b>AllowSpace.Wide</b>の場合は、全角スペースを入力できます。<b>AllowSpace.Both</b>の場合は、すべての種類のスペースを入力できます。</para>
        <para />
        <note> AutoConvertプロパティが<see langword="true" />で、AllowSpaceが<b>AllowSpace.Wide</b>の場合、ユーザーがコントロールに半角スペースを入力すると、自動的に半角スペースが全角スペースに変換されます。これは他の設定についても同じです。また、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Format" />プロパティは常にこの<b>AllowSpace</b>プロパティと組み合わせて使用されます。 </note>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AlternateText">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />コントロールの代替テキストを取得します。</summary>
      <value>代替テキストを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateText" />値。</value>
      <remarks>現在の値が<see cref="F:System.String.Empty" />で、このコントロールに入力フォーカスがある場合、この<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Text" />プロパティは<see cref="P:ComboBoxAlternateText.Null" />設定（nullではない）と等しくなります。現在の値が<see langword="null" />で、このコントロールに入力フォーカスがない場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Text" nolink="true" />プロパティは<see cref="P:ComboBoxAlternateText.DisplayNull" />設定と等しくなります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoComplete">
      <summary>オートコンプリート関連の設定を取得します。</summary>
      <value>オートコンプリートの設定を表す <see cref="P:GrapeCity.Win.MultiRow.InputMan.GcComboBox.AutoComplete" /> オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteCustomSource">
      <summary>AutoCompleteSourceプロパティがCustomSourceに設定されている場合に使用される、カスタムの<see cref="T:System.Windows.Forms.AutoCompleteStringCollection" />を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteSource" />と共に使用する<see cref="T:System.Windows.Forms.AutoCompleteStringCollection" />。<br /> デフォルト値は<see langword="null" />です。</value>
      <remarks>
        <b>AutoCompleteCustomSource</b>、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteMode" />、<b>AutoCompleteSource</b>の各プロパティを使用して、入力された文字列をあらかじめ用意したすべての文字列と前方一致で比較することによって入力文字列を自動的に補完する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />を作成できます。これは、TextBoxコントロールにURL、アドレス、ファイル名、コマンドなどを入力する場合に役立ちます。<para /><para><b>AutoCompleteCustomSource</b>プロパティの使用は任意ですが、<b>AutoCompleteCustomSource</b>を使用するためには、<b>AutoCompleteSource</b>プロパティをCustomSourceに設定する必要があります。</para><para /><para><b>AutoCompleteMode</b>プロパティと<b>AutoCompleteSource</b>プロパティは組み合わせて使用する必要があります。 </para></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteMode">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />のオートコンプリートの動作を制御するオプションを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteMode" />値の1つ。<see cref="F:System.Windows.Forms.AutoCompleteMode.Append" />、<see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" />、<see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />、<see cref="F:System.Windows.Forms.AutoCompleteMode.None" />のいずれかを指定します。デフォルト値は<see cref="F:System.Windows.Forms.AutoCompleteMode.None" nolink="true" />です。</value>
      <remarks>
        <para>
          <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteCustomSource" />、<b>AutoCompleteMode</b>、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteSource" />の各プロパティを使用して、入力された文字列をあらかじめ用意したすべての文字列と前方一致で比較することによって入力文字列を自動的に補完する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />を作成できます。これは、<b>GcTextBox</b>コントロールにURL、アドレス、ファイル名、コマンドなどを入力する場合に役立ちます。</para>
        <para />
        <para>
          <b>AutoCompleteCustomSource</b>プロパティの使用は任意ですが、<b>AutoCompleteCustomSource</b>を使用するためには、<b>AutoCompleteSource</b>プロパティを<b>CustomSource</b>に設定する必要があります。</para>
        <para />
        <para>
          <b>AutoCompleteMode</b>プロパティと<b>AutoCompleteSource</b>プロパティは組み合わせて使用する必要があります。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteSource">
      <summary>オートコンプリートで使用される補完文字列のソースを指定する値を取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.AutoCompleteSource" />値の1つ。<see cref="F:System.Windows.Forms.AutoCompleteSource.AllSystemSources" />、<see cref="F:System.Windows.Forms.AutoCompleteSource.AllUrl" />、<see cref="F:System.Windows.Forms.AutoCompleteSource.FileSystem" />、<see cref="F:System.Windows.Forms.AutoCompleteSource.HistoryList" />、<see cref="F:System.Windows.Forms.AutoCompleteSource.RecentlyUsedList" />、<see cref="F:System.Windows.Forms.AutoCompleteSource.CustomSource" />、<see cref="F:System.Windows.Forms.AutoCompleteSource.None" />のいずれかを指定します。<br /> デフォルト値は<see cref="F:System.Windows.Forms.AutoCompleteSource.None" nolink="true" />です。</value>
      <remarks>
        <para>
          <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteCustomSource" />、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteMode" />、<b>AutoCompleteSource</b>の各プロパティを使用して、入力された文字列をあらかじめ用意したすべての文字列と前方一致で比較することによって入力文字列を自動的に補完する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />を作成できます。これは、<b>GcTextBox</b>コントロールにURL、アドレス、ファイル名、コマンドなどを入力する場合に役立ちます。</para>
        <para />
        <para>
          <b>AutoCompleteCustomSource</b>プロパティの使用は任意ですが、<b>AutoCompleteCustomSource</b>を使用するためには、<b>AutoCompleteSource</b>プロパティを<b>CustomSource</b>に設定する必要があります。</para>
        <para />
        <para>
          <b>AutoCompleteMode</b>プロパティと<b>AutoCompleteSource</b>プロパティは組み合わせて使用する必要があります。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoConvert">
      <summary>入力された文字を自動的に変換するかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。入力された文字を入力に従って自動的に変換する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
      <remarks>
        <para>
          <b>AutoConvert</b>プロパティを<see langword="true" />に設定すると、変換可能なすべての文字が入力マスクに従って自動的に変換されます。たとえば、入力マスクを"A"に設定した場合、小文字を入力すると自動的に大文字に変換されます。</para>
        <para>全角文字入力マスクに半角文字を入力した場合、入力した文字は自動的に全角に変換されます。また、コントロールで半角文字のみが許可されている場合には、全角のスペースは自動的に半角のスペースに変換されます。 </para>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Format" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoFilter">
      <summary>オートフィルタ関連の設定を取得します。</summary>
      <value>オートフィルタの設定。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoGenerateColumns">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSource" />または<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMember" />が設定されているときに列が自動的に作成されるかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。列が自動的に作成される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="true" />です。</value>
      <remarks>ユーザーがソースを<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMember" />に連結した場合、データソースに従ってこのコントロールのドロップダウンリストの列が自動的に生成されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoSelect">
      <summary>エディタに入力された文字列と一致するリスト内の項目を自動的に選択するかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。入力された文字を入力に従って自動的にマッチングする場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="false" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoSize">
      <summary>このコントロールのサイズが内容に従って調整されるかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。このコントロールのサイズが内容に従って調整される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="false" />です。</value>
      <remarks>このプロパティが<see langword="true" />に設定されている場合、<b>EditBase</b>の内容全体が表示されるようにその幅が調整されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
      <value>コントロールの背景色を示す<see cref="T:System.Drawing.Color" />値。</value>
      <remarks>
        <b>BackColor</b>プロパティを使用してコントロールの背景色を変更し、コントロールをフォームの色彩設計に合わせることができます。<para />コントロール内のテキストの色を変更するには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ForeColor" />プロパティを使用します。コントロールの<b>BackColor</b>プロパティを設定するときは、コントロールのテキストが見えなくなるような色を選ばないでください。たとえば、<b>BackColor</b>プロパティと<b>ForeColor</b>プロパティを両方とも<b>Color.Black</b>に設定した場合、コントロール内のテキストは見えなくなります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BackgroundImage">
      <summary>コントロールに表示する背景画像を取得または設定します。</summary>
      <value>コントロールの背景に表示する画像を表す<see cref="T:System.Drawing.Image" />。</value>
      <remarks>半透明の色または透過色を使った画像は、背景画像として適切に表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BackgroundImageLayout">
      <summary>コントロールに表示する背景イメージのレイアウトを取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.ImageLayout" />値の1つ（<see cref="F:System.Windows.Forms.ImageLayout.Center" />、<see cref="F:System.Windows.Forms.ImageLayout.None" />、<see cref="F:System.Windows.Forms.ImageLayout.Stretch" />、<see cref="F:System.Windows.Forms.ImageLayout.Tile" />、<see cref="F:System.Windows.Forms.ImageLayout.Zoom" />のいずれか）。<br />デフォルト値は<see cref="F:System.Windows.Forms.ImageLayout.Tile" nolink="true" />です。</value>
      <remarks>
        <b>BackgroundImageLayout</b>プロパティは、コントロールに配置した画像の位置と動作を指定する場合に使用します。<b>BackgroundImageLayout</b>は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BackgroundImage" />プロパティが設定されている場合にのみ有効です。<pare /> 画像が大きい場合は、<b>BackgroundImageLayout</b>を<see cref="F:System.Windows.Forms.ImageLayout.Tile" />以外の値に設定するとパフォーマンスが向上します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BorderStyle">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />の周囲に描画される境界線の種類を取得または設定します。</summary>
      <value>境界線スタイルを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BorderStyle" />列挙体。<br /> デフォルト値は<b>BorderStyle.Fixed3D</b>です。</value>
      <remarks>
        <b>BorderStyle</b> プロパティを使用すると、既定の3次元コントロールに加えて、境界線のないフラットスタイルのコントロールを作成できます。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティに指定された値が有効な列挙値ではありません。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SingleBorderColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.CanUndo">
      <summary>コントロールでの直前の操作を取り消すことができるかどうかを示す値を取得します。</summary>
      <value>このインスタンスがアンドゥを実行できる場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
      <remarks>このメソッドが <see langword="true" /> を返す場合は、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" /> メソッドを呼び出して、コントロールで最後に実行された操作を元に戻すことができます。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMember">
      <summary>連結メンバの文字列を表す値を取得または設定します。</summary>
      <value>連結メンバを示す<see cref="T:System.String" />値。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSource" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSource">
      <summary>データソースを取得または設定します。</summary>
      <value>データソースを示す<b>object</b>。<br /> デフォルト値は<see langword="null" />です。</value>
      <remarks>データソースとしてデータベース、Webサービス、またはオブジェクトを設定し、後でこれらのソースを使用してデータ連結コントロールを生成できます。<b>DataSource</b>プロパティが設定されている場合、項目コレクションは変更できません。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMember" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DisabledBackColor">
      <summary>コントロールが無効の場合の背景色を取得または設定します。</summary>
      <value>無効なときの背景色を示す<see cref="T:System.Drawing.Color" />値。</value>
      <remarks>このコントロールが無効な場合、このプロパティの値に従って背景が表示されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BackColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DisabledForeColor">
      <summary>コントロールが無効の場合の文字色を取得または設定します。</summary>
      <value>無効なときの前景色を示す<see cref="T:System.Drawing.Color" />値。</value>
      <remarks>このコントロールが無効な場合、このプロパティの値に従って前景が表示されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ForeColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDown">
      <summary>ドロップダウン機能に関する設定を取得します。</summary>
      <value>ドロップダウン機能に関する設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDown" />インスタンス。</value>
      <remarks>この<b>DropDown</b>プロパティを設定することで、ドロップダウンの動作とウィンドウの外観をカスタマイズできます。カスタマイズできる項目には、ドロップダウンを表示するかどうか、サイズ変更可能にするかどうか、ドロップダウンウィンドウの方向、ドロップダウンウィンドウの影、開閉時のアニメーションなどがあります。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownMaxHeight" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownMaxHeight">
      <summary>ユーザーがドロップダウンウィンドウのサイズをカスタマイズしていない場合に適用される、ドロップダウンウィンドウの最大の高さを取得または設定します。ユーザーがドロップダウンウィンドウのサイズをカスタマイズしている場合、このプロパティは無効になります。</summary>
      <value>ドロップダウンウィンドウの最大の高さを示す<see cref="T:System.Int32" />値。<br /> デフォルト値は150です。</value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDown" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownStyle">
      <summary>ドロップダウンスタイルを取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.ComboBoxStyle" />値。<br /> デフォルト値は<see langword="System.Windows.Forms.ComboBoxStyle.DropDown" />です。</value>
      <remarks>
        <b>DropDownStyle</b>プロパティは、ユーザーに提示されるインタフェースを制御します。単純なリストボックス（リストが常に表示される）、ドロップダウンリストボックス（テキスト部分は編集不可で、矢印をクリックするとドロップダウンリストが表示される）、デフォルトのドロップダウンリストボックス（テキスト部分は編集可能で、矢印をクリックするとドロップダウンリストが表示される）のいずれかを指定できます。<para /><b>DropDownStyle</b>プロパティを<b>DropDownList</b>に設定した場合は、リストに含まれる有効な値のみを選択できます。<b>DropDownStyle</b>プロパティを<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDown" />に設定した場合は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />の編集領域に任意の値を入力できます。この場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoCompleteMode" />の<b>Append</b>値は<b>AutoCompleteMode</b>の<see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />値と同じように機能します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DroppedDown">
      <summary>ドロップダウンウィンドウがドロップダウンしているかどうかを示す値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>ドロップダウン部分が表示されています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>ドロップダウン部分が閉じられています。</description>
          </item>
        </list>
      </value>
      <remarks>このプロパティを<see langword="true" />に設定することは、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Drop" />メソッドを呼び出すのと同じです。<note><b>GcComboBox</b>が無効であるか非表示に設定されている場合、このプロパティは機能しません。また、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" />プロパティがfalseの場合にも、このプロパティは機能しません。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Ellipsis">
      <summary>テキストの幅がコントロールより長い場合に省略記号をどのように表示するかを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" />列挙体。<b>None</b>は、省略記号文字列が表示されないことを意味します。<b>EllipsisEnd</b>は、文字列の末尾を文字単位でトリミングします。<b>EllipsisPath</b>は、文字列の中央部分を文字単位でトリミングします。<b>EllipsisWord</b>は、文字列の末尾を単語単位でトリミングします。<br />デフォルト値は<b>EllipsisMode.None</b>です。</value>
      <remarks>テキストがこのコントロールの幅より長くて、なおかつこのコントロールにフォーカスがないときは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.EllipsisString" />プロパティが表示されます。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.EllipsisString">
      <summary>テキストの幅がコントロールより長い場合に省略記号として表示される文字列を取得または設定します。</summary>
      <value>省略記号として使用される文字列を示す<see cref="T:System.String" />値。<br />デフォルト値は<b>(...)</b>です。</value>
      <remarks>このプロパティで指定した文字列は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Ellipsis" />が<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode.EllipsisEnd" />または<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode.EllipsisPath" />に設定されている場合に使用されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FlatStyle">
      <summary>このコントロールの外観を取得または設定します。</summary>
      <value>フラットスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx" />列挙体。</value>
      <remarks>
        <b>FlatStyle</b> プロパティは、コントロールの表示を取得または設定する場合に使用します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ForeColor">
      <summary>コントロールの前景色を取得または設定します。</summary>
      <value>コントロールの前景色を示す<see cref="T:System.Drawing.Color" />値。</value>
      <remarks>システムカラーを指定するときは<b><see cref="T:System.Drawing.SystemColors">SystemColors</see></b>オブジェクトを使用し、 特定の色（<b>Blue</b>や<b>Red</b>など）を指定する場合は<b><see cref="T:System.Drawing.Color">Color</see></b>を使用します。 また、コントロールの背景色を設定する場合は、<b><see cref="P:GrapeCity.Win.Editors.EditBase.BackColor">BackColor</see></b> プロパティを使用します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DisabledForeColor" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Format">
      <summary>入力文字列をフィルタリングまたは変換するための書式文字列を取得または設定します。</summary>
      <value>入力文字列をフィルタリングまたは変換するための書式文字列を示す<see cref="T:System.String" />値。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>このプロパティは、入力できる文字と記号の種類を指定します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoConvert" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.HighlightText">
      <summary>コントロールのテキストを強調表示するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。コントロールがフォーカスを取得したときにすべてのテキストが選択される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。デフォルト値は<see langword="false" />です。</value>
      <remarks>
        <para>このプロパティを使用して、コントロールがフォーカスを受け取ったときにコントロールのすべてのテキストを強調表示できます。</para>
        <para>
          <see langword="true" />の場合は、コントロールのすべての内容が選択されます。</para>
        <para>
          <see langword="false" />（デフォルト値）の場合は、内容は選択されず、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionStart" />プロパティと<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionLength" />プロパティの設定に従ってキャレットが配置されます。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageAlign">
      <summary>このコントロールの画像の配置を取得または設定します。</summary>
      <value>エディタおよびリストの画像の配置を示す<see cref="T:System.Windows.Forms.HorizontalAlignment" />値。</value>
      <remarks>このプロパティは、項目の画像がどこに配置されるかを決定します。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowListBoxImage" />プロパティがfalseの場合、このプロパティは無効になります。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageWidth" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowListBoxImage" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageList">
      <summary>このコントロールの<b>ImageList</b>を示す値を取得または設定します。</summary>
      <value>多数の<b>Image</b>オブジェクトを追加できる<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageList" />。<br /> デフォルト値は<see langword="null" />です。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Items" />に含まれる項目の<b>Image</b>プロパティは、このプロパティから画像をロードします。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageWidth">
      <summary>このコントロールの画像の幅を取得または設定します。</summary>
      <value>画像領域の幅を示す<see cref="T:System.Int32" />値。<br /> デフォルト値は16です。</value>
      <remarks>このプロパティは、項目画像の表示に使用される画像領域の幅を決定します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageAlign" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowListBoxImage" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Items">
      <summary>項目のコレクションを取得します。</summary>
      <value>コンボ項目のコレクションを表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection" />。</value>
      <remarks>このプロパティを使用して、現在<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />に格納されている項目のリストを参照できます。この参照を使用することで、項目を追加または削除したり、コレクションに含まれている項目の数を取得したりできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListColumns">
      <summary>列のコレクションを取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection" />オブジェクト。</value>
      <remarks>このプロパティによって返される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection" />を使用することで、列を追加または削除したり、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />コントロールのドロップダウンリストに含まれている列の数を取得したりできます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDefaultColumn" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDefaultColumn">
      <summary>ListのデフォルトListColumnを表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumn" />値。</value>
      <remarks>このプロパティは、列のデフォルト設定を作成するときに使用します。外観を変更せずに列を追加した場合、その列はデフォルトの列設定で表示されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListColumns" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDescriptionFormat">
      <summary>
        <b>StatusBar</b>に表示される説明をカスタマイズするための書式文字列を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" />に表示される説明をカスタマイズするための書式文字列を示す<see cref="T:System.String" />値。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>このプロパティを使用して、このコントロールに表示される説明の書式をカスタマイズできます。</remarks>
      <exception cref="T:System.ArgumentException">
        <b>value</b>が有効な<b>DescriptionFormat</b>ではありません。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDescriptionSubItemIndex" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDescriptionSubItemIndex">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" />の表示に関連する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />のインデックスを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" />の表示に関連する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />のインデックスを示す<see cref="T:System.Int32" />値。<br /> デフォルト値は0です。</value>
      <remarks>ステータスバーが表示される場合、このプロパティを使用して、どのサブ項目のテキストをドロップダウンウィンドウのステータスバーに表示するかを指定できます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDescriptionFormat" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDisabledItemStyle">
      <summary>無効な項目の色スタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle" />値を取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle" />値。</value>
      <remarks>このプロパティを使用して、ドロップダウンリスト内の無効な項目の背景色、前景色、およびグラデーション効果をカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListGradientEffect">
      <summary>コントロールの背景グラデーション効果を示す値を取得または設定します。</summary>
      <value>コントロールの背景グラデーション効果を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" />値。<br /> デフォルト値は<see langword="null" />です。</value>
      <remarks>このプロパティの値に従ってドロップダウンリストウィンドウの背景にグラデーションが描画されます。ただし、このグラデーションは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BackgroundImage" />によって覆われます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListGridLines">
      <summary>コントロールのグリッド線を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListGridLines" />値を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListGridLines" />値。</value>
      <remarks>このプロパティの値は、グリッド線の外観を決定します。これには<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Color" />と<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Style" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListHeaderPane">
      <summary>コントロールのヘッダペインを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListHeaderPane" />値を取得します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListHeaderPane" />値。</value>
      <remarks>このプロパティは、ドロップダウンリストのヘッダペインの外観を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListItemTemplates">
      <summary>項目のテンプレートを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection" />値。</value>
      <remarks>このプロパティは、リスト項目のデフォルト設定を作成するときに使用します。外観を変更せずに項目を追加した場合、その項目はテンプレート設定で表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListSelectedItemIndex">
      <summary>コンボボックスリストで選択されている項目のインデックスを示すint値を取得します。</summary>
      <value>
        <see cref="T:System.Int32" />値。<br /> デフォルト値は-1です。</value>
      <remarks>このプロパティは、コンボボックスリストで現在選択されている項目のゼロから始まるインデックスを示します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListSelectedItemStyle">
      <summary>コントロールの選択されている項目の色スタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle" />値を取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle" />値。</value>
      <remarks>このプロパティは、選択されている項目の外観をカスタマイズするときに使用します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListSortColumnIndex">
      <summary>ソートの基準となる列のインデックスを表す値を取得または設定します。</summary>
      <value>
        <see cref="T:System.Int32" />値。<br /> デフォルト値は-1です。</value>
      <remarks>ドロップダウンリストをソートする場合、このプロパティによってソートの基準となる列のインデックスが決定されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxDropDownItems">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />のドロップダウン部分に表示される項目の最大数を取得または設定します。</summary>
      <value>ドロップダウン部分に表示される項目の最大数。このプロパティの最小値は1で、最大値は100です。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">設定された最大数が1未満であるか、100を超えています。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLength">
      <summary>ユーザーが編集領域に入力できる最大の長さを取得または設定します。</summary>
      <value>
        <see cref="T:System.Int32" />値。<br /> デフォルト値は0です。</value>
      <remarks>このプロパティは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLengthUnit" />プロパティと関連しています。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLengthCodePage">
      <summary>バイト単位の最大長のカウントに使用されるエンコーディングのコードページを取得または設定します。</summary>
      <value>エンコーディングのコードページを示す<see cref="T:System.Int32" />値。<b />デフォルト値は-1で、エンコーディングを使用せずに組み込みのバイト長カウント方法を使用することを示します。</value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLength" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLengthUnit" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLengthUnit">
      <summary>
        <b>MaxLength</b>の計算方法（バイト数と文字数のどちらに基づくか）を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLength" />の計算方法がバイト数に基づく場合は<see langword="true" />、文字数に基づく場合は<see langword="false" />。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.LengthUnit.Char" />です。</value>
      <remarks>このプロパティは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.MaxLength" />プロパティと関連しています。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.PreferredHeight">
      <summary>コントロールに最適な高さを取得します。</summary>
      <value>コントロールの最適な高さを示す<see cref="T:System.Int32" />値。</value>
      <remarks>このプロパティは、<see cref="P:System.Windows.Forms.Control.PreferredSize" />プロパティの高さと同じです。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>入力候補値を示す<see cref="T:System.String" />値。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>
        <b>RecommendedValue</b>プロパティは、値が完全に入力されていないときにユーザーに提示されるヒントを提供します。値の入力中に特定のショートカットキーまたはキーの組み合わせを押すと、入力候補値を取得できます。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ScrollBarMode">
      <summary>ドロップダウンウィンドウのスクロールバーの表示方法を取得または設定します。</summary>
      <value>スクロールバーの表示方法を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ScrollBarMode" />列挙値の1つ。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Automatic" />です。</value>
      <remarks>
        <b>ScrollBarMode.Fixed</b>に設定した場合、スクロールバーは常に表示されます。<b>ScrollBarMode.Automatic</b>に設定した場合は、コントロールの内容がコントロールの長さを超えたときにのみスクロールバーが表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ScrollBars">
      <summary>このコントロールにどのスクロールバーを表示するかを取得または設定します。</summary>
      <value>どのスクロールバーを表示するかを指定する<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ScrollBars" />列挙値の1つ。<br /> デフォルト値は<see cref="F:System.Windows.Forms.ScrollBars.Vertical" />です。</value>
      <remarks>このプロパティは、どのスクロールバーが表示されるかを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedIndex">
      <summary>ドロップダウンリストで選択されている項目のゼロから始まるインデックスを示すint値を取得または設定します。</summary>
      <value>
        <see cref="T:System.Int32" />値。<br /> デフォルト値は-1です。</value>
      <remarks>このプロパティは、コンボボックスリストで現在選択されている項目のゼロから始まるインデックスを示します。新しいインデックスを設定すると、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedIndexChanged" />イベントが発生します。<note> 現在選択されている項目を選択解除するには、<b>SelectedIndex</b>を-1に設定します。項目がデータ連結されている場合、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />項目の<b>SelectedIndex</b>を-1に設定することはできません。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedItem">
      <summary>ドロップダウンリストで選択されている項目を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />オブジェクト。<br /> デフォルト値は<see langword="null" />です。</value>
      <remarks>
        <b>SelectedItem</b>プロパティをオブジェクトに設定すると、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />はそのオブジェクトをリストで現在選択されているオブジェクトにしようとします。該当するオブジェクトがリストに見つかった場合は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" nolink="true" />の編集部分にそのオブジェクトが表示され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedIndex" />プロパティが対応するインデックスに設定されます。オブジェクトがリストに存在しない場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedIndex" nolink="true" />プロパティは現在の値のままになります。<note><see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" nolink="true" />クラスは、指定されたオブジェクトを検索する際に<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" />メソッドを使用します。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedText">
      <summary>選択されているテキストを取得または設定します。</summary>
      <value>
        <see cref="T:System.String" />値。</value>
      <remarks>このプロパティにテキストを設定すると、指定したテキストが強調表示されるか、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />で現在選択されているテキストが変更されます。<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" nolink="true" />で現在テキストが選択されていない場合、このプロパティは長さゼロの文字列を返します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedValue">
      <summary>選択されている値を示す<b>object</b>値を取得または設定します。</summary>
      <value>
        <b>object</b>値。<see cref="F:System.String.Empty" />にすることができます。<br /> デフォルト値は<see cref="F:System.String.Empty" nolink="true" />です。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" />コレクションに含まれるサブ項目のうち、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ValueSubItemIndex" />プロパティの値によって特定された<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />のテキストと一致します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionLength">
      <summary>選択するテキストの文字数を取得または設定します。</summary>
      <value>コントロールで選択されている文字の数。</value>
      <remarks>このプロパティを使用すると、選択されたテキストに対して操作を実行する前に、コントロールで文字が選択されているかどうかを判断できます。<b>SelectionLength</b>プロパティの値がコントロールのテキストの文字数を超える値に設定されている場合、<b>SelectionLength</b>プロパティの値は、コントロール内のテキスト全体の長さから<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionStart" />プロパティの値を引いた数に設定されます（<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionStart" nolink="true" />プロパティに値が指定されている場合）。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">指定された値が0未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionStart">
      <summary>選択開始位置を取得または設定します。</summary>
      <value>選択開始位置。</value>
      <remarks>コントロールでテキストが選択されていない場合、このプロパティは新しいテキストの挿入位置を示します。このプロパティがコントロール内のテキストの長さを超えた位置に設定されている場合、開始位置は最後の文字の後ろになります。コントロールでテキストが選択されているときにこのプロパティを変更すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionLength" />プロパティの値が小さくなる場合があります。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionStart" />プロパティで示された位置より後ろにあるコントロール内の残りのテキストが<b>SelectionLength</b>プロパティの値より小さい場合、<b>SelectionLength</b>プロパティの値は自動的に小さくなります。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectionStart" nolink="true" />プロパティの値によって、<b>SelectionLength</b>プロパティの値が大きくなることはありません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowItemTip">
      <summary>項目ツールチップを表示するかどうかを示す値を取得または設定します。</summary>
      <value>マウスを項目に合わせたときにツールチップを表示する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="false" />です。</value>
      <remarks>このプロパティが<see langword="true" />の場合、マウスをドロップダウンリストの項目に合わせるとツールチップが表示されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowOverflowTip" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowListBoxImage">
      <summary>ドロップダウンリストの画像を表示するかどうかを示すブール値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。画像を表示する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="false" />です。</value>
      <remarks>このプロパティが<see langword="true" />で、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Image" />プロパティが<see langword="null" />でない場合、画像が表示されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageWidth" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageAlign" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowOverflowTip">
      <summary>オーバーフローチップを表示するかどうかを取得または設定します。</summary>
      <value>オーバーフローチップを表示するかどうかを示す<see langword="bool" />値。<br /> デフォルト値は<see langword="false" />です。</value>
      <remarks>このプロパティが<see langword="true" />で、項目テキストが列の幅より長い場合、マウスをドロップダウンリストの項目に合わせるとツールチップが表示されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowItemTip" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを示す値を取得または設定します。</summary>
      <value>入力候補値を表示する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>この<b>ShowRecommendedValue</b>が<see langword="true" />の場合、値が完全に入力されていないときに<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.RecommendedValue" />プロパティの値が表示されます。それ以外の場合、<b>RecommendedValue</b>プロパティの値は表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SideButtons">
      <summary>
        <b>SideButton</b>のコレクションを取得または設定します。</summary>
      <value>SideButtonBaseのコレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" />インスタンス。</value>
      <remarks>
        <b>SideButtons</b>にはいくつかのコマンドボタンを追加または削除できます。これには、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SingleBorderColor">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BorderStyle" />が<see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />のときの色を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BorderStyle" />が<see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />のときの境界線の色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.WindowFrame" />です。</value>
      <remarks>この<see cref="T:System.Drawing.Color" />は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BorderStyle" />が<see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />のときにのみ有効です。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BorderStyle" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Spin">
      <summary>スピン操作のデータパッケージを取得または設定します。</summary>
      <value>スピンのデータパッケージを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Spin" />。</value>
      <remarks>この<b>Spin</b> プロパティを設定することで、スピン動作をカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar">
      <summary>ステータスバー情報を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" />オブジェクトを取得します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" />オブジェクト。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBar.Text" />プロパティと<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBar.Visible" />プロパティを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Text">
      <summary>コントロールの現在のテキストを取得または設定します。</summary>
      <value>
        <value />
      </value>
      <remarks>このプロパティは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextFormat" />プロパティと関連しています。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedItem" />に複数の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />が含まれている場合、1つ以上のサブ項目のテキストを<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextFormat" nolink="true" />プロパティに従って表示できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextBoxStyle">
      <summary>エディタの外観スタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle" />値。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.TextOnly" />です。</value>
      <remarks>このプロパティは、この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />コントロールの編集領域にテキストのみ、画像のみ、またはその両方のいずれが表示されるかを決定します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextFormat" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextFormat">
      <summary>テキストのカスタマイズに使用される書式文字列を取得または設定します。</summary>
      <value>テキストのカスタマイズに使用される書式文字列を示す<see cref="T:System.String" />値。</value>
      <remarks>このプロパティを使用して、このコントロールに表示される<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Text" />の書式をカスタマイズできます。</remarks>
      <exception cref="T:System.ArgumentException">
        <b>value</b>が有効な<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextFormat" />ではありません。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextBoxStyle" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextSubItemIndex">
      <summary>Textプロパティの表示に使用する<b>SubItem</b>のインデックスを表すint値を取得または設定します。</summary>
      <value>
        <see cref="T:System.Int32" />値。<br /> デフォルト値は0です。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextFormat" />プロパティの値が<see cref="F:System.String.Empty" />の場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Text" />プロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" />コレクションに含まれるサブ項目のうち、このプロパティのインデックス値によって特定された<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />のテキストと一致します。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedText" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.UnSelectedImageIndex">
      <summary>ユーザーがドロップダウンリストでどの項目も選択していないときにエディタ領域に表示される画像のインデックスを取得または設定します。</summary>
      <value>画像のインデックスを示す<see cref="T:System.Int32" />値。<br /> デフォルト値は-1です。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedItem" />が<see langword="null" />で、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextBoxStyle" />プロパティが<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.ImageOnly" />または<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.Both" />の場合、このインデックス値に従って編集領域に画像が表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.UseCompatibleDrawing">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownStyle" />が<see cref="F:System.Windows.Forms.ComboBoxStyle.DropDownList" />である場合に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />が互換描画を使用するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />が互換描画を使用する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ValueSubItemIndex">
      <summary>選択されている値のサブ項目インデックスを示す<see cref="T:System.Int32" />値を取得または設定します。</summary>
      <value>
        <see cref="T:System.Int32" />値。<br /> デフォルト値は0です。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedValue" />プロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" />コレクションに含まれるサブ項目のうち、このプロパティのインデックス値によって特定された<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />のテキストと一致します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値が範囲外です。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedValue" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AboutBox">
      <summary>バージョン情報ダイアログボックスを表示します。</summary>
      <remarks>このメソッドが呼び出された後、製品情報を含むウィンドウが表示されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ApplyRecommendedValue">
      <summary>入力候補値をコントロールに適用します。</summary>
      <remarks>この<b>ApplyRecommendedValue</b>メソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowRecommendedValue" />プロパティが<see langword="true" />の場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.RecommendedValue" />を受け入れることができます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BeginUpdate">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />に項目を一度に1つずつ追加するときにパフォーマンスの低下を防ぎます。</summary>
      <remarks>このメソッドは、EndUpdateメソッドが呼び出されるまでコントロールの描画を抑制します。<b>GcComboBox</b>に項目を追加する最も望ましい方法は、（<b>GcComboBox</b>のItemsプロパティを通じて）<b>ListItemCollection</b>クラスのAddRangeメソッドを使用することです。このメソッドを使用すると、一連の項目を一度にリストに追加できます。この方法を使わずに、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection" />クラスのAddメソッドを使用して項目を一度に1つずつ追加する場合は、BeginUpdateメソッドを使用することで、項目がリストに追加されるたびに<b>GcComboBox</b>が再描画されるのを防ぐことができます。リストへの項目の追加が完了したら、EndUpdateメソッドを呼び出して<b>GcComboBox</b>を再描画します。この方法で項目を追加すれば、多数の項目をリストに追加するときに<b>GcComboBox</b>の再描画によるちらつきが起こりません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Clear">
      <summary>コントロールのすべてのテキストをクリアします。</summary>
      <remarks>このメソッドを使用すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Text" />プロパティに空の文字列を代入せずに、コントロールの内容を削除できます。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Paste" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Copy" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Cut" />
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Undo" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.CanUndo" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.CreateAccessibilityInstance">
      <summary>新しいユーザー補助オブジェクトを作成します。</summary>
      <returns>新しい<see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Dispose(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />で使用されているアンマネージリソースを解放します。オプションで、マネージリソースを解放することもできます。</summary>
      <param name="disposing">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>マネージリソースとアンマネージリソースの両方を解放します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>アンマネージリソースだけを解放します。</description>
          </item>
        </list>
      </param>
      <remarks>
        <see cref="T:System.Windows.Forms.Control" />の使用が終わったら、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Dispose(System.Boolean)" />を呼び出します。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Dispose(System.Boolean)" nolink="true" />メソッドは、<see cref="T:System.Windows.Forms.Control" nolink="true" />を使用できない状態にします。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Dispose(System.Boolean)" nolink="true" />を呼び出した後で、<see cref="T:System.Windows.Forms.Control" nolink="true" />へのすべての参照を解放し、<see cref="T:System.Windows.Forms.Control" nolink="true" />によって占有されていたメモリをガベージコレクターがクリアできるようにする必要があります。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinDown">
      <summary>スピンダウン動作を実行します。</summary>
      <remarks>このメソッドを呼び出すことは、コントロールにフォーカスがあるときに［↓］キーを押すのと同じです。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinUp" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinDown(System.Int32)">
      <summary>増減量に従ってスピンダウンアクションを実行します。</summary>
      <param name="increment">増減量を示す<see cref="T:System.Int32" />値。</param>
      <remarks>このメソッドは、incrementパラメーターに従ってこのコントロールの値をスピンダウンします。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinUp">
      <summary>スピンアップ動作を実行します。</summary>
      <remarks>このメソッドを呼び出すことは、コントロールにフォーカスがあるときに［↑］キーを押すのと同じです。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinDown" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinUp(System.Int32)">
      <summary>増減量に従ってスピンアップアクションを実行します。</summary>
      <param name="increment">増減量を示す<see cref="T:System.Int32" />値。</param>
      <remarks>このメソッドは、incrementパラメーターに従ってこのコントロールの値をスピンアップします。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Drop">
      <summary>ドロップダウンウィンドウを表示します。</summary>
      <remarks>
        <para>このメソッドは、データ入力を支援するドロップダウンエディタをユーザーに表示します。コントロールが無効であるか、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" />プロパティがfalseの場合、このメソッドの呼び出しは無視されます。</para>
        <para>ドロップダウンエディタが表示される直前に、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownOpening" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownOpened" />イベントが発生します。</para>
        <note> このメソッドは、コントロールに入力フォーカスがない場合、フォーカスを取得しようとしません。 </note>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.EndUpdate">
      <summary>
        <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.BeginUpdate" />メソッドによって描画が一時停止された後、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />コントロールの描画を再開します。</summary>
      <remarks>
        <b>GcComboBox</b>に項目を追加する最も望ましい方法は、（<b>GcComboBox</b>のItemsプロパティを通じて）<b>ListItemCollection</b>クラスのAddRangeメソッドを使用することです。このメソッドを使用すると、一連の項目を一度にリストに追加できます。この方法を使わずに、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection" />クラスのAddメソッドを使用して項目を一度に1つずつ追加する場合は、BeginUpdateメソッドを使用することで、項目がリストに追加されるたびに<b>GcComboBox</b>が再描画されるのを防ぐことができます。リストへの項目の追加が完了したら、EndUpdateメソッドを呼び出して<b>GcComboBox</b>を再描画します。この方法で項目を追加すれば、多数の項目をリストに追加するときに<b>GcComboBox</b>の再描画によるちらつきが起こりません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindObject(System.Object,System.Int32)">
      <summary>指定したオブジェクトに一致するリスト内のすべての項目を検索します。</summary>
      <param name="obj">検索するオブジェクト。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>一致した項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection" />。</returns>
      <remarks>objパラメーターは、コンボボックスリストの各項目に関連付けられたオブジェクトに対して比較するオブジェクトです。findTargetColumnIndexによって指定したリストの列に対してオブジェクトの先頭から始まる部分一致検索が実行され、指定した部分文字列と一致するすべての項目が返されます。その後で、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" />メソッドを使用して検索オブジェクトを含む項目を削除したり、項目のテキストを変更したりできます。指定したオブジェクトが見つかった後、引き続き<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />内で同じオブジェクトの他のインスタンスを検索する場合は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" nolink="true" />内の開始インデックスを指定するパラメーターを受け取るバージョンの<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.Int32)" />メソッドを使用する必要があります。部分一致ではなく完全一致で検索を実行する場合は、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32)" />メソッドを使用します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindObject(System.Object,System.Int32,System.Int32)">
      <summary>指定したインデックスより後にある、指定したオブジェクトに一致する最初の項目を検索します。</summary>
      <param name="obj">検索するオブジェクト。</param>
      <param name="startIndex">検索の開始位置の直前の項目のゼロから始まるインデックス。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>見つかった最初の項目のゼロから始まるインデックス。</returns>
      <remarks>objパラメーターは、コンボボックスリストの各項目に関連付けられたオブジェクトに対して比較するオブジェクトです。findTargetColumnIndexによって指定したコンボボックスリストの列に対してオブジェクトの先頭から始まる部分一致検索が実行され、オブジェクトと一致する最初の項目が返されます。その後で、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" />メソッドを使用して検索オブジェクトを含む項目を削除したり、オブジェクトを変更したりできます。このメソッドは通常、このメソッドの開始インデックスを指定しないバージョンを使用して検索を実行した後に使用します。リスト内の最初の項目が見つかった後、その項目のインデックス位置をこのメソッドのstartIndexパラメーターに指定して、検索オブジェクトと一致する次のインスタンスを検索します。部分一致ではなく完全一致で検索を実行する場合は、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32,System.Int32)" />メソッドを使用します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <b>startIndex</b>が範囲外です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <b>findTargetColumnIndex</b>が範囲外です。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32)">
      <summary>指定した文字列で始まるリスト内のすべての項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>一致した項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedComboItemCollection" />。</returns>
      <remarks>このメソッドによる検索では大文字と小文字は区別されません。sパラメーターは、コンボボックスリストの各項目に関連付けられたテキストに対して比較する部分文字列です。findTargetColumnIndexによって指定したリストの列に対してテキストの先頭から始まる部分一致検索が実行され、指定した部分文字列と一致する最初の項目が返されます。その後で、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" />メソッドを使用して検索テキストを含む項目を削除したり、項目のテキストを変更したりできます。指定したテキストが見つかった後、引き続き<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />内で同じテキストの他のインスタンスを検索する場合は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" nolink="true" />内の開始インデックスを指定するパラメーターを受け取るバージョンの<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.Int32)" />メソッドを使用する必要があります。部分一致ではなく完全一致で検索を実行する場合は、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32)" />メソッドを使用します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.Int32)">
      <summary>指定したインデックスより後にある、指定した文字列で始まる最初の項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="startIndex">検索の開始位置の直前の項目のゼロから始まるインデックス。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>見つかった最初の項目のゼロから始まるインデックス。一致が見つからなかった場合は-1を返します。</returns>
      <remarks>このメソッドによる検索では大文字と小文字は区別されません。sパラメーターは、コンボボックスリストの各項目に関連付けられたテキストに対して比較する部分文字列です。findTargetColumnIndexによって指定したリストの列に対してテキストの先頭から始まる部分一致検索が実行され、指定した部分文字列と一致するすべての項目が返されます。その後で、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" />メソッドを使用して検索テキストを含む項目を削除したり、項目のテキストを変更したりできます。このメソッドは通常、このメソッドの開始インデックスを指定しないバージョンを使用して検索を実行した後に使用します。リスト内の最初の項目が見つかった後、その項目のインデックス位置をこのメソッドのstartIndexパラメーターに指定して、検索テキストに一致する次のインスタンスを検索します。部分一致ではなく完全一致で検索を実行する場合は、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32,System.Int32)" />メソッドを使用します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <b>startIndex</b>が範囲外です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <b>findTargetColumnIndex</b>が範囲外です。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.String)">
      <summary>特定のテキスト書式に基づいて、指定した文字列で始まるリスト内のすべての項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="textFormat">テキスト書式を表す<see cref="T:System.String" />。</param>
      <returns>一致した項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedComboItemCollection" />。</returns>
      <remarks>このメソッドによる検索では大文字と小文字は区別されません。sパラメーターは、コンボボックスリストの各項目に関連付けられたテキストに対して比較する部分文字列です。コンボボックスリストの項目に対してテキストの先頭から始まる部分一致検索が実行され、指定した部分文字列と一致する項目が返されます。その後で、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" />メソッドを使用して検索テキストを含む項目を削除したり、項目のテキストを変更したりできます。指定したテキストが見つかった後、引き続き<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />内で同じテキストの他のインスタンスを検索する場合は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" nolink="true" />内の開始インデックスを指定するパラメーターを受け取るバージョンの<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.Int32)" />メソッドを使用する必要があります。部分一致ではなく完全一致で検索を実行する場合は、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.String)" />メソッドを使用します。</remarks>
      <exception cref="T:System.ArgumentException">
        <b>textFormat</b>が有効なテキスト書式ではありません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.String)">
      <summary>特定のテキスト書式に基づいて、指定したインデックスより後にある、指定した文字列で始まる最初の項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="startIndex">検索の開始位置の直前の項目のゼロから始まるインデックス。</param>
      <param name="textFormat">テキスト書式を表す<see cref="T:System.String" />。</param>
      <returns>見つかった最初の項目のゼロから始まるインデックス。一致が見つからなかった場合は-1を返します。</returns>
      <remarks>このメソッドによる検索では大文字と小文字は区別されません。sパラメーターは、コンボボックスリストの各項目に関連付けられたテキストに対して比較する部分文字列です。コンボボックスリストの項目に対してテキストの先頭から始まる部分一致検索が実行され、指定した部分文字列と一致する最初の項目が返されます。その後で、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" />メソッドを使用して検索テキストを含む項目を削除したり、項目のテキストを変更したりできます。指定したテキストが見つかった後、引き続き<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />内で同じテキストの他のインスタンスを検索する場合は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" nolink="true" />内の開始インデックスを指定するパラメーターを受け取るバージョンの<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.Int32)" />メソッドを使用する必要があります。部分一致ではなく完全一致で検索を実行する場合は、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32,System.String)" />メソッドを使用します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <b>startIndex</b>が範囲外です。</exception>
      <exception cref="T:System.ArgumentException">
        <b>textFormat</b>が有効なTextFormatではありません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32)">
      <summary>指定した文字列に一致するリスト内のすべての項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>一致した項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection" />。</returns>
      <remarks>このメソッドによる検索では大文字と小文字が区別されます。sパラメーターは、コンボボックスリストの各項目に関連付けられたテキストに対して比較する文字列です。findTargetColumnIndexによって指定したリストの列に対してテキストの先頭から始まる一致が検索され、指定した部分文字列と一致する最初の項目が返されます。その後で、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" />メソッドを使用して検索テキストを含む項目を削除したり、項目のテキストを変更したりできます。指定したテキストが見つかった後、引き続き<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />内で同じテキストの他のインスタンスを検索する場合は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" nolink="true" />内の開始インデックスを指定するパラメーターを受け取るバージョンの<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32,System.Int32)" />メソッドを使用する必要があります。完全一致ではなく部分一致で検索を実行する場合は、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32)" />メソッドを使用します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32,System.Int32)">
      <summary>指定したインデックスより後にある、指定した文字列に一致する最初の項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="startIndex">検索の開始位置の直前の項目のゼロから始まるインデックス。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>見つかった最初の項目のゼロから始まるインデックス。一致が見つからなかった場合は-1を返します。</returns>
      <remarks>このメソッドによる検索では大文字と小文字が区別されます。sパラメーターは、コンボボックスリストの各項目に関連付けられたテキストに対して比較する文字列です。findTargetColumnIndexによって指定したリストの列に対してテキストの先頭から始まる一致が検索され、指定した部分文字列と一致する最初の項目が返されます。その後で、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" />メソッドを使用して検索テキストを含む項目を削除したり、項目のテキストを変更したりできます。このメソッドは通常、このメソッドの開始インデックスを指定しないバージョンを使用して検索を実行した後に使用します。リスト内の最初の項目が見つかった後、その項目のインデックス位置をこのメソッドのstartIndexパラメーターに指定して、検索テキストに一致する次のインスタンスを検索します。完全一致ではなく部分一致で検索を実行する場合は、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.Int32)" />メソッドを使用します。<para />このメソッドによる検索は循環しません。startIndexパラメーター自体がコレクションの最後のインデックスと等しい場合は例外がスローされます。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <b>startIndex</b>が範囲外です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <b>findTargetColumnIndex</b>が範囲外です。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.String)">
      <summary>特定のテキスト書式に基づいて、指定した文字列に一致するリスト内のすべての項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="textFormat">テキスト書式を表す<see cref="T:System.String" />。</param>
      <returns>一致した項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection" />。</returns>
      <remarks>このメソッドによる検索では大文字と小文字が区別されます。sパラメーターは、コンボボックスリストの各項目に関連付けられたテキストに対して比較する文字列です。リストの項目に対してテキストの先頭から始まる一致が検索され、指定した部分文字列と一致する項目が返されます。その後で、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" />メソッドを使用して検索テキストを含む項目を削除したり、項目のテキストを変更したりできます。指定したテキストが見つかった後、引き続き<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />内で同じテキストの他のインスタンスを検索する場合は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" nolink="true" />内の開始インデックスを指定するパラメーターを受け取るバージョンの<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32,System.String)" />メソッドを使用する必要があります。完全一致ではなく部分一致で検索を実行する場合は、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.String)" />メソッドを使用します。</remarks>
      <exception cref="T:System.ArgumentException">
        <b>textFormat</b>が有効なテキスト書式ではありません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindStringExact(System.String,System.Int32,System.String)">
      <summary>特定のテキスト書式に基づいて、指定したインデックスより後にある、指定した文字列に一致する最初の項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="startIndex">検索の開始位置の直前の項目のゼロから始まるインデックス。</param>
      <param name="textFormat">テキスト書式を表す<see cref="T:System.String" />。</param>
      <returns>見つかった最初の項目のゼロから始まるインデックス。一致が見つからなかった場合は-1を返します。</returns>
      <remarks>このメソッドによる検索では大文字と小文字が区別されます。sパラメーターは、コンボボックスリストの各項目に関連付けられたテキストに対して比較する文字列です。リストの項目に対してテキストの先頭から始まる一致が検索され、指定した部分文字列と一致する最初の項目が返されます。その後で、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)" />メソッドを使用して検索テキストを含む項目を削除したり、項目のテキストを変更したりできます。このメソッドは通常、このメソッドの開始インデックスを指定しないバージョンを使用して検索を実行した後に使用します。リスト内の最初の項目が見つかった後、その項目のインデックス位置をこのメソッドのstartIndexパラメーターに指定して、検索テキストに一致する次のインスタンスを検索します。完全一致ではなく部分一致で検索を実行する場合は、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.FindString(System.String,System.Int32,System.String)" />メソッドを使用します。<para />このメソッドによる検索は循環しません。startIndexパラメーター自体がコレクションの最後のインデックスと等しい場合は例外がスローされます。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <b>startIndex</b>が範囲外です。</exception>
      <exception cref="T:System.ArgumentException">
        <b>textFormat</b>が有効なTextFormatではありません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
      <returns>既定のショートカット機能を含む<b>Dictionary</b><b>&lt;</b><b>Keys, string</b><b>&gt;</b>インタフェースを実装したオブジェクト。</returns>
      <remarks>
        <b>GetDefaultShortcuts</b> メソッドはコントロールが作成されるときに派生クラスに対して既定のショートカット機能の設定を行います。<see langword="null" />を設定した場合には、ショートカット機能は何も設定されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.GetDefaultSideButtonTypes">
      <summary>既定のサイドボタンを取得します。</summary>
      <returns>. すべてのタイプのデフォルトサイドボタンを含む<see cref="T:System.Type" />リスト。</returns>
      <remarks>派生クラスで<b>GetDefaultSideButtonTypes</b>メソッドを使用して、コントロールが作成されるときのデフォルトサイドボタンをカスタマイズできます。このメソッドが<see langword="null" />を返す場合、コントロールにサイドボタンは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.GetPreferredSize(System.Drawing.Size)">
      <summary>コントロールが収まる矩形領域のサイズを取得します。</summary>
      <param name="proposedSize">調整対象となる<b><see cref="System.Drawing.Size">Size</see></b>値。</param>
      <returns>矩形の幅と高さを表す<see cref="T:System.Drawing.Size" />型オブジェクトの順序付きペア。</returns>
      <remarks>このメソッドは、すべての内容を表示できる最小サイズを取得します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[])">
      <summary>既定のサイドボタンを初期化します。</summary>
      <param name="defaultSideButtons">初期化する既定のサイドボタン。</param>
      <remarks>派生クラスで<b>InitializeDefaultSideButtons</b>メソッドを使用して、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.GetDefaultSideButtonTypes" />メソッドによって作成されるデフォルトサイドボタンを初期化できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnAutoGenerateColumnsChanged(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoGenerateColumnsChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnAutoGenerateColumnsChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnAutoGenerateColumnsChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnAutoGenerateColumnsChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnBindingContextChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.BindingContextChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />オブジェクト。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnBindingContextChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnBindingContextChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnBindingContextChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDataMemberChanged(System.Object,System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMemberChanged" />イベントを発生させます。</summary>
      <param name="sender">イベントソースを示す<see cref="T:System.Object" />インスタンス。</param>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDataMemberChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnDataMemberChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDataMemberChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDataPropertyNameChanged(System.Object,System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataPropertyNameChanged" />イベントを発生させます。</summary>
      <param name="sender">イベントソースを示す<see cref="T:System.Object" />インスタンス。</param>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDataPropertyNameChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnDataPropertyNameChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDataPropertyNameChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDataSourceChanged(System.Object,System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSourceChanged" />イベントを発生させます。</summary>
      <param name="sender">イベントソースを示す<see cref="T:System.Object" />インスタンス。</param>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDataSourceChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnDataSourceChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDataSourceChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDropDownClosed(System.Object,System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownClosed" />イベントを発生させます。</summary>
      <param name="sender">イベントソースを示す<see cref="T:System.Object" />インスタンス。</param>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownClosed</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnDropDownClosed</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownClosed</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDropDownClosing(GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownClosing" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownClosing</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnDropDownClosing</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownClosing</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDropDownOpened(System.Object,System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownOpened" />イベントを発生させます。</summary>
      <param name="sender">イベントソースを示す<see cref="T:System.Object" />インスタンス。</param>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownOpened</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnDropDownOpened</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownOpened</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDropDownOpening(GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownOpening" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownOpening</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnDropDownOpening</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownOpening</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnDropDownStyleChanged(System.Object,System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownStyleChanged" />イベントを発生させます。</summary>
      <param name="sender">イベントソースを示す<see cref="T:System.Object" />インスタンス。</param>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownStyleChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnDropDownStyleChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownStyleChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnEnabledChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnabledChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnEnabledChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnabledChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnEnter(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Enter" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnter</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnEnter</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnter</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnFontChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.FontChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />オブジェクト。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnFontChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnFontChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnFontChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnGotFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.GotFocus" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnGotFocus</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnGotFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnGotFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnLeave(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Leave">Leave</see> /&gt; イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnLeave</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnLeave</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnLeave</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnListSelectedItemIndexChanged(System.Object,System.EventArgs)">
      <summary>ListSelectedItemIndexChangedイベントを発生させます。</summary>
      <param name="sender">イベントソースを示す<see cref="T:System.Object" />インスタンス。</param>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnListSelectedItemIndexChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnListSelectedItemIndexChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnListSelectedItemIndexChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnLostFocus(System.EventArgs)">
      <summary>LostFocusイベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnLostFocus</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnLostFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnLostFocus</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.MouseDown" />イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.Windows.Forms.MouseEventArgs">MouseEventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnMouseDown</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnMouseDown</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnMouseDown</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.MouseUp" />イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.Windows.Forms.MouseEventArgs">MouseEventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnMouseUp</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnMouseUp</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnMouseUp</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnPaddingChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.PaddingChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />オブジェクト。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnPaddingChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnPaddingChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnPaddingChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Paint" />イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.Windows.Forms.PaintEventArgs">PaintEventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnPaint</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnPaint</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnPaint</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnSelectedIndexChanged(System.Object,System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedIndexChanged" />イベントを発生させます。</summary>
      <param name="sender">イベントソースを示す<see cref="T:System.Object" />インスタンス。</param>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnSelectedIndexChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnSelectedIndexChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnSelectedIndexChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnSelectedValueChanged(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedValueChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnSelectedValueChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnSelectedValueChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnSelectedValueChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnSpinDown(System.Object,System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SpinDown" />イベントを発生させます。</summary>
      <param name="sender">イベントソースを示す<see cref="T:System.Object" />インスタンス。</param>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnSpinDown</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnSpinDown</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnSpinDown</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnSpinUp(System.Object,System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SpinUp" />イベントを発生させます。</summary>
      <param name="sender">イベントソースを示す<see cref="T:System.Object" />インスタンス。</param>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnSpinUp</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnSpinUp</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnSpinUp</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Validating" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.ComponentModel.CancelEventArgs">CancelEventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnValidating</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnValidating</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnValidating</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.OnVisibleChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />オブジェクト。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnVisibleChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnVisibleChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnVisibleChanged</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
      <summary>キーメッセージを処理し、適切なコントロールイベントを生成します。</summary>
      <param name="m">参照によって渡された、処理するウィンドウメッセージを表す<see cref="T:System.Windows.Forms.Message" />。</param>
      <returns>メッセージがコントロールによって処理された場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
      <remarks>このメソッドは、コントロールがキーボードメッセージを受け取ったときに呼び出されます。このメソッドは、<see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />、<see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />、<see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />のいずれかのメソッドを呼び出してメッセージの適切なキーイベントを生成します。mパラメーターには、処理されるウィンドウメッセージが含まれます。<see cref="P:System.Windows.Forms.Message.Msg" />プロパティの有効な値は<b>WM_CHAR</b>、<b>WM_KEYDOWN</b>、<b>WM_SYSKEYDOWN</b>、<b>WM_KEYUP</b>、<b>WM_SYSKEYUP</b>、<b>WM_IME_CHAR</b>です。<para /><b>継承時の注意: </b><para />派生クラスで<b>ProcessKeyEventArgs</b>メソッドをオーバーライドするとき、コントロールがキーを処理したことを示す場合はtrueを返します。コントロールによって処理されないキーについては、基本クラスの<b>ProcessKeyEventArgs</b>メソッドを呼び出した結果を返します。コントロールがこのメソッドをオーバーライドしなければならないことはほとんどありません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShortcutSpinDown">
      <summary>ショートカットキーのスピンダウンを実行します。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />のために使用されます。動作は<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinDown" />メソッドと同じです。このメソッドは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.AllowSpin" />プロパティと<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.SpinOnKeys" />プロパティの影響を受けます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShortcutSpinUp">
      <summary>ショートカットキーのスピンアップを実行します。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />のために使用されます。動作は<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DoSpinUp" />メソッドと同じです。このメソッドは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.AllowSpin" />プロパティと<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.SpinOnKeys" />プロパティの影響を受けます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SwitchDropDown">
      <summary>ドロップダウンを切り替えます。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。ドロップダウンウィンドウが閉じている場合、このメソッドを呼び出すとドロップダウンウィンドウが開きます。ドロップダウンウィンドウが開いている場合は、このメソッドを呼び出すとドロップダウンウィンドウが閉じます。ただし、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" />プロパティが<see langword="false" />の場合には、このメソッドは機能しません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.WndProc(System.Windows.Forms.Message@)">
      <summary>ウィンドウメッセージを処理します。</summary>
      <param name="m">処理するWindows <see cref="T:System.Windows.Forms.Message" />。</param>
      <remarks>すべてのメッセージは、<see cref="T:GrapeCity.Framework.Spread.InputMan.CellType.Forms.PreProcessMessage" />メソッドを通じてフィルタ処理された後に<b>WndProc</b>メソッドに送られます。<para /><b>WndProc</b>メソッドは、Windows <b>WindowProc</b>関数と正確に一致しています。Windowsメッセージの処理方法の詳細については、MSDNライブラリ（http://msdn.microsoft.com/library/ja）にあるWindowsプラットフォームSDKのリファレンスで<b>WindowProc</b>関数のドキュメントを参照してください。<para /><b>継承時の注意: </b><para />継承コントロールでは、自身で処理できないメッセージを処理するために、基本クラスの<b>WndProc</b>メソッドを呼び出す必要があります。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoGenerateColumnsChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoGenerateColumns" />プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoGenerateColumns" />プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMemberChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMember" />プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMember" />プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataPropertyNameChanged">
      <summary>現在の連結データソースに含まれる連結フィールドの名前が変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataPropertyName" />プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSourceChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSource" />プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSource" />プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownClosed">
      <summary>ドロップダウンウィンドウが閉じたときに発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがプログラムまたはユーザー操作によって閉じた場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownClosing">
      <summary>ドロップダウンウィンドウが閉じる前に発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがコードの実行またはユーザー操作によって閉じる場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownOpened">
      <summary>ドロップダウンウィンドウがポップアップしたときに発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがプログラムまたはユーザー操作によって開いた場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownOpening">
      <summary>ドロップダウンウィンドウがポップアップする前に発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがコードの実行またはユーザー操作によって開く場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownStyleChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownStyle" />プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownStyle" />プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListSelectedItemIndexChanged">
      <summary>
        <b>ListSelectedItemIndex</b>プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントのイベントハンドラを作成して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />で選択されているインデックスが変更されたときにその通知を受けることができます。これは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" nolink="true" />で現在何が選択されているかに基づいて他のコントロールに情報を表示する場合に便利です。このイベントのイベントハンドラを使用して他のコントロールに情報をロードできます。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedIndexChanged">
      <summary>
        <b>SelectedIndex</b>プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントのイベントハンドラを作成して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />で選択されているインデックスが変更されたときにその通知を受けることができます。これは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" nolink="true" />で現在何が選択されているかに基づいて他のコントロールに情報を表示する場合に便利です。このイベントのイベントハンドラを使用して他のコントロールに情報をロードできます。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedValueChanged">
      <summary>
        <b>SelectedValue</b>プロパティが変更されたときに発生します。</summary>
      <remarks>デリゲートを作成するとき、イベントを処理するメソッドを特定します。イベントをイベントハンドラに関連付けるには、デリゲートのインスタンスをイベントに追加します。そうすると、デリゲートを削除しない限り、イベントが発生するたびにイベントハンドラが呼び出されます。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SpinDown">
      <summary>スピンダウンアクションが実行されたときに発生します。</summary>
      <remarks>このイベントは、スピンダウン動作が起こったときに発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SpinUp">
      <summary>スピンアップアクションが実行されたときに発生します。</summary>
      <remarks>このイベントは、スピンアップ動作が起こったときに発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType">
      <summary>
        <b>GcComboBoxCellType</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AcceptsCrLf">
      <summary>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理方法を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理モードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" />列挙体。<br />デフォルト値は<b>CrLfMode.NoControl</b>です。</value>
      <remarks>
        <b>CrLf.Cut</b>に設定すると、<b>GcComboBox</b>で文字列をコピー、切り取り、または貼り付けるときの動作が標準の<b>TextBox</b>と同じになります。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AcceptsTabChar">
      <summary>文字列をコピー、切り取り、および貼り付けるときのTab文字の処理方法を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときのTab文字の処理モードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" />列挙体。<br />デフォルト値は<b>TabCharMode.NoControl</b>です。</value>
      <remarks>
        <b>TabCharMode.Cut</b>に設定すると、<b>GcComboBox</b>で文字列をコピー、切り取り、または貼り付けるときの動作が標準の<b>TextBox</b>と同じになります。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b>が有効な<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" />項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AllowSpace">
      <summary>許容されるスペース文字の種類を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AllowSpace" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace" />値。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.Both" />です。</value>
      <remarks>
        <para>
          <b>AllowSpace</b>プロパティを使用して、テキストに入力できるスペースの種類を指定します。</para>
        <para />
        <para>
          <b>AllowSpace</b>が<b>None</b>の場合、<b>GcComboBox</b>にはスペースを入力できません。<b>AllowSpace.Narrow</b>を指定すると、半角スペースを入力できます。<b>AllowSpace.Wide</b>を指定すると、全角スペースを入力できます。<b>AllowSpace.Both</b>を指定すると、すべての種類のスペースを入力できます。</para>
        <para />
        <note> AutoConvertプロパティが<see langword="true" />で、AllowSpaceが<b>AllowSpace.Wide</b>の場合、ユーザーがコントロールに半角スペースを入力すると、自動的に半角スペースが全角スペースに変換されます。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Format(System.Object,System.Boolean@)" />プロパティは常に<b>AllowSpace</b>プロパティと組み合わせて使用されます。 </note>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AlternateText">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />コントロールの代替テキストを取得します。</summary>
      <value>代替テキストを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ComboBoxAlternateTextInfo" />値。</value>
      <remarks>現在の値が<see cref="F:System.String.Empty" />で、このコントロールに入力フォーカスがある場合、<see cref="N:GrapeCity.Win.Text" />プロパティは<see cref="P:ComboBoxAlternateText.Null" />設定（nullではない）と等しくなります。現在の値が<see langword="null" />で、このコントロールに入力フォーカスがない場合、<see cref="N:GrapeCity.Win.Text" nolink="true" />プロパティは<see cref="P:ComboBoxAlternateText.DisplayNull" />設定と等しくなります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoComplete">
      <summary>オートコンプリート関連の設定を取得します。</summary>
      <value>オートコンプリートの設定。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteCustomSource">
      <summary>AutoCompleteSourceプロパティがCustomSourceに設定されている場合に使用される、カスタムの<see cref="T:System.Windows.Forms.AutoCompleteStringCollection" />を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteSource" />と共に使用する<see cref="T:System.Windows.Forms.AutoCompleteStringCollection" />。<br /> デフォルト値は<see langword="null" />です。</value>
      <remarks>
        <b>AutoCompleteCustomSource</b>、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteMode" />、<b>AutoCompleteSource</b>の各プロパティを使用して、入力された文字列をあらかじめ用意したすべての文字列と前方一致で比較することによって入力文字列を自動的に補完する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />を作成できます。これは、TextBoxコントロールにURL、アドレス、ファイル名、コマンドなどを入力する場合に役立ちます。<para /><para><b>AutoCompleteCustomSource</b>プロパティの使用は任意ですが、<b>AutoCompleteCustomSource</b>を使用するためには、<b>AutoCompleteSource</b>プロパティをCustomSourceに設定する必要があります。</para><para /><para><b>AutoCompleteMode</b>プロパティと<b>AutoCompleteSource</b>プロパティは組み合わせて使用する必要があります。 </para></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteMode">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />セルのオートコンプリートの動作を制御するオプションを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteMode" />値の1つ。<see cref="F:System.Windows.Forms.AutoCompleteMode.Append" />、<see cref="F:System.Windows.Forms.AutoCompleteMode.Suggest" />、<see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />、<see cref="F:System.Windows.Forms.AutoCompleteMode.None" />のいずれかを指定します。デフォルト値は<see cref="F:System.Windows.Forms.AutoCompleteMode.None" nolink="true" />です。</value>
      <remarks>
        <para>
          <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteCustomSource" />、<b>AutoCompleteMode</b>、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteSource" />の各プロパティを使用して、入力された文字列をあらかじめ用意したすべての文字列と前方一致で比較することによって入力文字列を自動的に補完する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />を作成できます。これは、<b>GcTextBox</b>コントロールにURL、アドレス、ファイル名、コマンドなどを入力する場合に役立ちます。</para>
        <para />
        <para>
          <b>AutoCompleteCustomSource</b>プロパティは任意ですが、<b>AutoCompleteCustomSource</b>を使用するためには、<b>AutoCompleteSource</b>プロパティを<b>CustomSource</b>に設定する必要があります。</para>
        <para />
        <para>
          <b>AutoCompleteMode</b>プロパティと<b>AutoCompleteSource</b>プロパティは組み合わせて使用する必要があります。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteSource">
      <summary>オートコンプリートで使用される文字列のソースを取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.AutoCompleteSource" />値の1つ。<see cref="F:System.Windows.Forms.AutoCompleteSource.AllSystemSources" />、<see cref="F:System.Windows.Forms.AutoCompleteSource.AllUrl" />、<see cref="F:System.Windows.Forms.AutoCompleteSource.FileSystem" />、<see cref="F:System.Windows.Forms.AutoCompleteSource.HistoryList" />、<see cref="F:System.Windows.Forms.AutoCompleteSource.RecentlyUsedList" />、<see cref="F:System.Windows.Forms.AutoCompleteSource.CustomSource" />、<see cref="F:System.Windows.Forms.AutoCompleteSource.None" />のいずれかを指定します。<br /> デフォルト値は<see cref="F:System.Windows.Forms.AutoCompleteSource.None" nolink="true" />です。</value>
      <remarks>
        <para>
          <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteCustomSource" />、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteMode" />、<b>AutoCompleteSource</b>の各プロパティを使用して、入力された文字列をあらかじめ用意したすべての文字列と前方一致で比較することによって入力文字列を自動的に補完する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />を作成できます。これは、<b>GcTextBox</b>コントロールにURL、アドレス、ファイル名、コマンドなどを入力する場合に役立ちます。</para>
        <para />
        <para>
          <b>AutoCompleteCustomSource</b>プロパティは任意ですが、<b>AutoCompleteCustomSource</b>を使用するためには、<b>AutoCompleteSource</b>プロパティを<b>CustomSource</b>に設定する必要があります。</para>
        <para />
        <para>
          <b>AutoCompleteMode</b>プロパティと<b>AutoCompleteSource</b>プロパティは組み合わせて使用する必要があります。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoConvert">
      <summary>入力された文字を自動的に変換するかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。入力された文字を自動的に変換する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
      <remarks>
        <para>
          <b>AutoConvert</b>プロパティを<see langword="true" />に設定すると、変換可能なすべての文字が入力マスクに従って自動的に変換されます。たとえば、入力マスクを"A"に設定した場合、小文字を入力すると自動的に大文字に変換されます。</para>
        <para>全角文字入力マスクに半角文字を入力した場合、入力した文字は自動的に全角に変換されます。また、コントロールで半角文字のみが許可されている場合には、全角のスペースは自動的に半角のスペースに変換されます。 </para>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Format" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoFilter">
      <summary>オートフィルタ関連の設定を取得します。</summary>
      <value>オートフィルタの設定。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoGenerateColumns">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DataSource" />または<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DataMember" />プロパティが設定されているときに列が自動的に作成されるかどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" />値。列が自動的に作成される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="true" />です。</value>
      <remarks>ユーザーがソースを<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DataMember" />に連結した場合、データソースに基づいてドロップダウンリストの列が自動的に生成されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoSelect">
      <summary>エディタに入力された文字列と一致するリスト内の項目を自動的に選択するかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。入力された文字を入力に従って自動的にマッチングする場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="false" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ClearCollection">
      <summary>デザイナによる内部使用。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DataMember">
      <summary>連結メンバの文字列を表す値を取得または設定します。</summary>
      <value>連結メンバを示す<see cref="T:System.String" />値。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataSource" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DataSource">
      <summary>データソースを取得または設定します。</summary>
      <value>データソースを示す<b>object</b>。<br /> デフォルト値は<see langword="null" />です。</value>
      <remarks>データソースとしてデータベース、Webサービス、またはオブジェクトを設定し、後でこれらのソースを使用してデータ連結コントロールを生成できます。<b>DataSource</b>プロパティが設定されている場合、項目コレクションは変更できません。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DataMember" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DropDown">
      <summary>ドロップダウン機能の設定を取得します。</summary>
      <value>ドロップダウン機能の設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ComboDropDownInfo" />インスタンス。</value>
      <remarks>この<b>DropDown</b>プロパティを設定することで、ドロップダウンの動作とウィンドウの外観をカスタマイズできます。この設定は、ドロップダウンを表示するかどうか、ドロップダウンをサイズ変更可能にするかどうか、ドロップダウンウィンドウの方向、ドロップダウンウィンドウの影、および開閉時のアニメーションを指定します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownMaxHeight" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DropDownMaxHeight">
      <summary>ユーザーがドロップダウンウィンドウのサイズをカスタマイズしていない場合に適用される、ドロップダウンウィンドウの最大の高さを取得または設定します。ユーザーがドロップダウンウィンドウのサイズをカスタマイズしている場合、このプロパティは無効になります。</summary>
      <value>ドロップダウンウィンドウの最大の高さを示す<see cref="T:System.Int32" />値。<br /> デフォルト値は150です。</value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDown" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DropDownStyle">
      <summary>ドロップダウンスタイルを取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.ComboBoxStyle" />値。<br /> デフォルト値は<see langword="System.Windows.Forms.ComboBoxStyle.DropDown" />です。</value>
      <remarks>
        <b>DropDownStyle</b>プロパティは、ユーザーに提示されるインタフェースを制御します。単純なリストボックス（リストが常に表示される）、ドロップダウンリストボックス（テキスト部分は編集不可で、矢印をクリックするとドロップダウンリストが表示される）、デフォルトのドロップダウンリストボックス（テキスト部分は編集可能で、矢印をクリックするとドロップダウンリストが表示される）のいずれかを指定できます。<para /><b>DropDownStyle</b>プロパティを<b>DropDownList</b>に設定した場合は、リストに含まれる有効な値のみを選択できます。<b>DropDownStyle</b>プロパティを<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.DropDown" />に設定した場合は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />の編集領域に任意の値を入力できます。この場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.AutoCompleteMode" />の<b>Append</b>値は<b>AutoCompleteMode</b>の<see cref="F:System.Windows.Forms.AutoCompleteMode.SuggestAppend" />値と同じように機能します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.EditorValue">
      <summary>基になるデータモデルにどの値が書き込まれるかを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Ellipsis">
      <summary>テキストの幅がコントロールより長い場合に省略記号をどのように表示するかを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" />列挙体の<b>None</b>は、省略記号文字列が表示されないことを意味します。<b>EllipsisEnd</b>は、文字列の末尾に省略記号文字列を追加します。<b>EllipsisPath</b>は、文字列の中央に省略記号文字列を追加します。<b>EllipsisWord</b>は、文字列の末尾を単語単位でトリミングします。<br />デフォルト値は<b>EllipsisMode.None</b>です。</value>
      <remarks>テキストがコントロールの幅より長くて、なおかつコントロールにフォーカスがないときは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.EllipsisString" />プロパティが表示されます。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b>が有効な<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" />項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.EllipsisString">
      <summary>テキストの幅がコントロールより長い場合に省略記号として表示する文字列を取得または設定します。</summary>
      <value>省略記号として使用される文字列を示す<see cref="T:System.String" />値。<br />デフォルト値は<b>(...)</b>です。</value>
      <remarks>このプロパティで指定した文字列は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Ellipsis" />が<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode.EllipsisEnd" />または<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode.EllipsisPath" />に設定されている場合に使用されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.FocusPosition">
      <summary>エディタがフォーカスを取得したときの初期カーソル位置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.FormatString">
      <summary>入力文字列をフィルタリングまたは変換するための書式文字列を取得または設定します。</summary>
      <value>入力文字列をフィルタリングまたは変換するための書式文字列を示す<see cref="T:System.String" />値。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>このプロパティは、入力できる文字と記号の種類を指定します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.AutoConvert" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ImageAlign">
      <summary>画像の配置を取得または設定します。</summary>
      <value>エディタおよびリストの画像の配置を示す<see cref="T:System.Windows.Forms.HorizontalAlignment" />値。</value>
      <remarks>このプロパティは画像の位置を決定します。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ShowListBoxImage" />プロパティがfalseの場合、このプロパティは無効になります。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageWidth" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowListBoxImage" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ImageList">
      <summary>
        <b>ImageList</b>を取得または設定します。</summary>
      <value>
        <b>Image</b>オブジェクトを含む<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ImageList" />。<br /> デフォルト値は<see langword="null" />です。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Items" />に含まれる項目の<b>Image</b>プロパティは、このプロパティから画像をロードします。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ImageWidth">
      <summary>画像の幅を取得または設定します。</summary>
      <value>画像領域の幅を示す<see cref="T:System.Int32" />値。<br /> デフォルト値は16です。</value>
      <remarks>このプロパティは、項目画像の表示に使用される画像領域の幅を決定します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageAlign" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowListBoxImage" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Items">
      <summary>項目コレクションを取得します。</summary>
      <value>コンボ項目のコレクションを表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo" />。</value>
      <remarks>このプロパティを使用して、現在<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />に格納されている項目のリストを参照できます。この参照を使用することで、項目を追加または削除したり、コレクションに含まれている項目の数を取得したりできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListColumns">
      <summary>列コレクションを取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo" />オブジェクト。</value>
      <remarks>このプロパティによって返される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo" />オブジェクトを使用することで、列を追加または削除したり、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />のドロップダウンリストに含まれている列の数を取得したりできます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDefaultColumn" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListDefaultColumn">
      <summary>リストのデフォルトListColumnを表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultListColumnInfo" />値。</value>
      <remarks>このプロパティは、デフォルトの列設定を作成するときに使用します。外観を変更せずに列を追加した場合、その列はデフォルトの列設定を使用します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListColumns" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListDescriptionFormat">
      <summary>
        <b>StatusBar</b>に表示される説明をカスタマイズするための書式文字列を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo" />に含まれる説明のカスタマイズに使用される書式文字列を示す<see cref="T:System.String" />値。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>このプロパティを使用して、このコントロールに表示される説明の書式をカスタマイズできます。</remarks>
      <exception cref="T:System.ArgumentException">
        <b>value</b>が有効な<b>DescriptionFormat</b>ではありません。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDescriptionSubItemIndex" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListDescriptionSubItemIndex">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo" />の表示に関連する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />のインデックスを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.StatusBar" />の表示に関連する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />のインデックスを示す<see cref="T:System.Int32" />値。<br /> デフォルト値は0です。</value>
      <remarks>ステータスバーが表示される場合、このプロパティを使用して、どのサブ項目のテキストをドロップダウンウィンドウのステータスバーに表示するかを指定できます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ListDescriptionFormat" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.StatusBar" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListDisabledItemStyle">
      <summary>無効な項目の色スタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo" />値を取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo" />値。</value>
      <remarks>このプロパティを使用して背景色、前景色、およびグラデーション効果をカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListGradientEffect">
      <summary>背景グラデーション効果を取得または設定します。</summary>
      <value>コントロールの背景グラデーション効果を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" />値。<br /> デフォルト値は<see langword="null" />です。</value>
      <remarks>このプロパティの値に従ってドロップダウンリストウィンドウの背景にグラデーションが描画されます。ただし、このグラデーションは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.BackgroundImage" />によって覆われます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListGridLines">
      <summary>グリッド線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo" />値。</value>
      <remarks>このプロパティの値は、グリッド線の外観を決定します。これには<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Color" />と<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Style" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListHeaderPane">
      <summary>ヘッダペインを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" />値を取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" />値。</value>
      <remarks>このプロパティは、ドロップダウンリストのヘッダペインの外観を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListItemTemplates">
      <summary>項目のテンプレートを指定する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo" />値。</value>
      <remarks>このプロパティは、リスト項目のデフォルト設定を作成するときに使用します。外観を変更せずに項目を追加した場合、その項目はテンプレート設定で表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListSelectedItemStyle">
      <summary>コントロールの選択されている項目の色スタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo" />値を取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo" />値。</value>
      <remarks>このプロパティは、選択されている項目の外観をカスタマイズするときに使用します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ListSortColumnIndex">
      <summary>ソートする列のインデックスを取得または設定します。</summary>
      <value>
        <see cref="T:System.Int32" />値。<br /> デフォルト値は-1です。</value>
      <remarks>ドロップダウンリストをソートする場合、このプロパティによってソートの基準となる列のインデックスが決定されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxDropDownItems">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />のドロップダウン部分に表示される項目の最大数を取得または設定します。</summary>
      <value>ドロップダウン部分に表示される項目の最大数。このプロパティの最小値は1で、最大値は100です。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">最大数が1未満であるか、100を超えています。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLength">
      <summary>ユーザーが編集領域に入力できる最大の長さを取得または設定します。</summary>
      <value>
        <see cref="T:System.Int32" />値。<br /> デフォルト値は0です。</value>
      <remarks>このプロパティは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLengthUnit" />プロパティと関連しています。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLengthCodePage">
      <summary>バイト単位の最大長のカウントに使用されるエンコーディングのコードページを取得または設定します。</summary>
      <value>エンコーディングのコードページを示す<see cref="T:System.Int32" />値。<b />デフォルト値は-1で、エンコーディングを使用せずに組み込みのバイト長カウント方法を使用することを示します。</value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLength" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLengthUnit" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLengthUnit">
      <summary>
        <b>MaxLength</b>の計算方法（バイト数と文字数のどちらに基づくか）を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLength" />の計算方法がバイト数に基づく場合は<see langword="true" />、文字数に基づく場合は<see langword="false" />。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.LengthUnit.Char" />です。</value>
      <remarks>このプロパティは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.MaxLength" />プロパティと関連しています。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.PaintByControl">
      <summary>セルの描画方法を示す値を取得または設定します。true の場合、内部コントロールの描画を使用してセルが描画されます。この場合、セルは編集コントロールとまったく同じように描画されます。セルのすべての設定（スタイルの異なるフィールドなど）がセルの描画時に有効になります。文字列を直接描画するのではなくコントロールによって描画する場合、セルの描画パフォーマンスは遅くなります。また、PDF にエクスポートしたときにセルのテキストは選択できません。false の場合、パフォーマンスは良好ですが、一部の設定が無効になります。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>入力候補値を示す<see cref="T:System.String" />値。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>
        <b>RecommendedValue</b>プロパティはユーザーへのヒントを提供するもので、値が完全に入力されていないときに表示されます。値の入力中に特定のショートカットキーまたはキーの組み合わせを押すと、入力候補値を取得できます。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ScrollBarMode">
      <summary>ドロップダウンウィンドウのスクロールバーの表示方法を取得または設定します。</summary>
      <value>スクロールバーの表示方法を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ScrollBarMode" />列挙値の1つ。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Automatic" />です。</value>
      <remarks>
        <b>ScrollBarMode.Fixed</b>に設定した場合、スクロールバーは常に表示されます。<b>ScrollBarMode.Automatic</b>に設定した場合は、コントロールの内容がコントロールの長さを超えたときにのみスクロールバーが表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ScrollBars">
      <summary>どのスクロールバーを表示するかを取得または設定します。</summary>
      <value>どのスクロールバーを表示するかを指定する<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ScrollBars" />列挙値の1つ。<br /> デフォルト値は<see cref="F:System.Windows.Forms.ScrollBars.Vertical" />です。</value>
      <remarks>このプロパティは、どのスクロールバーが表示されるかを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ShowItemTip">
      <summary>項目ツールチップを表示するかどうかを取得または設定します。</summary>
      <value>マウスを項目に合わせたときにツールチップを表示する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="false" />です。</value>
      <remarks>このプロパティが<see langword="true" />の場合、マウスをドロップダウンリストの項目に合わせるとツールチップが表示されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowOverflowTip" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ShowListBoxImage">
      <summary>ドロップダウンリストの画像を表示するかどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" />値。画像を表示する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="false" />です。</value>
      <remarks>このプロパティが<see langword="true" />で、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Image" />プロパティが<see langword="null" />でない場合、画像が表示されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageWidth" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ImageAlign" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ShowOverflowTip">
      <summary>オーバーフローチップを表示するかどうかを取得または設定します。</summary>
      <value>オーバーフローチップを表示するかどうかを示す<see langword="bool" />値。<br /> デフォルト値は<see langword="false" />です。</value>
      <remarks>このプロパティが<see langword="true" />で、項目テキストが列の幅より長い場合、マウスをドロップダウンリストの項目に合わせるとツールチップが表示されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.ShowItemTip" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを取得または設定します。</summary>
      <value>入力候補値を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>
        <b>ShowRecommendedValue</b>が<see langword="true" />の場合、値が完全に入力されていないときに<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.RecommendedValue" />プロパティの値が表示されます。それ以外の場合、<b>RecommendedValue</b>プロパティの値は表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.SideButtons">
      <summary>
        <b>SideButton</b>のコレクションを取得または設定します。</summary>
      <value>SideButtonBaseのコレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollectionInfo" />インスタンス。</value>
      <remarks>
        <b>SideButtons</b>にはいくつかの種類のサイドボタンを追加または削除できます。これには<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Spin">
      <summary>スピンアクションの情報を取得します。</summary>
      <value>スピン情報を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Spin" />。</value>
      <remarks>この<b>Spin</b> プロパティを設定することで、スピン動作をカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.StatusBar">
      <summary>ステータスバーの情報を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo" />オブジェクトを取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo" />オブジェクト。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBar.Text" />プロパティと<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBar.Visible" />プロパティを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.TextBoxStyle">
      <summary>エディタの外観スタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle" />値。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.TextOnly" />です。</value>
      <remarks>このプロパティは、この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />の編集領域にテキストのみ、画像のみ、またはその両方のいずれが表示されるかを決定します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextFormat" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.TextFormat">
      <summary>テキストのカスタマイズに使用される書式文字列を取得または設定します。</summary>
      <value>テキストのカスタマイズに使用される書式文字列を示す<see cref="T:System.String" />値。</value>
      <remarks>このプロパティは、<see cref="N:GrapeCity.Win.Text" />の表示に使用される書式を指定します。</remarks>
      <exception cref="T:System.ArgumentException">
        <b>value</b>が有効な<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.TextFormat" />ではありません。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.TextBoxStyle" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.TextSubItemIndex">
      <summary>Textプロパティの表示に使用される<b>SubItem</b>のインデックスを表す整数値を取得または設定します。</summary>
      <value>
        <see cref="T:System.Int32" />値。<br /> デフォルト値は0です。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.TextFormat" />プロパティの値が<see cref="F:System.String.Empty" />の場合、<see cref="N:GrapeCity.Win.Text" />プロパティは、<see cref="!:SelectedItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" />コレクションに含まれるサブ項目のうち、このプロパティのインデックス値によって特定された<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />のテキストと一致します。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedText" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.UnSelectedImageIndex">
      <summary>ユーザーがドロップダウンリストで項目を選択していないときにエディタ領域に表示される画像のインデックスを取得または設定します。</summary>
      <value>画像インデックスを示す<see cref="T:System.Int32" />値。<br /> デフォルト値は-1です。</value>
      <remarks>
        <see cref="!:SelectedItem" />が<see langword="null" />で、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.TextBoxStyle" />プロパティが<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.ImageOnly" />または<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.Both" />の場合、このインデックス値に基づいて編集領域に画像が表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.UseCompatibleDrawing">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.DropDownStyle" />が<see cref="F:System.Windows.Forms.ComboBoxStyle.DropDownList" />である場合に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />が互換描画を使用するかどうかを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox" />が互換描画を使用する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ValueSubItemIndex">
      <summary>選択されている値のサブ項目インデックスを示す<see cref="T:System.Int32" />値を取得または設定します。</summary>
      <value>
        <see cref="T:System.Int32" />値。<br /> デフォルト値は0です。</value>
      <remarks>
        <see cref="!:SelectedValue" />プロパティは、<see cref="!:SelectedItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" />コレクションに含まれるサブ項目のうち、このプロパティのインデックス値によって特定された<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />のテキストと一致します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値が範囲外です。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.SelectedValue" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.CanOverflow">
      <summary>セルが一杯になったときに隣接するセルにデータを表示できるかどうかを決定します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.CancelEditing">
      <summary>セルの編集をキャンセルします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Clone">
      <summary>クローンされたセル型を作成して返します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.FindFirstMatchedAndCanBeSelectedIndex(System.String,System.Boolean)">
      <summary>指定したテキストに一致するドロップダウンリスト内の最初の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のインデックスを検索します。</summary>
      <param name="text">検索するテキストを示す<see cref="T:System.String" />値。</param>
      <param name="ignoreCase">
        <b>bool</b>値。検索時に大文字と小文字を区別しない場合はtrue、区別する場合は<b>false</b>。</param>
      <returns>指定したテキストに一致するドロップダウンリスト内の最初の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のインデックスを示す<b>int</b>値。一致が見つからなかった場合は-1を返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Format(System.Object)">
      <summary>指定したデータをセル型の書式に書式設定し、それを文字列として返します。</summary>
      <param name="obj">書式設定するセルデータを含む、データモデル内のオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
      <returns>すべてのデフォルトショートカットを含むディクショナリー。</returns>
      <remarks>派生クラスで <b>GetDefaultShortcuts</b> メソッドを使用して、セルが作成されるときのデフォルトショートカットをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルにショートカットは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetDefaultSideButtonTypes">
      <summary>既定のサイドボタンを取得します。</summary>
      <returns>. すべてのタイプのデフォルトサイドボタンを含む <see cref="T:System.Type" /> リスト。</returns>
      <remarks>派生クラスで <b>GetDefaultSideButtonTypes</b> メソッドを使用して、セルが作成されるときのデフォルトサイドボタンをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルにサイドボタンは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetDisplayText(System.Object)">
      <summary>表示テキストを取得します。</summary>
      <param name="value">値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>外観と倍率を指定してこのセル型の編集コントロールを取得します。</summary>
      <param name="appearance">セルの外観設定。</param>
      <param name="zoomFactor">セルの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetEditorValue">
      <summary>編集コントロール内の書式なしの値を取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetHorizontalAlignment(System.Object)">
      <summary>水平方向の配置を値に基づいて取得します。</summary>
      <param name="value">水平方向の配置を示す値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>レンダラーコントロールのためにセルの優先サイズ（必要な最大サイズ）を取得します。</summary>
      <param name="g">セルを描画するためのグラフィックデバイスインタフェース。</param>
      <param name="size">優先サイズまたは必要な最大サイズ。</param>
      <param name="appearance">レンダラーコントロールの外観設定。</param>
      <param name="value">レンダラーコントロールの名前を含むオブジェクト。</param>
      <param name="zoomFactor">レンダラーコントロールの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>エディタコントロールのためにセルの優先サイズ（必要な最大サイズ）を取得します。</summary>
      <param name="editor">エディタコントロールの名前。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetVerticalAlignment(System.Object)">
      <summary>垂直方向の配置を値に基づいて取得します。</summary>
      <param name="value">垂直方向の配置を示す値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo[])">
      <summary>既定のサイドボタンを初期化します。</summary>
      <param name="defaultSideButtons">初期化する既定のサイドボタン。</param>
      <remarks>派生クラスで<b>InitializeDefaultSideButtons</b>メソッドを使用して、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.GetDefaultSideButtonTypes" />メソッドによって作成されるデフォルトサイドボタンを初期化できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>エディタコントロールを初期化します。</summary>
      <param name="control">設定対象となるコントロールを表す<b><see cref="T:System.Windows.Forms.Control">Control</see></b>オブジェクト。</param>
      <param name="appearance">外観。</param>
      <param name="zoomFactor">倍率。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>指定したコントロールが再利用できるかどうかを判断します。</summary>
      <param name="control">設定対象となるコントロールを表す<b><see cref="T:System.Windows.Forms.Control">Control</see></b>オブジェクト。</param>
      <returns>指定したコントロールが再利用できる場合は <c>true</c>。それ以外の場合は <c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.IsValid(System.Object)">
      <summary>指定した値が有効かどうかを判断します。</summary>
      <param name="value">エディタコントロールの指定された値</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Parse(System.String)">
      <summary>指定した文字列をセル型のデータ型に解析し、それをオブジェクトとして返します。</summary>
      <param name="s">解析するシート上のセルの文字列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.SetEditorValue(System.Object)">
      <summary>編集コントロールの値を設定します。</summary>
      <param name="value">エディタコントロールの（オブジェクトとしての）値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.ShowSubEditor">
      <summary>セルに関連付けられたサブエディタコントロールを表示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>セルの編集を開始します。</summary>
      <param name="e">イベント。</param>
      <param name="selectAll">すべてを選択するかどうか。</param>
      <param name="autoClipboard">クリップボードアクションのショートカットキーを許可するかどうか。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxCellType.StopEditing">
      <summary>セルの編集を終了します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl">
      <summary>GcComboBoxCellTypeの編集コントロール。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.SubEditor">
      <summary>セルのサブエディタを取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>指定されているキーが、コントロールに認識される入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</summary>
      <param name="keyData">キーを表す<b><see cref="T:System.Windows.Forms.Keys">Keys</see></b>値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定されたキーは入力キーです。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定されたキーは入力キーではありません。</description>
          </item>
        </list>
      </returns>
      <remarks>
        <b>IsInputKey</b>メソッドを呼び出すと、keyDataパラメーターで指定したキーが、コントロールに必要な入力キーかどうかを判断できます。このメソッドは、ウィンドウメッセージのプリプロセス中に呼び出され、指定された入力キーを前処理するか、直接コントロールに送信するかを決定します。<b>IsInputKey</b>が<see langword="true" />を返す場合、指定されたキーはコントロールに直接送信されます。<b>IsInputKey</b>が<see langword="false" />を返す場合、キーは前処理され、プリプロセス中にキーに対する処理が終了されなかった場合だけ、コントロールに送信されます。前処理されるキーには、［Tab］、［Enter］、［Esc］、［↑］、［↓］、［←］、［→］が含まれます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>KeyExit イベントを使用してフォーカスを移動します。</summary>
      <param name="e">イベントデータを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> インスタンス。</param>
      <remarks>この <b>MoveFocusByKeyExit</b> メソッドが呼び出されると、フォーカスが移動します。ExitKeys.CharInput、ExitKeys.CtrlRight、ExitKeys.NextControl、ExitKeys.Right、および ExitKeys.Tab は、フォーカスを前方に移動します。その他の ExitKeys は、フォーカスを後方に移動します。<br /><b>継承時の注意：</b>このメソッドを継承クラスでオーバーライドする場合は、基本メソッドを呼び出す必要があります。そうしなければ、フォーカスは移動しません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.NextCell">
      <summary>次のセルに移動します。ショートカットアクションを使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.OnAfterFocus(System.EventArgs)">
      <summary>AfterFocusイベントを発生させます。</summary>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.OnDropDownOpened(System.Object,System.EventArgs)">
      <summary>
        <see cref="!:DropDownOpened" />イベントを発生させます。</summary>
      <param name="sender">イベントソースを示す<see cref="T:System.Object" />インスタンス。</param>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownOpened</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b>派生クラスで<b>OnDropDownOpened</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownOpened</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.OnGotFocus(System.EventArgs)">
      <summary>GotFocus イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnGotFocus</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnGotFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnGotFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.OnInvalidInput(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnInvalidInput</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnInvalidInput</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnInvalidInput</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the KeyDown event.</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>KeyPress イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.PreviousCell">
      <summary>前のセルに移動します。ショートカットアクションを使用します。</summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditingControl.AfterFocus">
      <summary>コントロールがフォーカスを取得した後に発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" />コントロールを表します。</summary>
      <remarks>GcDateTime コントロールを使用すると、機能的な日時入力インタフェースを迅速かつ効率的に設計できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.AcceptsCrLf">
      <summary>文字列をコピー、切り取り、および貼り付けるときの CrLf 文字の処理方法を示す値を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときの CrLf 文字の処理モードを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 列挙体。<br />既定値は <b>CrLfMode.NoControl</b> です。</value>
      <remarks>
        <b>CrLf.Cut</b>に設定すると、<b>GcDateTime</b>で文字列をコピー、切り取り、および貼り付けるときに標準の<b>TextBox</b>と同じように動作します。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.ActiveField">
      <summary>現在のアクティブフィールドを取得します。</summary>
      <value>アクティブなフィールドを示す<see cref="T:GrapeCity.Win.Views.Field" />値。</value>
      <remarks>このプロパティは、アクティブなフィールドを示します。これはキャレットがそのフィールド内にあることを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.AlternateText">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの代替テキストを取得します。</summary>
      <value>代替テキストを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateText" /> 値。</value>
      <remarks>このプロパティを設定すると、編集モードおよび表示モードにおいてコントロールの値が範囲外の年号または<b>null</b>のときに、設定したテキストが代わりに表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DefaultActiveField">
      <summary>既定のアクティブフィールドを取得または設定します。</summary>
      <value>デフォルトアクティブフィールドを示す <see cref="T:GrapeCity.Win.Views.Field" /> 値。</value>
      <remarks>コントロールがフォーカスを取得すると、デフォルトのアクティブフィールドがフォーカスを受け取り、先頭にキャレットが配置されます。</remarks>
      <exception cref="T:System.ArithmeticException">指定されたフィールドがFieldCollectionに存在しません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DisplayFields">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの表示フィールドを取得します。</summary>
      <value>表示フィールドのコレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeDisplayFieldCollection" />オブジェクト。</value>
      <remarks>このプロパティは、このコントロールに入力フォーカスがないときの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" />の表示方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDown">
      <summary>ドロップダウン機能のドロップダウン設定を取得します。</summary>
      <value>ドロップダウン機能のドロップダウン設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDown" />インスタンス。</value>
      <remarks>この<b>DropDown</b>プロパティを設定することで、ドロップダウンの動作とウィンドウの外観をカスタマイズできます。カスタマイズできる項目には、ドロップダウンを表示するかどうか、ドロップダウンをサイズ変更可能にするかどうか、ドロップダウンウィンドウの方向、ドロップダウンウィンドウの影を表示するかどうか、開閉時のアニメーションなどがあります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownCalendar">
      <summary>ドロップダウンカレンダーの設定を取得します。</summary>
      <value>ドロップダウンカレンダーの設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" />インスタンス。</value>
      <remarks>この<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownCalendar" />プロパティを設定することで、ドロップダウンカレンダーコントロールをカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownPicker">
      <summary>ドロップダウンピッカーの設定を取得します。</summary>
      <value>ドロップダウンピッカーの設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker" />インスタンス。</value>
      <remarks>この<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownPicker" />プロパティを設定することで、ドロップダウンピッカーコントロールをカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DroppedDown">
      <summary>ドロップダウンウィンドウがドロップダウンしているかどうかを示す値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>ドロップダウン部分が表示されています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>ドロップダウン部分が閉じられています。</description>
          </item>
        </list>
      </value>
      <remarks>このプロパティを<see langword="true" />に設定することは、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Drop" />メソッドを使用するのと同じです。<note><see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" />オブジェクトが無効または非表示の場合、このプロパティは無効です。また、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" />プロパティがfalseの場合にも、このプロパティは無効になります。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Fields">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" />オブジェクトの項目を表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeFieldCollection" />。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" />の項目を表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeFieldCollection" />。</value>
      <remarks>このプロパティは、このコントロールの <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" /> の表示および編集方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.FieldsEditMode">
      <summary>フィールド編集モードを取得または設定します。</summary>
      <value>フィールド編集モードを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.FieldsEditMode" />列挙値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditMode.LeftSide" />です。</value>
      <remarks>
        <b>FieldsEditMode</b> プロパティは、ユーザーがデータを入力するときのフィールドの編集方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Font">
      <summary>コントロールによって表示されるテキストのフォントを取得または設定します。</summary>
      <value>コントロールによって表示されるテキストに適用する<see cref="T:System.Drawing.Font" />。 既定値は<see cref="P:System.Windows.Forms.Control.DefaultFont" /> プロパティの値です。</value>
      <remarks>
        <para>
          <b>Font</b>プロパティはアンビエントプロパティです。アンビエントプロパティとは、明示的に設定しない場合に親コントロールから取得されるコントロールプロパティです。たとえば<see cref="T:System.Windows.Forms.Button" />は、デフォルトでは親の<see cref="T:System.Windows.Forms.Form" />と同じ<see cref="P:System.Windows.Forms.Control.BackColor" />を持ちます。アンビエントプロパティの詳細については、<see cref="T:System.Windows.Forms.AmbientProperties" />クラスまたは<see cref="T:System.Windows.Forms.Control" />クラスの概要を参照してください。</para>
        <para />
        <para>
          <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.IsInvalidText">
      <summary>テキストが無効かどうかを示す<see langword="bool" />値を取得します。</summary>
      <value>テキストが無効かどうかを示す<see langword="bool" />値。</value>
      <remarks>このプロパティは、テキストが有効かどうかを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate">
      <summary>フィールドまたは値によってコントロールをスピンするときの許容される最大値を取得または設定します。</summary>
      <value>許容される最大値を示す <see cref="T:System.DateTime" /> 値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">値が <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate" /> 未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxMinBehavior">
      <summary>新しい入力値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate" />から<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate" />までの範囲から外れているときの動作を取得または設定します。</summary>
      <value>新しい入力値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate" />と<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate" />によって指定された範囲から外れているときの動作を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxMinBehavior" />列挙値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.AdjustToMaxMin" />です。</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxMinBehavior" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate">
      <summary>フィールドまたは値によってコントロールをスピンするときの許容される最小値を取得または設定します。</summary>
      <value>許容される最小値を示す <see cref="T:System.DateTime" /> 値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">値が <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate" /> を超えています。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Number">
      <summary>値を長整数型で取得または設定します。</summary>
      <value>yyyyMMddHHmmss形式の値を表す<b><see cref="T:System.Int64">Int64</see></b>値。</value>
      <remarks>このプロパティを0に設定することで、基になる値を<see langword="null" />にクリアできます。このプロパティを変更すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Text" />プロパティと<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" />プロパティにそれが反映されます。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.PreferredHeight">
      <summary>コントロールに最適な高さを取得します。</summary>
      <value>コントロールの最適な高さを示す<b>int</b>値。</value>
      <remarks>このプロパティは<see cref="P:System.Windows.Forms.Control.PreferredSize" />プロパティの高さと同じです。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>エディタのデフォルト値を示すnull許容の<see cref="T:System.DateTime" />値。</value>
      <remarks>
        <b>RecommendedValue</b>プロパティはユーザーへのヒントを提供するもので、値が完全に入力されていないときに表示されます。値の入力中に特定のショートカットキーまたはキーの組み合わせを押すと、入力候補値を取得できます。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを示す値を取得または設定します。</summary>
      <value>入力候補値を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>
        <b>ShowRecommendedValue</b>が<see langword="true" />の場合、値が完全に入力されていないときに<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.RecommendedValue" />プロパティの値が表示されます。それ以外の場合、<b>RecommendedValue</b>プロパティの値は表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.SideButtons">
      <summary>コントロールに設定されているサイドボタンのコレクションを取得します。</summary>
      <value>コレクションを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> 値。</value>
      <remarks>
        <b>SideButtons</b>は追加または削除できます。これには<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Spin">
      <summary>スピン機能の設定を取得します。</summary>
      <value>スピン機能の設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpin" />値。</value>
      <remarks>この<b>Spin</b> プロパティを設定することで、スピン動作をカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Text">
      <summary>コントロールの現在のテキストを取得または設定します。</summary>
      <value>
        <value />
      </value>
      <remarks>
        <b>Text</b>プロパティには、入力フォーカスのあるフィールド内のすべてのリテラルとすべての文字が含まれます。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.ValidateMode">
      <summary>入力中にコントロールに適用される検証モードを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx" /> 列挙値の１つ。既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateEx" /> です。</value>
      <remarks>
        <para>
          <b>ValidateMode</b>プロパティを<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateEx" />に設定すると、厳格な検証が実行され、うるう年や存在しない日付値などがチェックされます。また、ユーザーがデータを入力するときに文字のフィルタリングとフィールドの調整が自動的に行われます。たとえば、うるう年の例では、入力マスクが"yyyy.MM.dd"に設定されている場合、ユーザーは2003年2月29日を入力できません。入力マスクが"dd.MM.yyyy"に設定されている場合は、2003年2月29日を入力しようとすると、年の最後の「3」を入力すると同時に29日が28日に自動的に調整されます。</para>
        <para> このプロパティをValidateModeEx.Validateに設定すると、簡易的な検証が実行されます。この場合、各フィールドは個別に動作し、フィールド間の関連性は無視されます。たとえば、入力マスクが"yyyy.MM.dd"に設定されている場合、通常であれば日付時刻値として存在できない「2003年2月31日」のような日付をコントロールに入力できます。次の表に、ValidateModeEx.Validateモードを使用した場合の各フィールドの有効な範囲を示します。</para>
        <list type="table">
          <listheader>
            <term>フィールド</term>
            <description>有効な範囲</description>
          </listheader>
          <item>
            <term>yyyy</term>
            <description>1～9999</description>
          </item>
          <item>
            <term>yy</term>
            <description>0～99</description>
          </item>
          <item>
            <term>ee</term>
            <description>1～99</description>
          </item>
          <item>
            <term>MM</term>
            <description>1～12</description>
          </item>
          <item>
            <term>dd</term>
            <description>1～31</description>
          </item>
          <item>
            <term>HH</term>
            <description>0～23</description>
          </item>
          <item>
            <term>mm</term>
            <description>0～59</description>
          </item>
          <item>
            <term>ss</term>
            <description>0～59</description>
          </item>
        </list>
        <para> このプロパティを<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx" />に設定した場合、コントロールの検証は実行されません。各フィールドは、<see cref="T:ValidateModeEx.Validate" />に設定した場合と同様に互いに無関係に動作します。たとえば、入力マスクが"yyyy.MM.dd"に設定されている場合、日付時刻値ではない「0000.00.00」をコントロールに入力できます。次の表に、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx" nolink="true" />を使用した場合の各フィールドの有効な範囲を示します。</para>
        <list type="table">
          <listheader>
            <term>フィールド</term>
            <description>有効な範囲</description>
          </listheader>
          <item>
            <term>yyyy</term>
            <description>0～9999</description>
          </item>
          <item>
            <term>yy</term>
            <description>0～99</description>
          </item>
          <item>
            <term>ee</term>
            <description>0～99</description>
          </item>
          <item>
            <term>MM</term>
            <description>0～99</description>
          </item>
          <item>
            <term>dd</term>
            <description>0～99</description>
          </item>
          <item>
            <term>HH</term>
            <description>0～99</description>
          </item>
          <item>
            <term>mm</term>
            <description>0～99</description>
          </item>
          <item>
            <term>ss</term>
            <description>0～99</description>
          </item>
        </list>
        <para> このプロパティは、コントロールにデータを入力するときにのみ有効です。フォーカスがコントロールから離れると同時に日付時刻値が検証されます。</para>
        <para> 入力時に、「2003.__.01」のような不完全なデータや「2002.02.31」のような存在しない日付時刻値が入力された場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" />プロパティはnullを返します。</para>
        <note type="cnotes"> スピン操作を実行するときは、<b>ValidateMode</b>プロパティがどのモードであっても、日付時刻値は変更されます。スピン操作の有効な範囲は、データを入力するときと同じです（上記の表を参照）。 </note>
      </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティに指定された値が有効な列挙値ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value">
      <summary>値を<b><see cref="T:System.DateTime">DateTime</see></b> 型で取得または設定します。</summary>
      <value>&gt;<see cref="T:System.Nullable`1">Nullable</see>&lt;<see cref="T:System.Date">Date</see>&gt; 値。<br /> 既定値はコンピューター上の現在の日時(<see cref="P:System.DateTime.Now" />)。</value>
      <exception cref="T:System.FormatException">値が有効な書式文字列ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">値が <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate" /> 未満であるか、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate" /> を超えています。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.AboutBox">
      <summary>バージョン情報ダイアログボックスを表示します。</summary>
      <remarks>このメソッドが呼び出された後、製品情報を含むウィンドウが表示されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.ApplyRecommendedValue">
      <summary>入力候補値をコントロールに適用します。</summary>
      <remarks>この<b>ApplyRecommendedValue</b>メソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.ShowRecommendedValue" />プロパティが<see langword="true" />の場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.RecommendedValue" />を受け入れることができます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.CreateAccessibilityInstance">
      <summary>新しいユーザー補助オブジェクトを作成します。</summary>
      <returns>新しい<see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Dispose(System.Boolean)">
      <summary>このコントロールと子コントロールが使用しているアンマネージリソースを解放します。オプションで、マネージリソースも解放します。</summary>
      <param name="disposing">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>マネージリソースとアンマネージリソースの両方を解放します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>アンマネージリソースだけを解放します。</description>
          </item>
        </list>
      </param>
      <remarks>
        <see cref="T:System.Windows.Forms.Control" />の使用が終わったら、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Dispose(System.Boolean)" />を呼び出します。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Dispose(System.Boolean)" nolink="true" />メソッドは、<see cref="T:System.Windows.Forms.Control" nolink="true" />を使用できない状態にします。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Dispose(System.Boolean)" nolink="true" />を呼び出した後で、<see cref="T:System.Windows.Forms.Control" nolink="true" />へのすべての参照を解放し、<see cref="T:System.Windows.Forms.Control" nolink="true" />によって占有されていたメモリをガベージコレクターがクリアできるようにする必要があります。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DoSpinDown(System.TimeSpan)">
      <summary>スピンダウンアクションを実行します。</summary>
      <param name="increment">増分量を示す<see cref="T:System.TimeSpan" />値。</param>
      <remarks>このメソッドの動作は［↓］キーを押した場合と同じです。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DoSpinUp(System.TimeSpan)" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DoSpinUp(System.TimeSpan)">
      <summary>スピンアップアクションを実行します。</summary>
      <param name="increment">増分量を示す<b>TimeSpan</b>値。</param>
      <remarks>このメソッドの動作は［↑］キーを押した場合と同じです。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DoSpinDown(System.TimeSpan)" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Drop">
      <summary>ドロップダウンエディットウィンドウをドロップダウン表示します。</summary>
      <remarks>
        <para>このメソッドは、データ入力を支援するためにユーザーにドロップダウンエディタを提示します。コントロールが無効であるか、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" />プロパティがfalseの場合、このメソッドの呼び出しは無視されます。</para>
        <para>ドロップダウンエディタが表示される直前に、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownOpening" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownOpened" />イベントが発生します。</para>
        <note>このメソッドは、コントロールに入力フォーカスがない場合、フォーカスを取得しようとしません。 </note>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.GetDefaultDisplayFields">
      <summary>既定の表示フィールドを取得します。</summary>
      <returns>表示用に使用されるすべてのデフォルトフィールドを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayField" />の配列。</returns>
      <remarks>派生クラスで<b>GetDefaultDisplayFields</b>メソッドを使用して、コントロールが作成されるときのデフォルト表示フィールドをカスタマイズできます。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldsBuilder.BuildFields(System.String)" />を使用すると、文字列書式に従って<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayField" />の配列を作成できます。戻り値が<see langword="null" />の場合、コントロールに表示フィールドは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.GetDefaultFields">
      <summary>既定の入力フィールドを取得します。</summary>
      <returns>入力用に使用されるすべてのデフォルトフィールドを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateField" />の配列。</returns>
      <remarks>派生クラスで<b>GetDefaultFields</b>メソッドを使用して、コントロールが作成されるときのデフォルトフィールドをカスタマイズできます。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateFieldsBuilder.BuildFields(System.String)" />を使用すると、文字列書式に従って<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateField" />の配列を作成できます。戻り値が<see langword="null" />の場合、コントロールにフィールドは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
      <returns>既定のショートカット機能を含む<b>Dictionary</b><b>&lt;</b><b>Keys, string</b><b>&gt;</b>インタフェースを実装したオブジェクト。</returns>
      <remarks>派生クラスで<b>GetDefaultShortcuts</b>メソッドを使用して、コントロールが作成されるときのデフォルトショートカットをカスタマイズできます。戻り値が<see langword="null" />の場合、コントロールにショートカットは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.GetDefaultSideButtonTypes">
      <summary>既定のサイドボタンを取得します。</summary>
      <returns>. すべてのタイプのデフォルトサイドボタンを含む <see cref="T:System.Type" /> リスト。</returns>
      <remarks>派生クラスで<b>GetDefaultSideButtonTypes</b>メソッドを使用して、コントロールが作成されるときのデフォルトサイドボタンをカスタマイズできます。戻り値が<see langword="null" />の場合、コントロールにサイドボタンは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[])">
      <summary>既定のサイドボタンを初期化します。</summary>
      <param name="defaultSideButtons">初期化する既定のサイドボタン。</param>
      <remarks>派生クラスで <b>InitializeDefaultSideButtons</b> メソッドを使用して、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.GetDefaultSideButtonTypes" /> メソッドによって作成されるデフォルトサイドボタンを初期化できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.NextField">
      <summary>次のフィールドに移動します。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。現在キャレットのあるフィールドが最後の編集可能フィールドである場合、キャレットは移動しません。キャレットが正常に移動すると、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" />イベントが発生します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.NextFieldThenControl">
      <summary>次のフィールドに移動します。ただし、キャレットが最後の編集可能フィールドにある場合は、次のコントロールに移動します。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。キャレットが正常に移動すると、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" />イベントが発生します。キャレットが別のコントロールに移動した場合は、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.KeyExit" />イベントが発生します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnDropDownClosed(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownClosed" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownClosed</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownClosed</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownClosed</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnDropDownClosing(GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownClosing" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownClosing</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownClosing</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownClosing</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnDropDownOpened(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownOpened" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownOpened</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownOpened</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownOpened</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnDropDownOpening(GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownOpening" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownOpening</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownOpening</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownOpening</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnEnter(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Enter" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnter</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEnter</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnter</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnLeave(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Leave">Leave</see> /&gt; イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnLeave</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnLeave</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnLeave</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnNumberChanged(System.EventArgs)">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Number" />プロパティの値が変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnNumberChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnNumberChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnNumberChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnTextChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.TextChanged" /> イベントを発生します。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Validating" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.ComponentModel.CancelEventArgs">CancelEventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnValidating</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnValidating</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnValidating</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.OnValueChanged(System.EventArgs)">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" />プロパティの値が変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnValueChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnValueChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnValueChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.PreviousField">
      <summary>前のフィールドに移動します。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。現在キャレットのあるフィールドが最初の編集可能フィールドである場合、キャレットは移動しません。キャレットが正常に移動すると、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" />イベントが発生します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.PreviousFieldThenControl">
      <summary>前のフィールドに移動します。ただし、キャレットが最初の編集フィールドにある場合は、前のコントロールに移動します。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。キャレットが正常に移動すると、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" />イベントが発生します。キャレットが別のコントロールに移動した場合は、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.KeyExit" />イベントが発生します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.SetNow">
      <summary>値を<see cref="P:System.DateTime.Now" />にリセットします。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />に使用されます。このメソッドは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" />プロパティの影響を受けます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.SwitchDropDown">
      <summary>ドロップダウンウィンドウの状態を切り替えます。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。ドロップダウンウィンドウが閉じている場合、このメソッドを使用するとドロップダウンウィンドウが開きます。ドロップダウンウィンドウが開いている場合、このメソッドを使用するとドロップダウンウィンドウが閉じます。このメソッドは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" />プロパティが<see langword="false" />の場合には何もしません。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownClosed">
      <summary>ドロップダウンカレンダーが閉じたときに発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがコードの実行またはユーザー操作によって閉じた場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownClosing">
      <summary>ドロップダウンカレンダーが閉じる前に発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがコードの実行またはユーザー操作によって閉じる場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownOpened">
      <summary>ドロップダウンカレンダーが開いたときに発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがコードの実行またはユーザー操作によって開いた場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownOpening">
      <summary>ドロップダウンカレンダーが開く前に発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがコードの実行またはユーザー操作によって開く場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.NumberChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Number" />プロパティの値が変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Number" /> プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.ValueChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" />プロパティの値が変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" /> プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType">
      <summary>
        <b>GcDateTimeCellType</b> クラスを表します。</summary>
      <remarks>GcDateTimeCell を使用すると、機能的な日時入力インタフェースを迅速かつ効率的に設計できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.AcceptsCrLf">
      <summary>文字列をコピー、切り取り、および貼り付けるときの CrLf 文字の処理方法を示す値を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときの CrLf 文字の処理モードを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 列挙体。<br />既定値は <b>CrLfMode.NoControl</b> です。</value>
      <remarks>
        <b>CrLf.Cut</b> に設定すると、<b>GcDateTime</b> で文字列をコピー、切り取り、および貼り付けるときに標準の <b>TextBox</b> と同じように動作します。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.AlternateText">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> オブジェクトの代替テキストを取得します。</summary>
      <value>代替テキストを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateAlternateText" /> 値。</value>
      <remarks>このプロパティを設定すると、編集モードおよび表示モードにおいてコントロールの値が範囲外の年号または <b>null</b> のときに、設定したテキストが代わりに表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.ClearCollection">
      <summary>デザイナによる内部使用。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.DefaultActiveField">
      <summary>セルのデフォルトアクティブフィールドを取得または設定します。</summary>
      <value>デフォルトアクティブフィールドを示す <see cref="T:GrapeCity.Win.Views.Field" /> 値。</value>
      <remarks>セルが編集モードになると、デフォルトアクティブフィールドがフォーカスを取得し、その先頭にキャレットが配置されます。</remarks>
      <exception cref="T:System.ArgumentException">値が <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField" /> ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.DisplayFields">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> オブジェクトの表示フィールドを取得します。</summary>
      <value>表示フィールドのコレクションを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateDisplayFieldCollection" /> オブジェクト。</value>
      <remarks>このプロパティは、入力フォーカスがないときのこのコントロールの <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" /> の表示および編集方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.DropDown">
      <summary>ドロップダウン機能のドロップダウン設定を取得します。</summary>
      <value>ドロップダウン機能のドロップダウン設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDown" />インスタンス。</value>
      <remarks>この <b>DropDown</b> プロパティを設定することで、ドロップダウンの動作とウィンドウの外観をカスタマイズできます。このプロパティは、ドロップダウンを表示するかどうか、ドロップダウンをサイズ変更可能にするかどうか、ドロップダウンウィンドウの方向、ドロップダウンウィンドウの影、および開閉時のアニメーションを指定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.DropDownCalendar">
      <summary>ドロップダウンカレンダーの設定を取得します。</summary>
      <value>ドロップダウンカレンダーの設定を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownCalendar" />インスタンス。</value>
      <remarks>この <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownCalendar" /> プロパティを設定することで、ドロップダウンカレンダーコントロールをカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.DropDownPicker">
      <summary>ドロップダウンピッカーの設定を取得します。</summary>
      <value>ドロップダウンピッカーの設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateTimeDropDownPicker" />インスタンス。</value>
      <remarks>この<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.DropDownPicker" />プロパティを設定することで、ドロップダウンピッカーコントロールをカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.ExcelExportFormat">
      <summary>Excel エクスポート書式を取得または設定します。</summary>
      <value>Excel エクスポート書式。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.Fields">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> オブジェクトの項目を表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateFieldCollection" />。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> の項目を表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateFieldCollection" />。</value>
      <remarks>このプロパティは、このコントロールの <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" /> の表示および編集方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.FieldsEditMode">
      <summary>フィールド編集モードを取得または設定します。</summary>
      <value>フィールド編集モードを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.FieldsEditMode" /> 列挙値。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellTypeEditMode.LeftSide" /> です。</value>
      <remarks>
        <b>FieldsEditMode</b> プロパティは、ユーザーがデータを入力するときのフィールドの編集方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.FocusPosition">
      <summary>エディタがフォーカスを取得したときの初期カーソル位置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.MaxDate">
      <summary>スピン設定を使用してコントロールのフィールドまたは値を変更するときの許容される最大値を取得または設定します。</summary>
      <value>許容される最大値を示す <see cref="T:System.DateTime" /> 値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">値が <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate" /> 未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.MaxMinBehavior">
      <summary>新しい入力値が <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate" /> から <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate" /> までの範囲から外れているときの動作を取得または設定します。</summary>
      <value>新しい入力値が <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MinDate" /> から <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate" /> までの範囲から外れているときの動作を示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxMinBehavior" /> 列挙値。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.AdjustToMaxMin" /> です。</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxMinBehavior" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.MinDate">
      <summary>スピン設定を使用してコントロールのフィールドまたは値を変更するときの許容される最小値を取得または設定します。</summary>
      <value>許容される最小値を示す <see cref="T:System.DateTime" /> 値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">値が <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.MaxDate" /> を超えています。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.PaintByControl">
      <summary>セルの描画方法を示す値を取得または設定します。true の場合、内部コントロールの描画を使用してセルが描画されます。この場合、セルは編集コントロールとまったく同じように描画されます。セルのすべての設定（スタイルの異なるフィールドなど）がセルの描画時に有効になります。文字列を直接描画するのではなくコントロールによって描画する場合、セルの描画パフォーマンスは遅くなります。また、PDF にエクスポートしたときにセルのテキストは選択できません。false の場合、パフォーマンスは良好ですが、一部の設定が無効になります。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>エディタのデフォルト値を示す <see cref="T:System.DateTime" /> 値。</value>
      <remarks>
        <b>RecommendedValue</b>プロパティはユーザーへのヒントを提供するもので、値が完全に入力されていないときに表示されます。値の入力中に特定のショートカットキーまたはキーの組み合わせを押すと、入力候補値を取得できます。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.SerializationDefaultActiveFieldIndex">
      <summary>シリアル化のために内部で使用。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを示す値を取得または設定します。</summary>
      <value>入力候補値を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>
        <b>ShowRecommendedValue</b> が <see langword="true" /> の場合、値が完全に入力されていないときに <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.RecommendedValue" /> プロパティの値が表示されます。それ以外の場合、<b>RecommendedValue</b> プロパティの値は表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.SideButtons">
      <summary>コントロールに設定されているサイドボタンのコレクションを取得します。</summary>
      <value>コレクションを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> 値。</value>
      <remarks>
        <b>SideButtons</b>は追加または削除できます。これには<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.Spin">
      <summary>スピン機能の設定を取得します。</summary>
      <value>スピン機能の設定を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpin" /> 値。</value>
      <remarks>この<b>Spin</b> プロパティを設定することで、スピン動作をカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.ValidateMode">
      <summary>コントロールの入力中の検証モードを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx" /> 列挙値の１つ。既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateEx" /> です。</value>
      <remarks>
        <para>
          <b>ValidateMode</b>プロパティを<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateEx" />に設定すると、厳格な検証が実行され、うるう年や存在しない日付値などがチェックされます。また、ユーザーがデータを入力するときに文字のフィルタリングとフィールドの調整が自動的に行われます。たとえば、うるう年の例では、入力マスクが"yyyy.MM.dd"に設定されている場合、ユーザーは2003年2月29日を入力できません。入力マスクが"dd.MM.yyyy"に設定されている場合は、2003年2月29日を入力しようとすると、年の最後の「3」を入力すると同時に29日が28日に自動的に調整されます。</para>
        <para>このプロパティをValidateModeEx.Validateに設定すると、簡易的な検証が実行されます。この場合、各フィールドは個別に動作し、フィールド間の関連性は無視されます。たとえば、入力マスクが"yyyy.MM.dd"に設定されている場合、通常であれば日付時刻値として存在しない「2003年2月31日」のような日付をコントロールに入力できます。次の表に、ValidateModeEx.Validateを使用した場合の各フィールドの有効な範囲を示します。</para>
        <list type="table">
          <listheader>
            <term>フィールド</term>
            <description>有効な範囲</description>
          </listheader>
          <item>
            <term>yyyy</term>
            <description>1～9999</description>
          </item>
          <item>
            <term>yy</term>
            <description>0～99</description>
          </item>
          <item>
            <term>ee</term>
            <description>1～99</description>
          </item>
          <item>
            <term>MM</term>
            <description>1～12</description>
          </item>
          <item>
            <term>dd</term>
            <description>1～31</description>
          </item>
          <item>
            <term>HH</term>
            <description>0～23</description>
          </item>
          <item>
            <term>mm</term>
            <description>0～59</description>
          </item>
          <item>
            <term>ss</term>
            <description>0～59</description>
          </item>
        </list>
        <para>このプロパティを<see cref="T:ValidateModeEx" />に設定した場合、コントロールの検証は実行されません。各フィールドは、<see cref="T:ValidateModeEx.Validate" />に設定した場合と同様に互いに無関係に動作します。たとえば、入力マスクが"yyyy.MM.dd"に設定されている場合、日付時刻値ではない「0000.00.00」をコントロールに入力できます。次の表に、<see cref="T:ValidateModeEx" nolink="true" />を使用した場合の各フィールドの有効な範囲を示します。</para>
        <list type="table">
          <listheader>
            <term>フィールド</term>
            <description>有効な範囲</description>
          </listheader>
          <item>
            <term>yyyy</term>
            <description>0～9999</description>
          </item>
          <item>
            <term>yy</term>
            <description>0～99</description>
          </item>
          <item>
            <term>ee</term>
            <description>0～99</description>
          </item>
          <item>
            <term>MM</term>
            <description>0～99</description>
          </item>
          <item>
            <term>dd</term>
            <description>0～99</description>
          </item>
          <item>
            <term>HH</term>
            <description>0～99</description>
          </item>
          <item>
            <term>mm</term>
            <description>0～99</description>
          </item>
          <item>
            <term>ss</term>
            <description>0～99</description>
          </item>
        </list>
        <para>このプロパティは、コントロール内にデータを入力するときにのみ有効です。フォーカスがコントロールから離れると同時に日付時刻値が検証されます。</para>
        <para>入力時に、「2003.__.01」のような不完全なデータや「2002.02.31」のような存在しない日付時刻値が入力された場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value" />プロパティはnullを返します。</para>
        <note type="cnotes">スピン操作を実行するときは、<b>ValidateMode</b>プロパティがどのモードであっても、日付時刻値は変更されます。スピン操作の有効な範囲は、データを入力するときと同じです（上記の表を参照）。 </note>
      </remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティに指定された値が有効な列挙値ではありません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.Clone">
      <summary>基本セルを作成して返します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.Format(System.Object)">
      <summary>指定したデータをセル型の書式に書式設定し、それを文字列として返します。</summary>
      <param name="obj">書式設定するセルデータを含む、データモデル内のオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.FormatToClipboard(System.Object)">
      <summary>クリップボードに書式設定します。</summary>
      <param name="obj">オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetDefaultDisplayFields">
      <summary>既定の表示フィールドを取得します。</summary>
      <returns>表示用のすべてのデフォルトフィールドを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo" /> の配列。</returns>
      <remarks>派生クラスで <b>GetDefaultDisplayFields</b> メソッドを使用して、セルが作成されるときのデフォルト表示フィールドをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルに表示フィールドは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetDefaultFields">
      <summary>既定の入力フィールドを取得します。</summary>
      <returns>すべてのデフォルト入力フィールドを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateField" /> の配列。</returns>
      <remarks>派生クラスで <b>GetDefaultFields</b> メソッドを使用して、コントロールが作成されるときのデフォルトフィールドをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルにフィールドは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
      <returns>すべてのデフォルトショートカットを含むディクショナリー。</returns>
      <remarks>派生クラスで <b>GetDefaultShortcuts</b> メソッドを使用して、セルが作成されるときのデフォルトショートカットをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルにショートカットは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetDefaultSideButtonTypes">
      <summary>既定のサイドボタンを取得します。</summary>
      <returns>. すべてのタイプのデフォルトサイドボタンを含む <see cref="T:System.Type" /> リスト。</returns>
      <remarks>派生クラスで <b>GetDefaultSideButtonTypes</b> メソッドを使用して、セルが作成されるときのデフォルトサイドボタンをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルにサイドボタンは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetDisplayText(System.Object)">
      <summary>表示テキストを取得します。</summary>
      <param name="value">セル値。</param>
      <returns>表示テキスト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>外観と倍率を指定してこのセル型の編集コントロールを取得します。</summary>
      <param name="appearance">セルの外観設定。</param>
      <param name="zoomFactor">セルの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetEditorValue">
      <summary>編集コントロール内の書式なしの値を取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に対して、ターゲットオブジェクトのシリアル化に必要なデータを設定します。</summary>
      <param name="info">データを設定する <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">このシリアル化のシリアル化（<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照）。</param>
      <exception cref="T:System.Security.SecurityException">呼び出し元に必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>レンダラーコントロールのためにセルの優先サイズ（必要な最大サイズ）を取得します。</summary>
      <param name="g">セルを描画するためのグラフィックデバイスインタフェース。</param>
      <param name="size">優先サイズまたは必要な最大サイズ。</param>
      <param name="appearance">レンダラーコントロールの外観設定。</param>
      <param name="value">レンダラーコントロールの名前を含むオブジェクト。</param>
      <param name="zoomFactor">レンダラーコントロールの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>エディタコントロールのためにセルの優先サイズ（必要な最大サイズ）を取得します。</summary>
      <param name="editor">エディタコントロールの名前。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo[])">
      <summary>既定のサイドボタンを初期化します。</summary>
      <param name="defaultSideButtons">初期化する既定のサイドボタン。</param>
      <remarks>派生クラスで <b>InitializeDefaultSideButtons</b> メソッドを使用して、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.GetDefaultSideButtonTypes" /> メソッドによって作成されるデフォルトサイドボタンを初期化できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>エディタコントロールを初期化します。</summary>
      <param name="control">設定対象となるコントロールを表す<b><see cref="T:System.Windows.Forms.Control">Control</see></b>オブジェクト。</param>
      <param name="appearance">外観。</param>
      <param name="zoomFactor">倍率。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>指定したコントロールが再利用できるかどうかを判断します。</summary>
      <param name="control">設定対象となるコントロールを表す<b><see cref="T:System.Windows.Forms.Control">Control</see></b>オブジェクト。</param>
      <returns>指定したコントロールが再利用できる場合は <c>true</c>。それ以外の場合は <c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.IsValid(System.Object)">
      <summary>指定した値が有効かどうかを判断します。</summary>
      <param name="value">検証する値（オブジェクトとして）。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.Parse(System.String)">
      <summary>指定した文字列をセル型のデータ型に解析し、それをオブジェクトとして返します。</summary>
      <param name="s">解析するシート上のセルの文字列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.SetEditorValue(System.Object)">
      <summary>編集コントロールの値を設定します。</summary>
      <param name="value">エディタコントロールの（オブジェクトとしての）値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.ShowSubEditor">
      <summary>セルに関連付けられたサブエディタコントロールを表示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>セルの編集を開始します。</summary>
      <param name="e">イベント。</param>
      <param name="selectAll">すべてのセルデータを選択するかどうか。</param>
      <param name="autoClipboard">クリップボードアクションのショートカットキーを許可するかどうか。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType.StopEditing">
      <summary>セルの編集を終了します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl">
      <summary>GcDateTimeCellType の編集コントロール。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.Font">
      <summary>コントロールによって表示されるテキストのフォントを取得または設定します。</summary>
      <value>コントロールによって表示されるテキストに適用する<see cref="T:System.Drawing.Font" />。 既定値は<see cref="P:System.Windows.Forms.Control.DefaultFont" /> プロパティの値です。</value>
      <remarks>
        <para>
          <b>Font</b>プロパティはアンビエントプロパティです。アンビエントプロパティとは、明示的に設定しない場合に親コントロールから取得されるコントロールプロパティです。たとえば<see cref="T:System.Windows.Forms.Button" />は、デフォルトでは親の<see cref="T:System.Windows.Forms.Form" />と同じ<see cref="P:System.Windows.Forms.Control.BackColor" />を持ちます。アンビエントプロパティの詳細については、<see cref="T:System.Windows.Forms.AmbientProperties" />クラスまたは<see cref="T:System.Windows.Forms.Control" />クラスの概要を参照してください。</para>
        <para />
        <para>
          <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.SubEditor">
      <summary>セルのサブエディタを取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>指定されているキーが、コントロールに認識される入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</summary>
      <param name="keyData">キーを表す<b><see cref="T:System.Windows.Forms.Keys">Keys</see></b>値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定されたキーは入力キーです。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定されたキーは入力キーではありません。</description>
          </item>
        </list>
      </returns>
      <remarks>
        <b>IsInputKey</b>メソッドを呼び出すと、keyDataパラメーターで指定したキーが、コントロールに必要な入力キーかどうかを判断できます。このメソッドは、ウィンドウメッセージのプリプロセス中に呼び出され、指定された入力キーを前処理するか、直接コントロールに送信するかを決定します。<b>IsInputKey</b>が<see langword="true" />を返す場合、指定されたキーはコントロールに直接送信されます。<b>IsInputKey</b>が<see langword="false" />を返す場合、キーは前処理され、プリプロセス中にキーに対する処理が終了されなかった場合だけ、コントロールに送信されます。前処理されるキーには、［Tab］、［Enter］、［Esc］、［↑］、［↓］、［←］、［→］が含まれます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>KeyExit イベントを使用してフォーカスを移動します。</summary>
      <param name="e">イベントデータを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> インスタンス。</param>
      <remarks>
        <b>ExitKeys.CharInput</b>、<b>ExitKeys.CtrlRight</b>、<b>ExitKeys.NextControl</b>、<b>ExitKeys.Right</b>、および<b>ExitKeys.Tab</b>は、フォーカスを前方に移動します。その他の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" />は、フォーカスを後方に移動します。<note>このメソッドを継承クラスでオーバーライドする場合は、基本メソッドを呼び出す必要があります。そうしなければ、フォーカスは移動しません。 </note></remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.NextCell">
      <summary>次のセルに移動します。ショートカットアクションを使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.NextFieldThenCell">
      <summary>次のフィールドに移動してからセルに移動します。ショートカットアクションを使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnAfterFocus(System.EventArgs)">
      <summary>AfterFocusイベントを発生させます。</summary>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnDropDownClosed(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownClosed" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownClosed</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownClosed</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownClosed</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnDropDownOpening(GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.DropDownOpening" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownOpening</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownOpening</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownOpening</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnEnter(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Enter" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnter</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEnter</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnter</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnGotFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.GotFocus" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnGotFocus</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnGotFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnGotFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnInvalidInput(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnInvalidInput</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnInvalidInput</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnInvalidInput</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the KeyDown event.</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>KeyPress イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.OnParentChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.ParentChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.PreviousCell">
      <summary>前のセルに移動します。ショートカットアクションを使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.PreviousFieldThenCell">
      <summary>前のフィールドに移動してからセルに移動します。ショートカットアクションを使用します。</summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeEditingControl.AfterFocus">
      <summary>コントロールがフォーカスを取得した後に発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcMask">
      <summary>
        <b>GcMask</b>コントロールを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMask" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.#ctor(System.ComponentModel.IContainer)">
      <summary>コンテナータイプパラメーターを指定して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMask" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="container">コントロールが配置されるコンテナを表す<b><see cref="T:System.ComponentModel.IContainer">IContainer</see></b>オブジェクト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.AcceptsCrLf">
      <summary>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理方法を示す値を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理モードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" />列挙体。<br />デフォルト値は<b>CrLfMode.NoControl</b>です。</value>
      <remarks>
        <b>CrLf.Cut</b>に設定すると、<b>GcMask</b>で文字列をコピー、切り取り、および貼り付けるときの動作が標準の<b>TextBox</b>と同じになります。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.AcceptsTabChar">
      <summary>文字列をコピー、切り取り、および貼り付けるときのタブ文字の処理方法を示す値を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときのタブ文字の処理モードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" />列挙体。<br />デフォルト値は<b>TabCharMode.NoControl</b>です。</value>
      <remarks>
        <b>TabCharMode.Cut</b>に設定すると、<b>GcMask</b>で文字列をコピー、切り取り、および貼り付けるときの動作が標準の<b>TextBox</b>と同じになります。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b>が有効な<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" />項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.ActiveField">
      <summary>アクティブフィールドを取得します。</summary>
      <value>アクティブなフィールドを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskField" />値。</value>
      <remarks>このプロパティは、アクティブなフィールドを示します。これは、コントロールに入力フォーカスがあるときにキャレットがそのフィールド内にあることを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.AlternateText">
      <summary>代替テキストの設定を示す値を取得します。</summary>
      <value>代替テキストの設定を示す<b>MaskAlternateText</b>値。</value>
      <remarks>このプロパティは、コントロールの値が<see cref="F:System.String.Empty" />で、入力フォーカスがあるときまたはないときのテキストとその色を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.AutoConvert">
      <summary>入力された文字列を入力コントロールに従って自動的に変換するかどうかを取得または設定します。</summary>
      <value>入力コントロールに従って文字が自動的に変換される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
      <remarks>
        <b>AutoConvert</b>プロパティを<see langword="true" />に設定すると、変換可能なすべての文字が入力マスクに従って自動的に変換されます。たとえば、入力マスクを"A"に設定した場合、小文字を入力すると自動的に大文字に変換されます。<para />全角文字入力マスクに半角文字を入力した場合、入力した文字は自動的に全角に変換されます。また、コントロールで半角文字のみが許可されている場合には、全角のスペースは自動的に半角のスペースに変換されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.DefaultActiveField">
      <summary>デフォルトのアクティブフィールドを取得または設定します。</summary>
      <value>デフォルトのアクティブフィールドを示す<see cref="T:GrapeCity.Win.Views.Field" />値。<br /> デフォルト値は<see langword="null" />です。</value>
      <remarks>コントロールがフォーカスを取得すると、デフォルトのアクティブフィールドがフォーカスを受け取り、先頭にキャレットが配置されます。</remarks>
      <exception cref="T:System.ArithmeticException">指定されたフィールドがFieldCollectionに存在しません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Fields">
      <summary>
        <see cref="T:MaskFieldCollection" />のフィールドを取得します。</summary>
      <value>
        <see cref="T:GcMask" />の項目を表す<see cref="T:FieldCollection" />。</value>
      <remarks>このプロパティは、このコントロールの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Value" />の表示方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.PasswordRevelationMode">
      <summary>パスワード可視化モードを取得または設定します。</summary>
      <value>パスワード可視化モードを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.PasswordRevelationMode" />値の1つ。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode.None">None</see>で、入力したパスワードが可視化されないことを示します。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.PreferredHeight">
      <summary>コントロールに最適な高さを取得します。</summary>
      <value>コントロールの最適な高さを示す<b>int</b>値。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Win.Forms.Control.PreferredSize" />プロパティの高さと同じです。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>入力候補値を示す<see cref="T:System.String" />値。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>
        <b>RecommendedValue</b>プロパティは、値が完全に入力されていないときにユーザーに提示されるヒントを提供します。値の入力中に特定のショートカットキーまたはキーの組み合わせを押すと、入力候補値を取得できます。</remarks>
      <exception cref="T:System.ArgumentException">現在のパターンと一致しない無効な値が<b>RecommendedValue</b>プロパティに設定されるときに発生します。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.ShowRecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを示す値を取得または設定します。</summary>
      <value>入力候補値を表示する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>この<b>ShowRecommendedValue</b>が<see langword="true" />の場合、値が完全に入力されていないときに<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.RecommendedValue" />プロパティの値が表示されます。それ以外の場合、<b>RecommendedValue</b>プロパティの値は表示されません。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.RecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.SideButtons">
      <summary>コントロールに設定されているサイドボタンのコレクションを取得します。</summary>
      <value>コレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" />。</value>
      <remarks>
        <b>SideButtons</b>にはいくつかのコマンドボタンを追加または削除できます。これには、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Spin">
      <summary>スピン機能のデータパッケージを取得します。</summary>
      <value>スピン動作を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Spin" />オブジェクト。</value>
      <remarks>この<b>Spin</b> プロパティを設定することで、スピン動作をカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Text">
      <summary>コントロールの現在のテキストを取得または設定します。</summary>
      <value>
        <value />
      </value>
      <remarks>Textプロパティが変更されると、その変更は<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Value" />プロパティと<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Fields" />プロパティにも反映されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Value">
      <summary>コントロールに割り当てられた基になる値を取得または設定します。</summary>
      <value>マスクコントロールの値を示す<see cref="T:System.String" />値。</value>
      <remarks>これは、フィールド内のすべての文字からリテラルを除いた文字列です。このコントロールにどのようなフィールドがあるかにかかわらず、この<b>Value</b>は常に同じです。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.AboutBox">
      <summary>バージョン情報ダイアログボックスを表示します。</summary>
      <remarks>このメソッドが呼び出された後、製品情報を含むウィンドウが表示されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.ApplyRecommendedValue">
      <summary>入力候補値をコントロールに適用します。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />のために使用されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.CreateAccessibilityInstance">
      <summary>新しいユーザー補助オブジェクトを作成します。</summary>
      <returns>新しい<see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Dispose(System.Boolean)">
      <summary>このコントロールと子コントロールが使用しているアンマネージリソースを解放します。オプションで、マネージリソースも解放します。</summary>
      <param name="disposing">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>マネージリソースとアンマネージリソースの両方を解放します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>アンマネージリソースだけを解放します。</description>
          </item>
        </list>
      </param>
      <remarks>
        <see cref="T:System.Windows.Forms.Control" />の使用が終わったら、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Dispose(System.Boolean)" />を呼び出します。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Dispose(System.Boolean)" nolink="true" />メソッドは、<see cref="T:System.Windows.Forms.Control" nolink="true" />を使用できない状態にします。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Dispose(System.Boolean)" nolink="true" />を呼び出した後で、<see cref="T:System.Windows.Forms.Control" nolink="true" />へのすべての参照を解放し、<see cref="T:System.Windows.Forms.Control" nolink="true" />によって占有されていたメモリをガベージコレクターがクリアできるようにする必要があります。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.GetDefaultFields">
      <summary>既定の入力フィールドを取得します。</summary>
      <returns>入力用のすべてのデフォルトフィールドを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskField" />の配列。</returns>
      <remarks>派生クラスで<b>GetDefaultFields</b>メソッドを使用して、コントロールが作成されるときのデフォルトフィールドをカスタマイズできます。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldsBuilder.BuildFields(System.String)" />を使用すると、文字列書式に従って<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskField" />の配列を作成できます。このメソッドが<see langword="null" />を返す場合、コントロールにフィールドは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
      <returns>既定のショートカット機能を含む<b>Dictionary</b><b>&lt;</b><b>Keys, string</b><b>&gt;</b>インタフェースを実装したオブジェクト。</returns>
      <remarks>
        <b>GetDefaultShortcuts</b> メソッドはコントロールが作成されるときに派生クラスに対して既定のショートカット機能の設定を行います。<see langword="null" />を設定した場合には、ショートカット機能は何も設定されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.GetDefaultSideButtonTypes">
      <summary>既定のサイドボタンを取得します。</summary>
      <returns>すべてのタイプのデフォルトサイドボタンを含む<see cref="T:System.Type" />リスト。</returns>
      <remarks>派生クラスで<b>GetDefaultSideButtonTypes</b>メソッドを使用して、コントロールが作成されるときのデフォルトサイドボタンをカスタマイズできます。このメソッドが<see langword="null" />を返す場合、コントロールにサイドボタンは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[])">
      <summary>既定のサイドボタンを初期化します。</summary>
      <param name="defaultSideButtons">初期化する既定のサイドボタン。</param>
      <remarks>派生クラスで<b>InitializeDefaultSideButtons</b>メソッドを使用して、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.GetDefaultSideButtonTypes" />メソッドによって作成されるデフォルトサイドボタンを初期化できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.NextField">
      <summary>現在のフィールドの右にある次のフィールドにキャレットを移動します。</summary>
      <remarks>現在キャレットのあるフィールドが最後の編集可能フィールドである場合、キャレットは移動しません。キャレットが正常に移動すると、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.FieldLeave" />イベントが発生します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.NextFieldThenControl">
      <summary>キャレットを次のフィールドに移動します。ただし、キャレットが最後の編集可能フィールドにある場合は、タブオーダーの次のコントロールに移動します。</summary>
      <remarks>キャレットが正常に移動すると、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.FieldEnter" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.FieldLeave" />イベントが発生します。キャレットが他のコントロールに移動した場合は、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.KeyExit" />イベントが発生します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.OnValueChanged(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.ValueChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<b>OnValueChanged</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<note> 派生クラスで<b>OnValueChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnValueChanged</b>メソッドを呼び出してください。 </note></remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.PreviousField">
      <summary>現在のフィールドの左にある前のフィールドにキャレットを移動します。</summary>
      <remarks>現在キャレットのあるフィールドが最初の編集可能フィールドである場合、キャレットは移動しません。キャレットが正常に移動すると、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" />イベントが発生します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMask.PreviousFieldThenControl">
      <summary>キャレットを前のフィールドに移動します。ただし、キャレットが最初の編集可能フィールドにある場合は、タブオーダーの前のコントロールに移動します。</summary>
      <remarks>キャレットが正常に移動すると、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.FieldLeave" />イベントが発生します。キャレットが他のコントロールに移動した場合は、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.KeyExit" />イベントが発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcMask.ValueChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Value" />プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.Value" />プロパティがコードの実行またはユーザー操作によって変更された場合に発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType">
      <summary>
        <b>GcMaskCellType</b>クラスを表します。</summary>
      <remarks>GcMaskCellTypeは正および負の数値の入力機能を備えており、機能的な数値入力インタフェースを迅速かつ効率的に設計するのに役立ちます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.AcceptsCrLf">
      <summary>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理方法を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理モードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" />列挙体。<br />デフォルト値は<b>CrLfMode.NoControl</b>です。</value>
      <remarks>
        <b>CrLf.Cut</b>に設定すると、<b>GcMask</b>で文字列をコピー、切り取り、または貼り付けるときの動作が標準の<b>TextBox</b>と同じになります。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.AcceptsTabChar">
      <summary>文字列をコピー、切り取り、および貼り付けるときのTab文字の処理方法を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときのTab文字の処理モードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" />列挙体。<br />デフォルト値は<b>TabCharMode.NoControl</b>です。</value>
      <remarks>
        <b>TabCharMode.Cut</b>に設定すると、<b>GcMask</b>で文字列をコピー、切り取り、または貼り付けるときの動作が標準の<b>TextBox</b>と同じになります。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b>が有効な<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" />項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.AlternateText">
      <summary>代替テキストの設定を示す値を取得します。</summary>
      <value>代替テキストの設定を示す<b>MaskAlternateText</b>値。</value>
      <remarks>このプロパティは、コントロールの値が<see cref="F:System.String.Empty" />のときのテキストとその色を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.AutoConvert">
      <summary>入力された文字列を入力コントロールに従って自動的に変換するかどうかを取得または設定します。</summary>
      <value>入力コントロールに従って文字が自動的に変換される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
      <remarks>
        <b>AutoConvert</b>プロパティを<see langword="true" />に設定すると、変換可能なすべての文字が入力マスクに従って自動的に変換されます。たとえば、入力マスクを"A"に設定した場合、小文字を入力すると自動的に大文字に変換されます。<para />全角文字入力マスクに半角文字を入力した場合、入力した文字は自動的に全角に変換されます。また、コントロールで半角文字のみが許可されている場合には、全角のスペースは自動的に半角のスペースに変換されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.ClearCollection">
      <summary>デザイナによる内部使用。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.DefaultActiveField">
      <summary>デフォルトのアクティブフィールドを取得または設定します。</summary>
      <value>デフォルトのアクティブフィールドを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />値。<br /> デフォルト値は<see langword="null" />です。</value>
      <remarks>コントロールがフォーカスを取得すると、デフォルトのアクティブフィールドがフォーカスを受け取り、先頭にキャレットが配置されます。</remarks>
      <exception cref="T:System.ArithmeticException">指定されたフィールドがFieldCollectionに存在しません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.ExcelExportFormat">
      <summary>Excel エクスポート書式を取得または設定します。</summary>
      <value>Excel エクスポート書式。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Fields">
      <summary>
        <see cref="T:MaskFieldCollection" />のフィールドを取得します。</summary>
      <value>
        <see cref="T:GcMask" />の項目を表す<see cref="T:FieldCollection" />。</value>
      <remarks>このプロパティは、このコントロールの<see cref="N:GrapeCity.Win.Value" />の表示方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.FocusPosition">
      <summary>エディタがフォーカスを取得したときの初期カーソル位置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.PaintByControl">
      <summary>セルの描画方法を示す値を取得または設定します。true の場合、内部コントロールの描画を使用してセルが描画されます。この場合、セルは編集コントロールとまったく同じように描画されます。セルのすべての設定（スタイルの異なるフィールドなど）がセルの描画時に有効になります。文字列を直接描画するのではなくコントロールによって描画する場合、セルの描画パフォーマンスは遅くなります。また、PDF にエクスポートしたときにセルのテキストは選択できません。false の場合、パフォーマンスは良好ですが、一部の設定が無効になります。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.PasswordRevelationMode">
      <summary>パスワード可視化モードを取得または設定します。</summary>
      <value>パスワード可視化モードを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.PasswordRevelationMode" />値の1つ。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode.None">None</see>で、入力したパスワードが可視化されないことを示します。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>入力候補値を示す<see cref="T:System.String" />値。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>
        <b>RecommendedValue</b>プロパティはユーザーへのヒントを提供するもので、値が完全に入力されていないときに表示されます。値の入力中に特定のショートカットキーまたはキーの組み合わせを押すと、入力候補値を取得できます。</remarks>
      <exception cref="T:System.ArgumentException">現在のパターンと一致しない無効な値が<b>RecommendedValue</b>プロパティに設定されたときに発生します。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMask.ShowRecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.SerializationDefaultActiveFieldIndex">
      <summary>シリアル化のために内部で使用。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを取得または設定します。</summary>
      <value>入力候補値を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>
        <b>ShowRecommendedValue</b>が<see langword="true" />の場合、値が完全に入力されていないときに<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.RecommendedValue" />プロパティの値が表示されます。それ以外の場合、<b>RecommendedValue</b>プロパティの値は表示されません。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.RecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.SideButtons">
      <summary>コントロールに設定されているサイドボタンのコレクションを取得します。</summary>
      <value>コレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" />。</value>
      <remarks>
        <b>SideButtons</b>にはいくつかの種類のサイドボタンを追加または削除できます。これには<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Spin">
      <summary>スピン機能の情報を取得します。</summary>
      <value>スピン動作を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Spin" />オブジェクト。</value>
      <remarks>この<b>Spin</b>プロパティを設定することで、スピン動作をカスタマイズできます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Clone">
      <summary>基本セルを作成して返します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Format(System.Object)">
      <summary>指定したデータをセル型の書式に書式設定し、それを文字列として返します。</summary>
      <param name="obj">書式設定するセルデータを含む、データモデル内のオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.FormatToClipboard(System.Object)">
      <summary>クリップボードに書式設定します。</summary>
      <param name="obj">オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetDefaultMaskFields">
      <summary>既定の表示フィールドを取得します。</summary>
      <returns>表示用のすべてのデフォルトフィールドを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo" />の配列。</returns>
      <remarks>派生クラスで<b>GetDefaultMaskFields</b>メソッドを使用して、セルが作成されるときのデフォルト表示フィールドをカスタマイズできます。このメソッドが<see langword="null" />を返す場合、セルに表示フィールドは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
      <returns>すべてのデフォルトショートカットを含むディクショナリー。</returns>
      <remarks>派生クラスで <b>GetDefaultShortcuts</b> メソッドを使用して、セルが作成されるときのデフォルトショートカットをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルにショートカットは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetDefaultSideButtonTypes">
      <summary>既定のサイドボタンを取得します。</summary>
      <returns>. すべてのタイプのデフォルトサイドボタンを含む <see cref="T:System.Type" /> リスト。</returns>
      <remarks>派生クラスで <b>GetDefaultSideButtonTypes</b> メソッドを使用して、セルが作成されるときのデフォルトサイドボタンをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルにサイドボタンは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetDisplayText(System.Object)">
      <summary>表示テキストを取得します。</summary>
      <param name="value">セル値。</param>
      <returns>表示テキスト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>外観と倍率を指定してこのセル型の編集コントロールを取得します。</summary>
      <param name="appearance">セルの外観設定。</param>
      <param name="zoomFactor">セルの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetEditorValue">
      <summary>編集コントロール内の書式なしの値を取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetHorizontalAlignment(System.Object)">
      <summary>水平方向の配置を値に基づいて取得します。</summary>
      <param name="value">水平方向の配置を示す値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />オブジェクトに対して、ターゲットオブジェクトのシリアル化に必要なデータを設定します。</summary>
      <param name="info">データを設定する <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">このシリアル化のシリアル化（<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照）。</param>
      <exception cref="T:System.Security.SecurityException">呼び出し元に必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>レンダラーコントロールのためにセルの優先サイズ（必要な最大サイズ）を取得します。</summary>
      <param name="g">セルを描画するためのグラフィックデバイスインタフェース。</param>
      <param name="size">優先サイズまたは必要な最大サイズ。</param>
      <param name="appearance">レンダラーコントロールの外観設定。</param>
      <param name="value">レンダラーコントロールの名前を含むオブジェクト。</param>
      <param name="zoomFactor">レンダラーコントロールの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>エディタコントロールのためにセルの優先サイズ（必要な最大サイズ）を取得します。</summary>
      <param name="editor">エディタコントロールの名前。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetVerticalAlignment(System.Object)">
      <summary>垂直方向の配置を値に基づいて取得します。</summary>
      <param name="value">垂直方向の配置を示す値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo[])">
      <summary>既定のサイドボタンを初期化します。</summary>
      <param name="defaultSideButtons">初期化する既定のサイドボタン。</param>
      <remarks>派生クラスで<b>InitializeDefaultSideButtons</b>メソッドを使用して、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.GetDefaultSideButtonTypes" />メソッドによって作成されるデフォルトサイドボタンを初期化できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>エディタコントロールを初期化します。</summary>
      <param name="control">設定対象となるコントロールを表す<b><see cref="T:System.Windows.Forms.Control">Control</see></b>オブジェクト。</param>
      <param name="appearance">外観。</param>
      <param name="zoomFactor">倍率。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>指定したコントロールが再利用できるかどうかを判断します。</summary>
      <param name="control">設定対象となるコントロールを表す<b><see cref="T:System.Windows.Forms.Control">Control</see></b>オブジェクト。</param>
      <returns>指定したコントロールが再利用できる場合は <c>true</c>。それ以外の場合は <c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.IsValid(System.Object)">
      <summary>指定した値が有効かどうかを判断します。</summary>
      <param name="value">検証する値（オブジェクトとして）。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Parse(System.String)">
      <summary>指定した文字列をセル型のデータ型に解析し、それをオブジェクトとして返します。</summary>
      <param name="s">解析するシート上のセルの文字列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.SetEditorValue(System.Object)">
      <summary>編集コントロールの値を設定します。</summary>
      <param name="value">エディタコントロールの（オブジェクトとしての）値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.ShowSubEditor">
      <summary>セルに関連付けられたサブエディタコントロールを表示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>セルの編集を開始します。</summary>
      <param name="e">イベント。</param>
      <param name="selectAll">すべてのセルデータを選択するかどうか。</param>
      <param name="autoClipboard">クリップボードアクションのショートカットキーを許可するかどうか。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType.StopEditing">
      <summary>セルの編集を終了します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl">
      <summary>GcMaskCellTypeの編集コントロール。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.Font">
      <summary>コントロールによって表示されるテキストのフォントを取得または設定します。</summary>
      <value>コントロールによって表示されるテキストに適用する<see cref="T:System.Drawing.Font" />。 既定値は<see cref="P:System.Windows.Forms.Control.DefaultFont" /> プロパティの値です。</value>
      <remarks>
        <para>
          <b>Font</b>プロパティはアンビエントプロパティです。アンビエントプロパティとは、明示的に設定しない場合に親コントロールから取得されるコントロールプロパティです。たとえば<see cref="T:System.Windows.Forms.Button" />は、デフォルトでは親の<see cref="T:System.Windows.Forms.Form" />と同じ<see cref="P:System.Windows.Forms.Control.BackColor" />を持ちます。アンビエントプロパティの詳細については、<see cref="T:System.Windows.Forms.AmbientProperties" />クラスまたは<see cref="T:System.Windows.Forms.Control" />クラスの概要を参照してください。</para>
        <para />
        <para>
          <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.SubEditor">
      <summary>セルのサブエディタを取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>指定されているキーが、コントロールに認識される入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</summary>
      <param name="keyData">キーを表す<b><see cref="T:System.Windows.Forms.Keys">Keys</see></b>値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定されたキーは入力キーです。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定されたキーは入力キーではありません。</description>
          </item>
        </list>
      </returns>
      <remarks>
        <b>IsInputKey</b>メソッドを呼び出すと、keyDataパラメーターで指定したキーが、コントロールに必要な入力キーかどうかを判断できます。このメソッドは、ウィンドウメッセージのプリプロセス中に呼び出され、指定された入力キーを前処理するか、直接コントロールに送信するかを決定します。<b>IsInputKey</b>が<see langword="true" />を返す場合、指定されたキーはコントロールに直接送信されます。<b>IsInputKey</b>が<see langword="false" />を返す場合、キーは前処理され、プリプロセス中にキーに対する処理が終了されなかった場合だけ、コントロールに送信されます。前処理されるキーには、［Tab］、［Enter］、［Esc］、［↑］、［↓］、［←］、［→］が含まれます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>KeyExit イベントを使用してフォーカスを移動します。</summary>
      <param name="e">イベントデータを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> インスタンス。</param>
      <remarks>
        <b>ExitKeys.CharInput</b>、<b>ExitKeys.CtrlRight</b>、<b>ExitKeys.NextControl</b>、<b>ExitKeys.Right</b>、および<b>ExitKeys.Tab</b>は、フォーカスを前方に移動します。その他の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" />は、フォーカスを後方に移動します。<note>このメソッドを継承クラスでオーバーライドする場合は、基本メソッドを呼び出す必要があります。そうしなければ、フォーカスは移動しません。 </note></remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.NextCell">
      <summary>次のセルに移動します。ショートカットアクションを使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.OnAfterFocus(System.EventArgs)">
      <summary>AfterFocusイベントを発生させます。</summary>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.OnEnter(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Enter" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnter</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEnter</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnter</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.OnGotFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.GotFocus" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnGotFocus</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnGotFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnGotFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.OnInvalidInput(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnInvalidInput</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnInvalidInput</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnInvalidInput</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the KeyDown event.</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>KeyPress イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.OnParentChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.ParentChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.PreviousCell">
      <summary>前のセルに移動します。ショートカットアクションを使用します。</summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcMaskEditingControl.AfterFocus">
      <summary>コントロールがフォーカスを取得した後に発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber">
      <summary>
        <b>GcNumber</b>コントロールを表します。</summary>
      <remarks>GcNumberコントロールは正および負の数値の入力機能を備えており、機能的な数値入力インタフェースを迅速かつ効率的に設計するのに役立ちます。ユーザーはデータの入力中にいつでもマイナス記号（"-"）を押して正の値を負に切り替えることができます。また、プラス記号（"+"）を押すと負の値が正に変わります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.AcceptsCrLf">
      <summary>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理方法を示す値を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理モードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" />列挙体。<br />デフォルト値は<b>CrLfMode.NoControl</b>です。</value>
      <remarks>
        <b>CrLf.Cut</b>に設定すると、<b>GcNumber</b>で文字列をコピー、切り取り、および貼り付けるときに標準の<b>TextBox</b>と同じように動作します。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.AcceptsDecimal">
      <summary>小数点が含まれる数値が貼り付けられたときの制御方法を取得または設定します。</summary>
      <value>小数点が含まれる数値が貼り付けられたときの制御方法を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalMode" />列挙体。<br />デフォルト値は<b>DecimalMode.Filter</b>です。</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b>が有効な<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalMode" />項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ActiveField">
      <summary>現在のアクティブフィールドを取得します。</summary>
      <value>アクティブなフィールドを示す<see cref="T:GrapeCity.Win.Views.Field" />値。</value>
      <remarks>このプロパティは、アクティブなフィールドを示します。これは、コントロールに入力フォーカスがあるときにキャレットがそのフィールド内にあることを意味します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.AllowDeleteToNull">
      <summary>値を削除してnullにすることができるかどうかを示す値を取得または設定します。</summary>
      <value>値を削除してnullにすることができる場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.AlternateText">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの代替テキストを取得します。</summary>
      <value>NumberAlternateTextを示す<b>NumberAlternateText</b>値。</value>
      <remarks>このプロパティを設定すると、編集モードおよび表示モードにおいてコントロールの値がゼロまたはNullのときに、設定したテキストが代わりに表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ContentAlignment">
      <summary>コントロール内に表示するテキストの配置を取得または設定します。</summary>
      <value>コントロール内に表示するテキストの配置を表す<b><see cref="T:System.Drawing.ContentAlignment">ContentAlignment</see></b>値。 既定値は<b>TopLeft</b>です。 <list type="table"><listheader><term>ContentAlignmentの値</term><description>説明</description></listheader><item><term><b>1 - TopLeft</b></term><description>コンテンツは上端左寄せに配置されます。</description></item><item><term><b>2 - TopCenter</b></term><description>コンテンツは上端中央に配置されます。</description></item><item><term><b>4 - TopRight</b></term><description>コンテンツは上端右寄せに配置されます。</description></item><item><term><b>16 - MiddleLeft</b></term><description>コンテンツは中段左寄せに配置されます。</description></item><item><term><b>32 - MiddleCenter</b></term><description>コンテンツは中段中央に配置されます。</description></item><item><term><b>64 - MiddleRight</b></term><description>コンテンツは中段右寄せに配置されます。</description></item><item><term><b>256 - BottomLeft</b></term><description>コンテンツは下端左寄せに配置されます。</description></item><item><term><b>512 - BottomCenter</b></term><description>コンテンツは下端中央に配置されます。</description></item><item><term><b>1024 - BottomRight</b></term><description>コンテンツは下端右寄せに配置されます。</description></item></list></value>
      <remarks>表示内容の位置揃えのタイプは9種類あります。このプロパティを使用して各タイプを設定できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Decimal">
      <summary>入力された数値の小数部を取得します。 <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /><seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" /><seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Integer" /></summary>
      <value>入力された数値の小数部を示すnull許容の10進数値。</value>
      <remarks>このプロパティを使用して、実行時に現在の値の小数部を取得できます。また、Integerプロパティを使用して整数部を取得することもできます。たとえば、number1.Value = -1234.120の場合は、Decimalプロパティは-0.12を返し、Integerプロパティは-1234を返します。number1.Value = 1234の場合は、Decimalプロパティは0を返し、Integerプロパティは1234を返します。基になる値がnullに設定されている場合、このプロパティはnullを返します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DisplayFields">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの表示フィールドを取得します。</summary>
      <value>表示フィールドのコレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldCollection" />オブジェクト。</value>
      <remarks>このプロパティは、このコントロールに入力フォーカスがないときの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" />の表示方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDown">
      <summary>ドロップダウン機能のドロップダウンパッケージを取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDown" />インスタンス。</value>
      <remarks>この<b>DropDown</b>プロパティを設定することで、ドロップダウンの動作とウィンドウの外観をカスタマイズできます。カスタマイズできる項目には、ドロップダウンを表示するかどうか、サイズ変更可能にするかどうか、ドロップダウンウィンドウの方向、ドロップダウンウィンドウの影、開閉時のアニメーションなどがあります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownCalculator">
      <summary>ユーザーがドロップダウン電卓のカスタマイズに使用できる<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownCalculator" />インスタンスを取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />インスタンス。</value>
      <remarks>この<b>DropDownCalculator</b>プロパティを設定することで、ドロップダウン電卓コントロールをカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DroppedDown">
      <summary>ドロップダウンウィンドウがドロップダウンしているかどうかを示す値を取得または設定します。</summary>
      <value>ドロップダウンしている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>このプロパティをtrueに設定することは、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Drop" />メソッドを呼び出すことと同じです。<note><b>GcNumber</b>が無効であるか表示されない場合、このプロパティは機能しません。また、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" />プロパティがfalseの場合にも、このプロパティは機能しません。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Fields">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールのフィールドを取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />内の項目を表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields" />。</value>
      <remarks>このプロパティは、このコントロールの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" />の表示方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Font">
      <summary>コントロールによって表示されるテキストのフォントを取得または設定します。</summary>
      <value>コントロールによって表示されるテキストに適用する<see cref="T:System.Drawing.Font" />。 既定値は<see cref="P:System.Windows.Forms.Control.DefaultFont" /> プロパティの値です。</value>
      <remarks>
        <para>
          <b>Font</b>プロパティはアンビエントプロパティです。アンビエントプロパティとは、明示的に設定しない場合に親コントロールから取得されるコントロールプロパティです。たとえば<see cref="T:System.Windows.Forms.Button" />は、デフォルトでは親の<see cref="T:System.Windows.Forms.Form" />と同じ<see cref="P:System.Windows.Forms.Control.BackColor" />を持ちます。アンビエントプロパティの詳細については、<see cref="T:System.Windows.Forms.AmbientProperties" />クラスまたは<see cref="T:System.Windows.Forms.Control" />クラスの概要を参照してください。</para>
        <para />
        <para>
          <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.HighlightText">
      <summary>コントロールがフォーカスを受け取ったときにテキストを強調表示するかどうかを示す値を取得または設定します。</summary>
      <value>テキストを強調表示するかどうかを示す<see langword="bool" />値。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>
        <para> このプロパティを使用して、コントロールがフォーカスを受け取ったときにコントロールのすべてのテキストを強調表示できます。</para>
        <para>
          <see langword="true" />の場合は、コントロールのすべての内容が選択されます。</para>
        <para>
          <see langword="false" />（デフォルト値）の場合は、コントロールの内容は選択されず、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" />プロパティと<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" />プロパティの設定に従ってキャレットが配置されます。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Integer">
      <summary>入力された数値の整数部を取得します。 <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" /><seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" /><seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Decimal" /></summary>
      <value>入力された数値の整数部を示すnull許容の10進数値。</value>
      <remarks>このプロパティを使用して、実行時に現在の値の整数部を取得できます。また、Decimalプロパティを使用して整数部を取得することもできます。たとえば、number1.Value = -1234.120の場合は、Integerプロパティは-1234を返し、Decimalプロパティは-0.12を返します。number1.Value = 1234の場合は、Integerプロパティは1234を返し、Decimalプロパティは0を返します。基になる値がnullに設定されている場合、このプロパティはnullを返します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxMinBehavior">
      <summary>新しい入力値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MinValue" />から<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxValue" />までの範囲から外れているときの動作を取得または設定します。</summary>
      <value>新しい入力値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MinValue" />から<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxValue" />までの範囲から外れているときの動作を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxMinBehavior" />列挙値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.AdjustToMaxMin" />です。</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b>が有効な<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxMinBehavior" />項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxValue">
      <summary>フィールドまたは値によってコントロールをスピンするときの許容される最大値を取得または設定します。</summary>
      <value>許容される最大値を示す<see cref="T:System.Decimal" />値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MinValue" />未満であるか、デフォルト値を超えています。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MinValue">
      <summary>フィールドまたは値によってコントロールをスピンするときの許容される最小値を取得または設定します。</summary>
      <value>許容される最小値を示す<see cref="T:System.Decimal" />値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxValue" />を超えているか、デフォルト値未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.NegativeColor">
      <summary>このコントロールの値の符号が負である場合の色を取得または設定します。</summary>
      <value>負数の色。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" />プロパティがゼロ未満で、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.UseNegativeColor" />プロパティが<see langword="true" />の場合は、このプロパティに従ってテキストの色が決定されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpCalculator">
      <summary>ユーザーがポップアップ電卓のカスタマイズに使用できる<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpCalculator" />インスタンスを取得します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpCalculator" />インスタンス。</value>
      <remarks>この<b>PopUpCalculator</b>プロパティを設定することで、ポップアップ電卓コントロールをカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PoppedUp">
      <summary>ポップアップウィンドウが表示されているかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。ポップアップウィンドウが表示されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>このプロパティをtrueに設定することは、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUp" />メソッドを呼び出すことと同じです。<note><see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />が無効であるか表示されない場合、このプロパティは機能しません。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PreferredHeight">
      <summary>コントロールに最適な高さを取得します。</summary>
      <value>コントロールの最適な高さを示す<see cref="T:System.Int32" />値。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Win.Forms.Control.PreferredSize" />プロパティの<b>Height</b>と同じです。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PromptChar">
      <summary>フィールドに何も入力されていないときに表示するプロンプト文字を取得または設定します。</summary>
      <value>入力時にフィールドの空のビットへの入力を促すために使用される<b>char</b>値。</value>
      <remarks>
        <b>PromptChar</b>プロパティは、入力可能フィールドまたは表示フィールドが1つ以上存在していて、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" />が設定されていないときに表示されるテキストを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>入力候補値を示す<see cref="T:System.String" />値。<br />デフォルト値は<see cref="F:System.Decimal.Zero" />です。</value>
      <remarks>
        <b>RecommendedValue</b>プロパティは、値が完全に入力されていないときにユーザーに提示されるヒントを提供します。値の入力中に特定のショートカットキーまたはキーの組み合わせを押すと、入力候補値を取得できます。</remarks>
      <exception cref="T:System.ArgumentException">現在のパターンと一致しない無効な値をRecommendedValueプロパティに設定しようとしたときに発生します。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.RoundPattern">
      <summary>値の端数処理を取得または設定します。</summary>
      <value>値の端数処理を行う小数点以下の桁数を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.RoundPattern" />値。</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.RoundPattern" />で定義されていません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ShowLiterals">
      <summary>入力中にリテラル文字列を表示するかどうかを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ShowLiterals" />列挙値の1つ。デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.Always" />です。</value>
      <remarks>このプロパティは、このクラスには関連していません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを示す値を取得または設定します。</summary>
      <value>入力候補値を表示する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>この<b>ShowRecommendedValue</b>が<see langword="true" />の場合、値が完全に入力されていないときに<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.RecommendedValue" />プロパティの値が表示されます。それ以外の場合、<b>RecommendedValue</b>プロパティの値は表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.SideButtons">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールのサイドボタンを取得します。</summary>
      <value>コレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" />。</value>
      <remarks>
        <b>SideButtons</b>にはいくつかのコマンドボタンを追加または削除できます。これには、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Spin">
      <summary>スピン機能のスピンパッケージを取得します。</summary>
      <value>スピン機能に関する設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NumberSpin" />値。</value>
      <remarks>この<b>Spin</b> プロパティを設定することで、スピン動作をカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.TabAction">
      <summary>［Tab］キーを押したときにコントロール間でフォーカスを移動するか、コントロール内のフィールド間でフォーカスを移動するかを決定する値を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.TabAction" />列挙値の1つ。デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Control" />です。</value>
      <remarks>このプロパティは、このクラスには関連していません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Text">
      <summary>コントロールの現在のテキストを取得または設定します。</summary>
      <value>
        <value />
      </value>
      <remarks>
        <b>Text</b>プロパティには、すべてのリテラルと入力フォーカスを持つフィールドまたは入力フォーカスを持たない表示フィールドのすべての文字が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.UseNegativeColor">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.NegativeColor" />を使用して負数を表示するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.NegativeColor" />を使用して負数を表示する場合は<see langword="true" />。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ForeColor" />を使用して負数を表示する場合は<see langword="false" />。<br />デフォルト値は<see langword="true" />です。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" />プロパティがゼロ未満で、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.UseNegativeColor" />プロパティが<see langword="true" />の場合は、このプロパティに従ってテキストの色が決定されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value">
      <summary>コントロールに割り当てられた10進数値を取得または設定します。</summary>
      <value>値を示す<see cref="T:System.Nullable`1" />値。<br />デフォルト値は<see cref="F:System.Decimal.Zero" />です。</value>
      <remarks>これは、フィールド内のすべての文字からリテラルを除いた文字列です。このコントロールにどのようなフィールドがあるかにかかわらず、この<b>Value</b>は常に同じです。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MinValue" />未満であるか、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.MaxValue" />を超えています。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ValueSign">
      <summary>コントロールの値の符号を取得または設定します。</summary>
      <value>値の符号を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl" />値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" />です。</value>
      <remarks>
        <b>ValueSign</b>プロパティは、受け入れ可能な値を決定します。値が<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Positive" />の場合は、ゼロ以上の数値のみが許可されます。値が<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Negative" />の場合は、ゼロ以下の数値のみが許可されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" />は、すべての数値が許可されることを意味します。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">値が<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl" />で定義されていません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.AboutBox">
      <summary>バージョン情報ダイアログボックスを表示します。</summary>
      <remarks>このメソッドが呼び出された後、製品情報を含むウィンドウが表示されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ApplyRecommendedValue">
      <summary>入力候補値をコントロールに適用します。</summary>
      <remarks>この<b>ApplyRecommendedValue</b>メソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ShowRecommendedValue" />プロパティが<see langword="true" />の場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.RecommendedValue" />を受け入れることができます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.CreateAccessibilityInstance">
      <summary>新しいユーザー補助オブジェクトを作成します。</summary>
      <returns>新しい<see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Dispose(System.Boolean)">
      <summary>このコントロールと子コントロールが使用しているアンマネージリソースを解放します。オプションで、マネージリソースも解放します。</summary>
      <param name="disposing">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>マネージリソースとアンマネージリソースの両方を解放します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>アンマネージリソースだけを解放します。</description>
          </item>
        </list>
      </param>
      <remarks>
        <see cref="T:System.Windows.Forms.Control" />の使用が終わったら、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Dispose(System.Boolean)" />を呼び出します。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Dispose(System.Boolean)" nolink="true" />メソッドは、<see cref="T:System.Windows.Forms.Control" nolink="true" />を使用できない状態にします。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Dispose(System.Boolean)" nolink="true" />を呼び出した後で、<see cref="T:System.Windows.Forms.Control" nolink="true" />へのすべての参照を解放し、<see cref="T:System.Windows.Forms.Control" nolink="true" />によって占有されていたメモリをガベージコレクターがクリアできるようにする必要があります。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DoSpinDown(System.Decimal)">
      <summary>スピンダウンを実行します。</summary>
      <param name="increment">スピンダウン時の増分量を示す<see cref="T:System.Decimal" />値。</param>
      <remarks>このメソッドの動作は［↓］キーを押した場合と同じです。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DoSpinUp(System.Decimal)" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DoSpinUp(System.Decimal)">
      <summary>スピンアップを実行します。</summary>
      <param name="increment">スピンアップ時の増分量を示す<see cref="T:System.Decimal" />値。</param>
      <remarks>このメソッドの動作は［↑］キーを押した場合と同じです。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DoSpinDown(System.Decimal)" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Drop">
      <summary>ドロップダウン機能を実行します。</summary>
      <remarks>
        <para> このメソッドは、データ入力を支援するドロップダウンエディタをユーザーに表示します。コントロールが無効であるか、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" />プロパティがfalseの場合、このメソッドの呼び出しは無視されます。</para>
        <para> ドロップダウンエディタが表示される直前に、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownOpening" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownOpened" />イベントが発生します。 </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.GetDefaultDisplayFields">
      <summary>既定の表示フィールドを取得します。</summary>
      <returns>表示用のすべてのデフォルトフィールドを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayField" />の配列。</returns>
      <remarks>派生クラスで<b>GetDefaultDisplayFields</b>メソッドを使用して、コントロールが作成されるときのデフォルト表示フィールドをカスタマイズできます。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldsBuilder.BuildFields(System.String)" />を使用すると、文字列書式に従って<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayField" />の配列を作成できます。このメソッドが<see langword="null" />を返す場合、コントロールに表示フィールドは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
      <returns>既定のショートカット機能を含む<b>Dictionary</b><b>&lt;</b><b>Keys, string</b><b>&gt;</b>インタフェースを実装したオブジェクト。</returns>
      <remarks>
        <b>GetDefaultShortcuts</b> メソッドはコントロールが作成されるときに派生クラスに対して既定のショートカット機能の設定を行います。<see langword="null" />を設定した場合には、ショートカット機能は何も設定されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.GetDefaultSideButtonTypes">
      <summary>既定のサイドボタンを取得します。</summary>
      <returns>. すべてのタイプのデフォルトサイドボタンを含む<see cref="T:System.Type" />リスト。</returns>
      <remarks>派生クラスで<b>GetDefaultSideButtonTypes</b>メソッドを使用して、コントロールが作成されるときのデフォルトサイドボタンをカスタマイズできます。このメソッドが<see langword="null" />を返す場合、コントロールにサイドボタンは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.InitializeDefaultFields(GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields)">
      <summary>デフォルトフィールドを初期化します。</summary>
      <param name="defaultFields">ユーザーがカスタマイズできるデフォルトフィールド。</param>
      <remarks>派生クラスで<b>InitializeDefaultFields</b>メソッドを使用して、コントロールが作成されるときのデフォルトフィールドをカスタマイズできます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[])">
      <summary>既定のサイドボタンを初期化します。</summary>
      <param name="defaultSideButtons">初期化する既定のサイドボタン。</param>
      <remarks>派生クラスで<b>InitializeDefaultSideButtons</b>メソッドを使用して、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.GetDefaultSideButtonTypes" />メソッドによって作成されるデフォルトサイドボタンを初期化できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnDropDownClosed(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownClosed" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownClosed</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownClosed</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownClosed</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnDropDownClosing(GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownClosing" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownClosing</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownClosing</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownClosing</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnDropDownOpened(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownOpened" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownOpened</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownOpened</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownOpened</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnDropDownOpening(GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownOpening" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownOpening</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownOpening</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownOpening</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnEnabledChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnableChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEnableChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnableChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnEnter(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Enter" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnter</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEnter</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnter</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnLeave(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Leave">Leave</see> /&gt; イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnLeave</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnLeave</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnLeave</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnPopUpClosed(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpClosed" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnPopUpClosed</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b><para /> 派生クラスで<b>OnPopUpClosed</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnPopUpClosed</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnPopUpClosing(GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpClosing" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnPopUpClosing</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b><para /> 派生クラスで<b>OnPopUpClosing</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnPopUpClosing</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnPopUpOpened(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpOpened" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnPopUpOpened</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b><para /> 派生クラスで<b>OnPopUpOpened</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnPopUpOpened</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnPopUpOpening(GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpOpening" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnPopUpOpening</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b><para /> 派生クラスで<b>OnPopUpOpening</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnPopUpOpening</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnTextChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.TextChanged" /> イベントを発生します。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Validating" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.ComponentModel.CancelEventArgs">CancelEventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnValidating</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnValidating</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnValidating</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnValueChanged(System.EventArgs)">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" />プロパティの値が変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnValueChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnValueChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnValueChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.OnVisibleChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnVisibleChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnVisibleChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnVisibleChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUp">
      <summary>ポップアップ機能を実行します。</summary>
      <remarks>
        <para> このメソッドは、データ入力を支援するポップアップエディタをユーザーに表示します。コントロールが無効な場合、このメソッドの呼び出しは無視されます。</para>
        <para> ドロップダウンエディタが表示される直前に、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpOpening" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpOpened" />イベントが発生します。 </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.SetZero">
      <summary>値を<see cref="F:System.Decimal.Zero" />にリセットします。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />のために使用されます。このメソッドは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" />プロパティの影響を受けます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.SwitchDropDown">
      <summary>ドロップダウンを切り替えます。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。ドロップダウンウィンドウが閉じている場合、このメソッドを呼び出すとドロップダウンウィンドウが開きます。ドロップダウンウィンドウが開いている場合は、このメソッドを呼び出すとドロップダウンウィンドウが閉じます。ただし、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" />プロパティが<see langword="false" />の場合には、このメソッドは機能しません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.SwitchPopUp">
      <summary>ドロップダウンを切り替えます。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。ポップアップウィンドウが閉じている場合、このメソッドを呼び出すとポップアップウィンドウが開きます。ポップアップウィンドウが開いている場合は、このメソッドを呼び出すとポップアップウィンドウが閉じます。ただし、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" />プロパティが<see langword="false" />の場合には、このメソッドは機能しません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.SwitchSign">
      <summary>値の符号を切り替えます。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ThreeZero">
      <summary>現在の値の末尾にゼロを3個追加するメソッド。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。このメソッドは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ReadOnly" />プロパティの影響を受けます。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownClosed">
      <summary>ドロップダウン電卓が閉じたときに発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがプログラムまたはユーザー操作によって閉じた場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownClosing">
      <summary>ドロップダウン電卓が閉じる前に発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがコードの実行またはユーザー操作によって閉じる場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownOpened">
      <summary>ドロップダウン電卓が開いたときに発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがプログラムまたはユーザー操作によって開いた場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownOpening">
      <summary>ドロップダウン電卓が開く前に発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがコードの実行またはユーザー操作によって開く場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpClosed">
      <summary>ポップアップ電卓が閉じたときに発生します。</summary>
      <remarks>このイベントは、ポップアップウィンドウがコードの実行またはユーザー操作によって閉じた場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpClosing">
      <summary>ポップアップ電卓が閉じるときに発生します。</summary>
      <remarks>このイベントは、ポップアップウィンドウがコードの実行またはユーザー操作によって閉じる場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpOpened">
      <summary>ポップアップ電卓が開いたときに発生します。</summary>
      <remarks>このイベントは、ポップアップウィンドウがコードの実行またはユーザー操作によって開いた場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpOpening">
      <summary>ポップアップ電卓が開く前に発生します。</summary>
      <remarks>このイベントは、ポップアップウィンドウがコードの実行またはユーザー操作によって開く場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ValueChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" />プロパティの値が変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value" />プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType">
      <summary>
        <b>GcNumberCellType</b>クラスを表します。</summary>
      <remarks>GcNumberCellTypeは正および負の数値の入力機能を備えており、機能的な数値入力インタフェースを迅速かつ効率的に設計するのに役立ちます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.AcceptsCrLf">
      <summary>文字列をコピー、切り取り、および貼り付けるときの CrLf 文字の処理方法を示す値を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときの CrLf 文字の処理モードを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 列挙体。<br />既定値は <b>CrLfMode.NoControl</b> です。</value>
      <remarks>
        <b>CrLf.Cut</b>に設定すると、<b>GcNumber</b>で文字列をコピー、切り取り、または貼り付けるときの動作が標準の<b>TextBox</b>と同じになります。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.AcceptsDecimal">
      <summary>書式設定によって小数部が許可されていない場合に小数部を含む数値が貼り付けられたときの制御方法を取得または設定します。</summary>
      <value>書式設定によって小数部が許可されていない場合に小数部を含む数値が貼り付けられたときの制御方法を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalMode" />列挙体。<br />デフォルト値は<b>DecimalMode.Filter</b>です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.AllowDeleteToNull">
      <summary>内容を削除するときにnull値を許可するかどうかを示す値を取得または設定します。</summary>
      <value>削除時にnull値を許可する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.AlternateText">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />コントロールの代替テキストを取得します。</summary>
      <value>NumberAlternateTextを示す<b>NumberAlternateText</b>値。</value>
      <remarks>このプロパティを設定すると、編集モードおよび表示モードでコントロールの値がゼロまたはnullのときに、設定したテキストが代わりに表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.ClearCollection">
      <summary>デザイナによる内部使用。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.DisplayFields">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />オブジェクトの表示フィールドを取得します。</summary>
      <value>表示フィールドのコレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldCollection" />オブジェクト。</value>
      <remarks>このプロパティは、このコントロールに入力フォーカスがないときの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />オブジェクトの表示方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.DropDown">
      <summary>ドロップダウン機能のドロップダウン設定を取得します。</summary>
      <value>ドロップダウン機能のドロップダウン設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDown" />インスタンス。</value>
      <remarks>この <b>DropDown</b> プロパティを設定することで、ドロップダウンの動作とウィンドウの外観をカスタマイズできます。このプロパティは、ドロップダウンを表示するかどうか、ドロップダウンをサイズ変更可能にするかどうか、ドロップダウンウィンドウの方向、ドロップダウンウィンドウの影、および開閉時のアニメーションを指定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.DropDownCalculator">
      <summary>ユーザーがドロップダウン電卓のカスタマイズに使用できる<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.DropDownCalculator" />インスタンスを取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalculator" />インスタンス。</value>
      <remarks>この<b>DropDownCalculator</b>プロパティを設定することで、ドロップダウン電卓コントロールをカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.ExcelExportFormat">
      <summary>Excel エクスポート書式を取得または設定します。</summary>
      <value>Excel エクスポート書式。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.Fields">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />オブジェクトの項目を表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NumberFields" />オブジェクト。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />オブジェクトの項目を表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NumberFields" />オブジェクト。</value>
      <remarks>このプロパティは、このコントロールの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />の表示および編集方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.FocusPosition">
      <summary>エディタがフォーカスを取得したときの初期カーソル位置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MaxMinBehavior">
      <summary>新しい入力値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MinValue" />から<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MaxValue" />までの範囲から外れているときの動作を取得または設定します。</summary>
      <value>新しい入力値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MinValue" />から<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MaxValue" />までの範囲から外れているときの動作を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MaxMinBehavior" />列挙値。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.AdjustToMaxMin" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MaxValue">
      <summary>スピンオプションを使用するときの許容される最大値を取得または設定します。</summary>
      <value>許容される最大値を示す<see cref="T:System.Decimal" />値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MinValue" />未満であるか、デフォルト値を超えています。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MinValue">
      <summary>スピンオプションを使用するときの許容される最小値を取得または設定します。</summary>
      <value>許容される最小値を示す<see cref="T:System.Decimal" />値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.MaxValue" />を超えているか、デフォルト値未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.NegativeColor">
      <summary>このコントロールの値の符号が負である場合の色を取得または設定します。</summary>
      <value>負数の色。</value>
      <remarks>
        <see cref="N:GrapeCity.Win.Value" />プロパティがゼロ未満で、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.UseNegativeColor" />プロパティが<see langword="true" />の場合は、このプロパティの値によってテキストの色が決定されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.PaintByControl">
      <summary>セルの描画方法を示す値を取得または設定します。true の場合、内部コントロールの描画を使用してセルが描画されます。この場合、セルは編集コントロールとまったく同じように描画されます。セルのすべての設定（スタイルの異なるフィールドなど）がセルの描画時に有効になります。文字列を直接描画するのではなくコントロールによって描画する場合、セルの描画パフォーマンスは遅くなります。また、PDF にエクスポートしたときにセルのテキストは選択できません。false の場合、パフォーマンスは良好ですが、一部の設定が無効になります。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.PopUpCalculator">
      <summary>ユーザーがポップアップ電卓のカスタマイズに使用できる<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.PopUpCalculator" />インスタンスを取得します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.PopUpCalculator" />インスタンス。</value>
      <remarks>この<b>PopUpCalculator</b>プロパティを設定することで、ポップアップ電卓コントロールをカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.PromptChar">
      <summary>フィールドに何も入力されていないときに表示するプロンプト文字を取得または設定します。</summary>
      <remarks>このプロパティは<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />ではサポートされていません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>入力候補値を示す<see cref="T:System.String" />値。<br /> デフォルト値は<see cref="F:System.Decimal.Zero" />です。</value>
      <remarks>
        <b>RecommendedValue</b>プロパティはユーザーへのヒントを提供するもので、値が完全に入力されていないときに表示されます。値の入力中に特定のショートカットキーまたはキーの組み合わせを押すと、入力候補値を取得できます。</remarks>
      <exception cref="T:System.ArgumentException">現在のパターンと一致しない無効な値がRecommendedValueプロパティに設定されたときに発生します。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.RoundPattern">
      <summary>値の端数処理を取得または設定します。</summary>
      <value>値の端数処理方法を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.RoundPattern" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.ShowLiterals">
      <summary>入力中にリテラル文字列を表示するかどうかを取得または設定します。</summary>
      <remarks>このプロパティは<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />ではサポートされていません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを示す値を取得または設定します。</summary>
      <value>入力候補値を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>
        <b>ShowRecommendedValue</b>が<see langword="true" />の場合、値が完全に入力されていないときに<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.RecommendedValue" />プロパティの値が表示されます。それ以外の場合、<b>RecommendedValue</b>プロパティの値は表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.SideButtons">
      <summary>コントロールに設定されているサイドボタンのコレクションを取得します。</summary>
      <value>コレクションを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> 値。</value>
      <remarks>
        <b>SideButtons</b>は追加または削除できます。これには<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.Spin">
      <summary>スピン機能の設定を取得します。</summary>
      <value>スピン機能の設定を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpin" /> 値。</value>
      <remarks>この<b>Spin</b> プロパティを設定することで、スピン動作をカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.TabAction">
      <summary>［Tab］キーを押したときにコントロール間でフォーカスを移動するか、コントロール内のフィールド間でフォーカスを移動するかを決定する値を取得または設定します。</summary>
      <remarks>このプロパティは<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />ではサポートされていません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.UseNegativeColor">
      <summary>負数を表示するために<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.NegativeColor" />プロパティを使用するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.NegativeColor" />を使用して負数を表示する場合は<see langword="true" />、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.ForeColor" />を使用して負数を表示する場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
      <remarks>
        <see cref="N:GrapeCity.Win.Value" />プロパティがゼロ未満で、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.UseNegativeColor" />プロパティが<see langword="true" />の場合は、このプロパティによってテキストの色が決定されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.ValueSign">
      <summary>コントロールの値の符号を取得または設定します。</summary>
      <value>値の符号を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl" />値。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" />です。</value>
      <remarks>
        <b>ValueSign</b>プロパティは、受け入れ可能な値を決定します。値が<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Positive" />の場合は、ゼロ以上の数値のみが許可されます。値が<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Negative" />の場合は、ゼロ以下の数値のみが許可されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" />は、すべての数値が許可されることを意味します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.Clone">
      <summary>基本セルを作成して返します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.Format(System.Object)">
      <summary>指定したデータをセル型の書式に書式設定し、それを文字列として返します。</summary>
      <param name="obj">書式設定するセルデータを含む、データモデル内のオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.FormatToClipboard(System.Object)">
      <summary>クリップボードに書式設定します。</summary>
      <param name="obj">オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetDefaultDisplayFields">
      <summary>既定の表示フィールドを取得します。</summary>
      <returns>表示用のすべてのデフォルトフィールドを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo" /> の配列。</returns>
      <remarks>派生クラスで <b>GetDefaultDisplayFields</b> メソッドを使用して、セルが作成されるときのデフォルト表示フィールドをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルに表示フィールドは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
      <returns>すべてのデフォルトショートカットを含むディクショナリー。</returns>
      <remarks>派生クラスで <b>GetDefaultShortcuts</b> メソッドを使用して、セルが作成されるときのデフォルトショートカットをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルにショートカットは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetDefaultSideButtonTypes">
      <summary>既定のサイドボタンを取得します。</summary>
      <returns>. すべてのタイプのデフォルトサイドボタンを含む <see cref="T:System.Type" /> リスト。</returns>
      <remarks>派生クラスで <b>GetDefaultSideButtonTypes</b> メソッドを使用して、セルが作成されるときのデフォルトサイドボタンをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルにサイドボタンは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetDisplayText(System.Object)">
      <summary>表示テキストを取得します。</summary>
      <param name="value">セル値。</param>
      <returns>表示テキスト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>外観と倍率を指定してこのセル型の編集コントロールを取得します。</summary>
      <param name="appearance">セルの外観設定。</param>
      <param name="zoomFactor">セルの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetEditorValue">
      <summary>編集コントロール内の書式なしの値を取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetHorizontalAlignment(System.Object)">
      <summary>水平方向の配置を値に基づいて取得します。</summary>
      <param name="value">水平方向の配置を示す値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に対して、ターゲットオブジェクトのシリアル化に必要なデータを設定します。</summary>
      <param name="info">データを設定する <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">このシリアル化のシリアル化（<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照）。</param>
      <exception cref="T:System.Security.SecurityException">呼び出し元に必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>レンダラーコントロールのためにセルの優先サイズ（必要な最大サイズ）を取得します。</summary>
      <param name="g">セルを描画するためのグラフィックデバイスインタフェース。</param>
      <param name="size">優先サイズまたは必要な最大サイズ。</param>
      <param name="appearance">レンダラーコントロールの外観設定。</param>
      <param name="value">レンダラーコントロールの名前を含むオブジェクト。</param>
      <param name="zoomFactor">レンダラーコントロールの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>エディタコントロールのためにセルの優先サイズ（必要な最大サイズ）を取得します。</summary>
      <param name="editor">エディタコントロールの名前。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetVerticalAlignment(System.Object)">
      <summary>垂直方向の配置を値に基づいて取得します。</summary>
      <param name="value">垂直方向の配置を示す値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo[])">
      <summary>既定のサイドボタンを初期化します。</summary>
      <param name="defaultSideButtons">初期化する既定のサイドボタン。</param>
      <remarks>派生クラスで<b>InitializeDefaultSideButtons</b>メソッドを使用して、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.GetDefaultSideButtonTypes" />メソッドによって作成されるデフォルトサイドボタンを初期化できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>エディタコントロールを初期化します。</summary>
      <param name="control">設定対象となるコントロールを表す<b><see cref="T:System.Windows.Forms.Control">Control</see></b>オブジェクト。</param>
      <param name="appearance">外観。</param>
      <param name="zoomFactor">倍率。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>指定したコントロールが再利用できるかどうかを判断します。</summary>
      <param name="control">設定対象となるコントロールを表す<b><see cref="T:System.Windows.Forms.Control">Control</see></b>オブジェクト。</param>
      <returns>指定したコントロールが再利用できる場合は <c>true</c>。それ以外の場合は <c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.IsValid(System.Object)">
      <summary>指定した値が有効かどうかを判断します。</summary>
      <param name="value">検証する値（オブジェクトとして）。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.Parse(System.String)">
      <summary>指定した文字列をセル型のデータ型に解析し、それをオブジェクトとして返します。</summary>
      <param name="s">解析するシート上のセルの文字列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.SetEditorValue(System.Object)">
      <summary>編集コントロールの値を設定します。</summary>
      <param name="value">エディタコントロールの（オブジェクトとしての）値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.ShowSubEditor">
      <summary>セルに関連付けられたサブエディタコントロールを表示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>セルの編集を開始します。</summary>
      <param name="e">イベント。</param>
      <param name="selectAll">すべてのセルデータを選択するかどうか。</param>
      <param name="autoClipboard">クリップボードアクションのショートカットキーを許可するかどうか。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType.StopEditing">
      <summary>セルの編集を終了します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl">
      <summary>GcNumberCellTypeの編集コントロール。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.Font">
      <summary>コントロールによって表示されるテキストのフォントを取得または設定します。</summary>
      <value>コントロールによって表示されるテキストに適用する<see cref="T:System.Drawing.Font" />。 既定値は<see cref="P:System.Windows.Forms.Control.DefaultFont" /> プロパティの値です。</value>
      <remarks>
        <para>
          <b>Font</b>プロパティはアンビエントプロパティです。アンビエントプロパティとは、明示的に設定しない場合に親コントロールから取得されるコントロールプロパティです。たとえば<see cref="T:System.Windows.Forms.Button" />は、デフォルトでは親の<see cref="T:System.Windows.Forms.Form" />と同じ<see cref="P:System.Windows.Forms.Control.BackColor" />を持ちます。アンビエントプロパティの詳細については、<see cref="T:System.Windows.Forms.AmbientProperties" />クラスまたは<see cref="T:System.Windows.Forms.Control" />クラスの概要を参照してください。</para>
        <para />
        <para>
          <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.SubEditor">
      <summary>セルのサブエディタを取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>指定されているキーが、コントロールに認識される入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</summary>
      <param name="keyData">キーを表す<b><see cref="T:System.Windows.Forms.Keys">Keys</see></b>値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定されたキーは入力キーです。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定されたキーは入力キーではありません。</description>
          </item>
        </list>
      </returns>
      <remarks>
        <b>IsInputKey</b>メソッドを呼び出すと、keyDataパラメーターで指定したキーが、コントロールに必要な入力キーかどうかを判断できます。このメソッドは、ウィンドウメッセージのプリプロセス中に呼び出され、指定された入力キーを前処理するか、直接コントロールに送信するかを決定します。<b>IsInputKey</b>が<see langword="true" />を返す場合、指定されたキーはコントロールに直接送信されます。<b>IsInputKey</b>が<see langword="false" />を返す場合、キーは前処理され、プリプロセス中にキーに対する処理が終了されなかった場合だけ、コントロールに送信されます。前処理されるキーには、［Tab］、［Enter］、［Esc］、［↑］、［↓］、［←］、［→］が含まれます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>KeyExit イベントを使用してフォーカスを移動します。</summary>
      <param name="e">イベントデータを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> インスタンス。</param>
      <remarks>
        <b>ExitKeys.CharInput</b>、<b>ExitKeys.CtrlRight</b>、<b>ExitKeys.NextControl</b>、<b>ExitKeys.Right</b>、および<b>ExitKeys.Tab</b>は、フォーカスを前方に移動します。その他の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" />は、フォーカスを後方に移動します。<note>このメソッドを継承クラスでオーバーライドする場合は、基本メソッドを呼び出す必要があります。そうしなければ、フォーカスは移動しません。 </note></remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.NextCell">
      <summary>次のセルに移動します。ショートカットアクションを使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnAfterFocus(System.EventArgs)">
      <summary>AfterFocusイベントを発生させます。</summary>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnDropDownClosed(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownClosed" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownClosed</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownClosed</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownClosed</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnDropDownOpening(GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.DropDownOpening" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownOpening</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownOpening</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownOpening</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnEnter(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Enter" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnter</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEnter</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnter</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnGotFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.GotFocus" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnGotFocus</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnGotFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnGotFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnInvalidInput(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnInvalidInput</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnInvalidInput</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnInvalidInput</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the KeyDown event.</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>KeyPress イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnParentChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.ParentChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnPopUpClosed(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpClosed" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnPopUpClosed</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b><para /> 派生クラスで<b>OnPopUpClosed</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnPopUpClosed</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.OnPopUpOpening(GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.PopUpOpening" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnPopUpOpening</b>メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意: </b><para /> 派生クラスで<b>OnPopUpOpening</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnPopUpOpening</b>メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.PreviousCell">
      <summary>前のセルに移動します。ショートカットアクションを使用します。</summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcNumberEditingControl.AfterFocus">
      <summary>コントロールがフォーカスを取得した後に発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox">
      <summary>
        <b>GcTextBox</b>クラスは、テキストコントロールを形成する本体クラスです。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsCrLf">
      <summary>文字列をコピー、切り取り、および貼り付けるときの CrLf 文字の処理方法を示す値を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときの CrLf 文字の処理モードを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 列挙体。<br />既定値は <b>CrLfMode.NoControl</b> です。</value>
      <remarks>
        <b>CrLf.Cut</b>に設定すると、<b>GcTextBox</b>で文字列をコピー、切り取り、および貼り付けるときに標準の<b>TextBox</b>と同じように動作します。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn">
      <summary>複数行のTextコントロールで［Enter］キーを押したときにコントロール内のテキストを改行するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。コントロール内のテキストを改行する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>
        <b>AcceptsReturn</b> プロパティの値が<b>False</b> のときに複数行のテキストコントロールで改行するには、 <b>Ctrl</b>キーを押しながら<b>Enter</b>キーを押します。 フォームの<b><see cref="P:System.Windows.Forms.Form.AcceptButton">AcceptButton</see></b> プロパティに何も設定していない場合は、 <b>AcceptsReturn</b> プロパティの値に関係なく、<b>Enter</b>キーの押下だけで改行できます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab">
      <summary>複数行のTextコントロールで［Tab］キーを押したときにフォーカスをタブオーダーの次のコントロールに移動するのではなくコントロールにTab文字を入力するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。コントロールにTab文字を入力する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>
        <b>AcceptsTab</b> プロパティの値が<b>True</b> のときに、次のコントロールへフォーカスを移動するには、 <b>Ctrl</b>キーを押しながら<b>Tab</b>キーを押します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTabChar">
      <summary>文字列をコピー、切り取り、および貼り付けるときのTab文字の処理方法を示す値を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときのTab文字の処理モードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" />列挙体。<br />デフォルト値は<b>TabCharMode.NoControl</b>です。</value>
      <remarks>
        <b>TabCharMode.Cut</b>に設定すると、<b>GcTextBox</b>で文字列をコピー、切り取り、および貼り付けるときに標準の<b>TextBox</b>と同じように動作します。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b>が有効な<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" />項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AllowSpace">
      <summary>入力可能なスペースの種類を取得または設定します。</summary>
      <value>入力できるスペース文字の種類を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AllowSpace" />列挙体。<br />デフォルト値は<b>AllowSpace.Both</b>です。</value>
      <remarks>
        <para>
          <b>AllowSpace</b>プロパティを使用して、テキストに入力できるスペースの種類を指定します。</para>
        <para />
        <para>
          <b>AllowSpace</b>列挙体が<b>None</b>の場合、この<b>GcTextBox</b>にはスペースを入力できません。<b>AllowSpace.Narrow</b>オプションを指定すると、半角スペースを入力できます。<b>AllowSpace.Wide</b>オプションを指定すると、全角スペースを入力できます。<b>AllowSpace.Both</b>オプションを指定すると、すべての種類のスペースを入力できます。</para>
        <para />
        <note>AutoConvertプロパティが<see langword="true" />で、AllowSpaceが<b>AllowSpace.Wide</b>の場合、ユーザーがコントロールに半角スペースを入力すると、自動的に半角スペースが全角スペースに変換されます。この動作は他の設定についても同じです。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Format" />プロパティは常に<b>AllowSpace</b>プロパティと組み合わせて使用できます。 </note>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoConvert" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AlternateText">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> コントロールの代替テキストを取得します。</summary>
      <value>代替テキストを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText" /> 値。</value>
      <remarks>現在の値が<see cref="F:System.String.Empty" />で、このコントロールに入力フォーカスがある場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" />プロパティは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText.Null" />設定（nullではない）と等しくなります。現在の値が<see langword="null" />で、このコントロールに入力フォーカスがない場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" nolink="true" />プロパティは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText.DisplayNull" />設定と等しくなります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoComplete">
      <summary>オートコンプリート関連の設定を取得します。</summary>
      <value>オートコンプリートの設定を表す <see cref="P:GrapeCity.Win.MultiRow.InputMan.GcComboBox.AutoComplete" /> オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteCustomSource">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteSource" /> プロパティが CustomSource に設定されている場合に使用するカスタムの <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteSource" /> と共に使用する <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" />。<br />既定値は <see langword="null" /> です。</value>
      <remarks>
        <b>AutoCompleteCustomSource</b>、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteMode" />、<b>AutoCompleteSource</b>の各プロパティを使用して、入力された文字列をあらかじめ用意したすべての文字列と前方一致で比較することによって入力文字列を自動的に補完する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />を作成できます。これは、TextBoxコントロールにURL、アドレス、ファイル名、コマンドなどを入力する場合に役立ちます。<para /><para><b>AutoCompleteCustomSource</b>プロパティの使用は任意ですが、<b>AutoCompleteCustomSource</b>を使用するためには、<b>AutoCompleteSource</b>プロパティをCustomSourceに設定する必要があります。</para><para /><para><b>AutoCompleteMode</b>プロパティと<b>AutoCompleteSource</b>プロパティは組み合わせて使用する必要があります。 </para></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteMode">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> のオートコンプリートの動作を制御するオプションを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteMode" /> 値の１つ。値は AutoAppend、AutoSuggest、AutoSuggestAppend、None のいずれかです。<br />既定値は <b>None</b> です。</value>
      <remarks>
        <para>
          <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteCustomSource" />、<b>AutoCompleteMode</b>、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteSource" />の各プロパティを使用して、入力された文字列をあらかじめ用意したすべての文字列と前方一致で比較することによって入力文字列を自動的に補完する<b>GcTextBox</b>を作成できます。これは、<b>GcTextBox</b>コントロールにURL、アドレス、ファイル名、コマンドなどを入力する場合に役立ちます。</para>
        <para />
        <para>
          <b>AutoCompleteCustomSource</b>プロパティの使用は任意ですが、<b>AutoCompleteCustomSource</b>を使用するためには、<b>AutoCompleteSource</b>プロパティを<b>CustomSource</b>に設定する必要があります。</para>
        <para />
        <para>
          <b>AutoCompleteMode</b>プロパティと<b>AutoCompleteSource</b>プロパティは組み合わせて使用する必要があります。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteSource">
      <summary>オートコンプリートで使用される補完文字列のソースを指定する値を取得または設定します。</summary>
      <value>System.Windows.Forms.AutoCompleteSource値の1つ。選択肢は、AllSystemSources、AllUrl、FileSystem、HistoryList、RecentlyUsedList、CustomSource、Noneです。<br />デフォルト値は<b>None</b>です。</value>
      <remarks>
        <para>
          <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteCustomSource" />、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteMode" />、<b>AutoCompleteSource</b>の各プロパティを使用して、入力された文字列をあらかじめ用意したすべての文字列と前方一致で比較することによって入力文字列を自動的に補完する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />を作成できます。これは、<b>GcTextBox</b>コントロールにURL、アドレス、ファイル名、コマンドなどを入力する場合に役立ちます。</para>
        <para />
        <para>
          <b>AutoCompleteCustomSource</b>プロパティの使用は任意ですが、<b>AutoCompleteCustomSource</b>を使用するためには、<b>AutoCompleteSource</b>プロパティを<b>CustomSource</b>に設定する必要があります。</para>
        <para />
        <para>
          <b>AutoCompleteMode</b>プロパティと<b>AutoCompleteSource</b>プロパティは組み合わせて使用する必要があります。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoConvert">
      <summary>入力された文字をフィールドの設定に従って自動的に変換するかどうかを取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>文字を自動変換します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>文字の自動変換をしません。</description>
          </item>
        </list> 既定値は<b>True</b>です。</value>
      <remarks>
        <para>
          <b>AutoConvert</b>プロパティをTrueに設定すると、変換可能なすべての文字が入力マスクに従って自動的に変換されます。たとえば、入力マスクを"A"に設定した場合、小文字を入力すると自動的に大文字に変換されます。</para>
        <para>全角文字マスクに半角文字を入力した場合、入力した文字は自動的に全角に変換されます。また、コントロールで半角文字のみが許可されている場合には、全角のスペースは自動的に半角のスペースに変換されます。 </para>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Format" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AllowSpace" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.BorderStyle">
      <summary>コントロールの境界線の種類を取得または設定します。</summary>
      <value>境界線スタイルを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.BorderStyle" />列挙体。<br />デフォルト値は<b>BorderStyle.Fixed3D</b>です。</value>
      <remarks>
        <b>BorderStyle</b>プロパティを使用することで、デフォルトの3次元コントロールに加えて、境界線のないコントロールやフラットスタイルのコントロールを作成できます。この<b>BorderStyle</b>がBorderStyle.FixedSingleの場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.SingleBorderColor" />プロパティによって境界線の色を変更できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.CountWrappedLine">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLineCount" />プロパティによって行数を制限するときに折り返し行をカウントするかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>折り返し行をカウントするかどうかを示す<see langword="bool" />値。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>
        <b>CountWrappedLine</b>プロパティが<see langword="true" />の場合は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />プロパティを<see langword="true" />に設定し、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLineCount" />プロパティをゼロ以外の値に設定します。この<b>GcTextBox</b>に入力できるテキストの行数は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLineCount" nolink="true" />の値未満に制限されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLineCount" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DisplayAlignment">
      <summary>コントロールに入力フォーカスがないときの水平方向のテキストの配置を取得または設定します。</summary>
      <value>コントロール内でのテキストの配置方法を指定する <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DisplayAlignment" /> 列挙値の１つ。<br />既定値は <b>DisplayAlignment.None</b> です。</value>
      <remarks>このプロパティは、文字間隔設定の異なるテキストを表示するために使用されます。<note>この <b>GcTextBox</b> のテキストがこのコントロールの幅より長い場合、文字間隔効果はなくなります。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDown">
      <summary>ドロップダウン機能のカスタマイズに使用されるドロップダウン設定を取得します。</summary>
      <value>ドロップダウンウィンドウの設定を含む <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDown" /> インスタンス。</value>
      <remarks>この<b>DropDown</b>プロパティを設定することで、ドロップダウンの動作とウィンドウの外観をカスタマイズできます。カスタマイズできる項目には、ドロップダウンを表示するかどうか、ドロップダウンをサイズ変更可能にするかどうか、ドロップダウンウィンドウの方向、ドロップダウンウィンドウの影を表示するかどうか、開閉時のアニメーションなどがあります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownEditor">
      <summary>ドロップダウンエディタの設定を取得します。</summary>
      <value>ドロップダウンエディタの設定を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownEditor" />インスタンス。</value>
      <remarks>この <b>DropDownEditor</b> プロパティを設定することで、ドロップダウンウィンドウをカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DroppedDown">
      <summary>ドロップダウンウィンドウがドロップダウンしているかどうかを示す値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>ドロップダウン部分が表示されています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>ドロップダウン部分が閉じられています。</description>
          </item>
        </list>
      </value>
      <remarks>このプロパティをtrueに設定することは、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Drop" />メソッドを使用するのと同じです。<note><b>GcTextBox</b>が無効または非表示の場合、このプロパティは無効です。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDown" />.<see cref="P:GrapeCtiy.Win.Editors.DropDown.AllowDrop" />プロパティがfalseの場合にも、このプロパティは無効になります。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Ellipsis">
      <summary>
        <b>GcTextBox</b> のテキストが <b>GcTextBox</b> の指定された長さを超えていることを表す省略記号（...）の表示方法を示す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" />列挙体。<b>None</b>は、省略記号文字列が表示されないことを意味します。<b>EllipsisEnd</b>は、文字列の末尾を文字単位でトリミングします。<b>EllipsisPath</b>は、文字列の中央を文字単位でトリミングします。<b>EllipsisEnd</b>は、文字列の末尾を単語単位でトリミングします。<br />デフォルト値は<b>EllipsisMode.None</b>です。</value>
      <remarks>
        <b>Ellipsis</b>プロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />を使用する場合にのみ効果があります。テキストがコントロールの幅より長くて、なおかつコントロールにフォーカスがないときは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.EllipsisString" />プロパティで指定された省略記号文字列が表示されます。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b>が有効な<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" />項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.EllipsisString">
      <summary>テキストの幅がコントロールより長い場合に省略記号として表示する文字列を取得または設定します。</summary>
      <value>省略記号として使用する文字列を示す <b>string</b> 値。<br />既定値は <b>(...)</b> です。</value>
      <remarks>このプロパティで指定した文字列は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Ellipsis" /> が <b>EllipsisMode.EllipsisEnd</b> または <b>EllipsisMode.EllipsisPath</b> に設定されている場合に使用されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.FlatStyle">
      <summary>コントロールのフラットスタイルを取得または設定します。</summary>
      <value>GcTextBoxコントロールのフラットな外観を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx" />列挙体。<br />デフォルト値は<b>FlatStyleEx.Standard</b>です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Font">
      <summary>コントロールによって表示されるテキストのフォントを取得または設定します。</summary>
      <value>コントロールによって表示されるテキストに適用する<see cref="T:System.Drawing.Font" />。 既定値は<see cref="P:System.Windows.Forms.Control.DefaultFont" /> プロパティの値です。</value>
      <remarks>
        <para>
          <b>Font</b>プロパティはアンビエントプロパティです。アンビエントプロパティとは、明示的に設定しない場合に親コントロールから取得されるコントロールプロパティです。たとえば<see cref="T:System.Windows.Forms.Button" />は、デフォルトでは親の<see cref="T:System.Windows.Forms.Form" />と同じ<see cref="P:System.Windows.Forms.Control.BackColor" />を持ちます。アンビエントプロパティの詳細については、<see cref="T:System.Windows.Forms.AmbientProperties" />クラスまたは<see cref="T:System.Windows.Forms.Control" />クラスの概要を参照してください。</para>
        <para />
        <para>
          <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Format">
      <summary>入力可能な文字種を指定する書式を取得または設定します。</summary>
      <value>コントロールにどのようなテキストを入力できるかを示す文字列。<br />デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>このプロパティは、入力できる文字と記号の種類を指定します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AllowSpace" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoConvert" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GridLine">
      <summary>各グリッド線のスタイルを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> を取得または設定します。</summary>
      <value>各グリッド線のスタイルを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</value>
      <remarks>このプロパティは、各テキスト行の間にグリッド線が必要な場合に使用されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.HighlightText">
      <summary>コントロールがフォーカスを受け取ったときに、テキストを選択するかどうかを取得または設定します。</summary>
      <value>コントロールがフォーカスを取得したときにすべてのテキストが選択される場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>
        <para>このプロパティを使用して、コントロールがフォーカスを受け取ったときにコントロールのすべてのテキストを強調表示できます。</para>
        <para>
          <see langword="true" />の場合は、内容が選択されます。</para>
        <para>
          <see langword="false" />（デフォルト値）の場合は、内容は選択されず、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionStart" />プロパティと<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.SelectionLength" />プロパティの設定に従ってキャレットが配置されます。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.IntegralHeight">
      <summary>部分的な行が表示されないように<b>GcTextBox</b>をサイズ変更するかどうかを示す値を取得または設定します。</summary>
      <value>部分的な行が表示されないように編集コントロールをサイズ変更するかどうかを示す<see langword="bool" />値。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>このプロパティを<see langword="true" />に設定すると、テキスト行が一部だけ表示されるのを避けるため、コントロールのサイズが自動的に変更されます。フォームのスペース要件に基づいて<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />の元のサイズを維持する場合は、このプロパティをfalseに設定します。<note>このプロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />プロパティが<see langword="true" />の場合にのみ有効です。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ItemHeight">
      <summary>現在設定されているフォントの行の高さを取得します。</summary>
      <value>行の高さを示す<b>int</b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.LineSpace">
      <summary>隣接する２つの行の行間隔を取得または設定します。</summary>
      <value>2つの行の行間隔を示す<b>int</b>値。<br />デフォルト値は<b>0</b>です。</value>
      <remarks>
        <b>LineSpace</b>プロパティは、テキスト行の間隔を示します。<note>このプロパティは、Multilineプロパティがtrueの場合にのみ有効です。 </note></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値がゼロ未満の場合は、ArgumentOutOfRangeExceptionがスローされます。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Lines">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />コントロールのテキストの行を取得または設定します。</summary>
      <value>
        <b>
          <see cref="T:System.String">String</see>
        </b>型配列</value>
      <remarks>この配列内の各要素がテキストボックスコントロールの１行のテキストになります。編集コントロールの <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" /> プロパティが true に設定されている場合に、テキストに改行文字が現れると、改行文字の後ろに続くテキストが配列の新しい要素に追加されて、別の行に表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLength">
      <summary>テキストコントロールに入力できる最大文字数を取得または設定します。</summary>
      <value>コントロールに入力できる文字数またはバイト数（文字数とバイト数のどちらであるかは<b>LengthAsByte</b>プロパティによって決定されます）。<br />デフォルト値は<b>ゼロ</b>です。</value>
      <remarks>
        <b>MaxLength</b>プロパティを使用して、ユーザーがコントロールに入力できる文字数を制限できます。デフォルト値は0で、文字数が制限されないことを示します。0より大きい任意の数を指定すると、それが最大文字数になります。表示結果には、この<b>MaxLength</b>プロパティと共に<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLengthUnit" />も影響します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値がゼロ未満の場合は、ArgumentOutOfRangeExceptionがスローされます。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLengthCodePage">
      <summary>バイト単位の最大長のカウントに使用されるエンコーディングのコードページを取得または設定します。</summary>
      <value>エンコーディングのコードページを示す<see cref="T:System.Int32" />値。<b />デフォルト値は-1で、エンコーディングを使用せずに組み込みのバイト長カウント方法を使用することを示します。</value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLength" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLengthUnit" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLengthUnit">
      <summary>コントロールに格納する最大文字数をバイト、文字、テキスト要素のいずれに基づいて取り扱うかを取得または設定します。</summary>
      <value>
        <b>MaxLength</b> がバイトに基づく場合は true。文字に基づく場合は false。<br />既定値は <b>LengthUnit.Char</b> です。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLength" />プロパティをカウントする際の単位を決定します。値が<b>LengthUnit.Byte</b>の場合、MaxLengthはバイト単位でカウントされます。値が<b>LengthUnit.Char</b>の場合、MaxLengthは文字単位でカウントされます。値が<b>LengthUnit.TextElement</b>の場合、MaxLengthはテキスト要素単位でカウントされます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLineCount">
      <summary>最大の行数を取得または設定します。</summary>
      <value>最大の行数を示す <b>int</b> 値。<br />既定値は<b>ゼロ</b>です。</value>
      <remarks>
        <b>MaxLineCount</b>は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.CountWrappedLine" />プロパティが<see langword="true" />で、なおかつ<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Muilitline" />プロパティも<see langword="true" />であるときに、入力できるテキストの行数を制限します。このプロパティのデフォルト値はゼロで、制限がないことを意味します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.CountWrappedLine" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline">
      <summary>複数行のテキストの入力と表示を可能にするかどうかを取得または設定します。</summary>
      <value>コントロールが複数行コントロールの場合はtrue。それ以外の場合はfalse。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>
        <para>ユーザーが複数行コントロールにテキストボックスの幅を超えるテキストを入力すると、テキストが折り返されます。</para>
        <para>サイズの大きいコントロールには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />プロパティを使用してスクロールバーを追加することもできます。水平スクロールバーが指定されていない場合、複数行コントロールのテキストは自動的に折り返されます。</para>
        <note type="cnotes">デフォルトボタンのないフォームでは、［Enter］キーを押すと、複数行コントロールの次の行にフォーカスが移動します。デフォルトボタンがある場合、次の行に移動するには［Ctrl］+［Enter］を押す必要があります。また、タブを挿入するには［Ctrl］+［Tab］を押す必要があります。 </note>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.PasswordChar">
      <summary>単一行のテキストコントロールで、パスワードの文字の代わりに表示するプレースホルダ文字を取得または設定します。</summary>
      <value>単一行コントロールに入力された文字をマスクするために使用される文字。入力された文字をマスクしない場合は、このプロパティの値を0（文字値）に設定します。デフォルト値は0（文字値）です。</value>
      <remarks>
        <para>
          <b>PasswordChar</b>を使用して、ダイアログボックスにパスワードフィールドを作成できます。任意の半角文字を使用できますが、Windowsベースのアプリケーションではアスタリスク（*）（Chr(42)）を使うのが一般的です。</para>
        <para>このプロパティは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" />プロパティには影響しません。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" nolink="true" />にはユーザーが入力した文字列、またはコードから設定した文字列がそのまま格納されます。<b>PasswordChar</b>を0（デフォルト値）に設定すると、コントロールの実際のテキストが表示されます。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.PasswordRevelationMode">
      <summary>パスワード可視化モードを取得または設定します。</summary>
      <value>パスワード可視化モードを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.PasswordRevelationMode" />値の1つ。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode.None">None</see>で、入力したパスワードが可視化されないことを示します。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.PreferredHeight">
      <summary>コントロールに最適な高さを取得します。</summary>
      <value>コントロールの最適な高さを示す<b>int</b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>入力候補値を示す <b>string</b> 値。<br />既定値は <see cref="F:System.String.Empty" /> です。</value>
      <remarks>
        <b>RecommendedValue</b>プロパティはユーザーへのヒントを提供するもので、値が完全に入力されていないときに表示されます。値の入力中に特定のショートカットキーまたはキーの組み合わせを押すと、入力候補値を取得できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBarMode">
      <summary>スクロールバーの表示方法を取得または設定します。</summary>
      <value>内容がコントロールの長さを超えると同時にスクロールバーが表示されるかどうかを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBarMode" />列挙値の1つ。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Fixed" />です。</value>
      <remarks>スクロールバーを表示するには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" /> プロパティを <see langword="true" /> に設定する必要があります。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Fixed" /> に設定した場合、スクロールバーは常に表示されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Automatic" /> に設定した場合は、コントロールの内容がコントロールの長さを超えたときにのみ、スクロールバーが表示されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars">
      <summary>複数行の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> コントロールにどのスクロールバーを表示するかを取得または設定します。</summary>
      <value>複数行の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> コントロールにスクロールバーを表示しないか、水平スクロールバーを表示するか、垂直スクロールバーを表示するか、両方のスクロールバーを表示するかを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" /> 列挙値の１つ。<br />既定値は <b>None</b> です。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" /> プロパティが <b>WrapMode.WordWrap</b> または <b>WrapMode.CharWrap</b> に設定されている場合は、<b>ScrollBars</b> プロパティの値に関わらず、水平スクロールバーは表示されません。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBarMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ShowOverflowTip">
      <summary>オーバーフローツールチップを表示するかどうかを取得または設定します。</summary>
      <value>テキストがオーバーフローしているコントロールの上にマウスが置かれたときにオーバーフローツールチップを表示する場合は<see langword="true" />。それ以外の場合はfalse。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>オーバーフローツールチップは、次の条件が両方とも満たされている場合に表示されます。<br />このコントロールの<b>Focused</b>プロパティがfalseである。<br />マウスポインタがコントロールの上にある。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを示す値を取得または設定します。</summary>
      <value>入力候補値を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>
        <b>ShowRecommendedValue</b>が<see langword="true" />の場合、値が完全に入力されていないときに<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.RecommendedValue" />プロパティの値が表示されます。それ以外の場合、<b>RecommendedValue</b>プロパティの値は表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.SideButtons">
      <summary>この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> の sideButtons を取得します。</summary>
      <value>コレクションを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> 値。</value>
      <remarks>
        <b>SideButtons</b>は追加または削除できます。これには<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.SingleBorderColor">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.BorderStyle" /> が <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" /> のときの色を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.BorderStyle" />が<see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />のときの境界線の色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.WindowFrame" />です。</value>
      <remarks>この <see cref="T:System.Drawing.Color" /> は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.BorderStyle" /> が <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" /> のときにのみ有効です。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.BorderStyle" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text">
      <summary>コントロールの現在のテキストを取得または設定します。</summary>
      <value>コントロールの現在のテキストを表す<b><see cref="T:System.String">String</see></b>値。<br />既定値は<see cref="string.Empty" />です。</value>
      <remarks>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />に複数行のテキストを表示するには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />プロパティをtrueに設定します。複数行の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" nolink="true" />のテキストを取得または設定するには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Lines" />プロパティを使用します。コントロールに入力できるテキストの量は、使用可能なシステムメモリによってのみ制限されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.UseSystemPasswordChar">
      <summary>システムパスワード文字を使用するかどうかを示す値を取得または設定します。</summary>
      <value>システムパスワード文字を使用するかどうかを示す<see langword="bool" />値。この値が<see langword="true" />の場合は、パスワードを表示するときにシステム設定から取得した文字が使用されます。それ以外の場合、システムパスワード文字は使用されません。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>
        <b>UseSystemPasswordChar</b> プロパティは <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.PasswordChar" /> プロパティよりも優先されます。<b>UseSystemPasswordChar</b> が <see langword="true" /> に設定されている場合は常にデフォルトのシステムパスワード文字が使用され、<b>PasswordChar</b> に設定された文字は無視されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> コントロールが複数行の場合の折り返しルールを取得または設定します。</summary>
      <value>テキストの折り返しルールを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" /> 列挙体。<br />既定値は <b>WrapMode.WordWrap</b> です。</value>
      <remarks>
        <b>WrapMode</b>プロパティはテキスト折り返し動作に影響を与えます。値が<b>WrapMode.WordWrap</b>の場合、テキストは単語単位で折り返されます。値が<b>WrapMode.CharWrap</b>の場合、テキストは文字単位で折り返されます。<note>このプロパティは、Multilineがtrueの場合にのみ有効です。 </note></remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AboutBox">
      <summary>バージョン情報ダイアログボックスを表示します。</summary>
      <remarks>このメソッドが呼び出された後、製品情報を含むウィンドウが表示されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ApplyRecommendedValue">
      <summary>入力候補値をコントロールに適用します。</summary>
      <remarks>
        <b>ApplyRecommendedValue</b>メソッドは主にGcShortcutの動作に使用されます。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ShowRecommendedValue" />プロパティが<see langword="true" />の場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.RecommendedValue" />を受け入れることができます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.CreateAccessibilityInstance">
      <summary>新しいユーザー補助オブジェクトを作成します。</summary>
      <returns>新しい<see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Dispose(System.Boolean)">
      <summary>このコントロールと子コントロールが使用しているアンマネージリソースを解放します。オプションで、マネージリソースも解放します。</summary>
      <param name="disposing">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>マネージリソースとアンマネージリソースの両方を解放します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>アンマネージリソースだけを解放します。</description>
          </item>
        </list>
      </param>
      <remarks>
        <see cref="T:System.Windows.Forms.Control" />の使用が終わったら、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Dispose(System.Boolean)" />を呼び出します。<b>Dispose</b>メソッドは、<see cref="T:System.Windows.Forms.Control" nolink="true" />を使用できない状態にします。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Dispose(System.Boolean)" nolink="true" />を呼び出した後で、<see cref="T:System.Windows.Forms.Control" nolink="true" />へのすべての参照を解放し、<see cref="T:System.Windows.Forms.Control" nolink="true" />によって占有されていたメモリをガベージコレクターがクリアできるようにする必要があります。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Drop">
      <summary>ドロップダウンエディットウィンドウをドロップダウン表示します。</summary>
      <remarks>
        <para>このメソッドは、データ入力を支援するためにユーザーにドロップダウンエディタを提示します。コントロールが無効であるか、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDown" />.<see cref="P:GrapeCtiy.Win.Editors.DropDown.AllowDrop" />プロパティがfalseの場合、このメソッドの呼び出しは無視されます。</para>
        <para>ドロップダウンエディタが表示される直前に、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownOpening" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownOpened" />イベントが発生します。</para>
        <note>このメソッドは、コントロールに入力フォーカスがない場合、フォーカスを取得しようとします。 </note>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetCharFromPosition(System.Drawing.Point)">
      <summary>指定した位置の一番近くにある文字を取得します。</summary>
      <param name="point">一番近くにある文字をシークする位置を表す<b><see cref="T:System.Drawing.Point">Point</see></b>値。</param>
      <returns>指定した位置の一番近くにある文字を表す<b><see cref="T:System.Char">Char</see></b>値。</returns>
      <remarks>
        <para>
          <i>point</i>パラメータに指定した位置がコントロールのクライアント領域上にある場合は、 <i>point</i>で指定した位置の一番近くにある文字列の最初の文字が返されます。 </para>
        <para>
          <i>point</i>パラメータに指定した位置がコントロールのクライアント領域外にある意場合は、 '\0'値が返されます。 </para>
        <para> このメソッドを使用して、コントロール内の特定位置の近くにある文字を確認できます。 その後、この値を使用して、その位置にあるテキストを操作できます。 </para>
        <para> 近くにある文字のインデックスを取得するには、 <b><see cref="M:GrapeCity.Win.Editors.GcTextBox.GetCharIndexFromPosition(System.Drawing.Point)">Point)</see></b> メソッドを 使用します。 </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetCharIndexFromPosition(System.Drawing.Point)">
      <summary>指定した位置の一番近くにある文字のインデックスを取得します。</summary>
      <param name="point">検索する位置を表す<b><see cref="T:System.Drawing.Point">Point</see></b>値。</param>
      <returns>指定した位置の0から始まる文字インデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
      <remarks>このメソッドは、pointパラメーターで指定された位置に最も近い文字のインデックスを返します。文字インデックスは、コントロール内のテキスト（スペースを含む）の0から始まるインデックスです。このメソッドにマウスの座標を渡すことによって、マウスが配置されているテキストの位置を判断できます。これは、ユーザーがコントロールのテキスト内の単語にマウスポインタを合わせたときにタスクを実行する場合などに役立ちます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
      <returns>既定のショートカット機能を含む<b>Dictionary</b><b>&lt;</b><b>Keys, string</b><b>&gt;</b>インタフェースを実装したオブジェクト。</returns>
      <remarks>
        <b>GetDefaultShortcuts</b> メソッドはコントロールが作成されるときに派生クラスに対して既定のショートカット機能の設定を行います。<see langword="null" />を設定した場合には、ショートカット機能は何も設定されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetDefaultSideButtonTypes">
      <summary>既定のサイドボタンを取得します。</summary>
      <returns>. すべてのタイプのデフォルトサイドボタンを含む <see cref="T:System.Type" /> リスト。</returns>
      <remarks>派生クラスで<b>GetDefaultSideButtonTypes</b>メソッドを使用して、コントロールが作成されるときのデフォルトサイドボタンをカスタマイズできます。戻り値が<see langword="null" />の場合、コントロールにサイドボタンは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetFirstCharIndexFromLine(System.Int32)">
      <summary>指定した行の先頭にある文字のインデックスを取得します。</summary>
      <param name="lineNumber">最初の文字インデックスを取得する行番号。</param>
      <returns>指定した行における0から始まる文字のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
      <remarks>パラメーターが、コントロールの<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetLineCount" />メソッドから返される行数以上の場合、このメソッドは-1を返します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">パラメーターがゼロ未満のときにスローされます。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetFirstCharIndexOfCurrentLine">
      <summary>現在キャレットが置かれている行の先頭文字のインデックスを取得します。</summary>
      <returns>現在の行における0から始まる文字のインデックスを表す<b><see cref="T:System.Inte32">Inte32</see></b>値。</returns>
      <remarks>
        <b>Text</b>プロパティがstring.Emptyの場合、このメソッドはゼロを返します。それ以外の場合は行数を返します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetLineCount">
      <summary>複数行に設定したテキストコントロールの行数を返します。</summary>
      <returns>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />コントロールの行数を示す<see cref="T:System.Int32" />値。</returns>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" />プロパティが<see cref="F:System.String.Empty" />の場合、このメソッドはゼロを返します。それ以外の場合は行数を返します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetLineFromCharIndex(System.Int32)">
      <summary>コントロールのテキスト内の指定した文字位置から行番号を取得します。</summary>
      <param name="index">検索する文字インデックスの位置を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <returns>文字インデックスを含む行の0から始まる行番号を表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
      <remarks>
        <para>このメソッドを使用すると、indexパラメーターに指定した文字インデックスに基づいて行番号を確認できます。コントロール内のテキストの最初の行は、値0を返します。GetLineFromCharIndexメソッドは、インデックスで指定された文字が位置するコントロール内の物理的な行番号を返します。</para>
        <para />
        <para>たとえば、コントロール内のテキストの最初の論理行の一部が次の行に折り返している場合、指定したインデックス位置にある文字が2番目の物理行に折り返していれば、GetLineFromCharIndexメソッドは1を返します。WordWrapがfalseに設定されている場合は、行のどの部分も次の行に折り返されないので、このメソッドは指定した文字インデックスに対して0を返します。</para>
        <para />
        <para>このメソッドを使用して、特定の文字インデックスが位置する行を確認できます。たとえば、Findメソッドを呼び出してテキスト内で単語を検索し、見つかった位置の文字インデックスを取得できます。Findメソッドによって返された文字インデックスを指定してこのメソッドを呼び出すと、その単語がどの行に位置するかがわかります。 </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetPositionFromCharIndex(System.Int32)">
      <summary>指定した文字インデックスが示す、コントロール内の位置を取得します。</summary>
      <param name="index">位置の取得対象とする文字のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <returns>指定した文字の位置を表す<b><see cref="T:System.Drawing.Point">Point</see></b>値。</returns>
      <remarks>パラメーターがゼロより小さい場合、または全文字数より大きい場合、このメソッドは<b>-1</b>を返します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetPreferredSize(System.Drawing.Size)">
      <summary>コントロールが収まる矩形領域のサイズを取得します。</summary>
      <param name="proposedSize">調整対象となる<b><see cref="System.Drawing.Size">Size</see></b>値。</param>
      <returns>矩形の幅と高さを表す<see cref="T:System.Drawing.Size" />型オブジェクトの順序付きペア。</returns>
      <remarks>GetPreferredSizeの動作はコントロールによって異なります。LayoutEngineは、返されたサイズをコントロールに割り当てることができない場合があります。proposedSizeパラメーターによって示された制約よりも大きいサイズを返すことは可能ですが、制約が小さくなるのに合わせてproposedSizeも小さくする必要があります。たとえば、GetPreferredSize(new Size(100, 0))をGetPreferredSize(new Size(200, 0))より大きくしないでください。例外は、proposedSizeが0またはSize.Emptyの場合です。これらは制約なしとして定義されています。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[])">
      <summary>既定のサイドボタンを初期化します。</summary>
      <param name="defaultSideButtons">初期化する既定のサイドボタン。</param>
      <remarks>派生クラスで <b>InitializeDefaultSideButtons</b> メソッドを使用して、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.GetDefaultSideButtonTypes" /> メソッドによって作成されるデフォルトサイドボタンを初期化できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.InputNewLine">
      <summary>現在のキャレット位置に改行文字を挿入します。</summary>
      <remarks>このメソッドを使用して、既存のテキストに改行を追加できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>KeyExit イベントを使用してフォーカスを移動します。</summary>
      <param name="e">イベントデータを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> インスタンス。</param>
      <remarks>
        <b>MoveFocusByKeyExit</b>メソッドが呼び出されると、フォーカスが移動します。ExitKeys.CharInput、ExitKeys.CtrlRight、ExitKeys.NextControl、およびExitKeys.Rightはイグジットキーです。Tabはフォーカスを前方に移動しますが、その他のExitKeysはフォーカスを後方に移動します。<br /><b>継承時の注意: </b>このメソッドを継承クラスでオーバーライドする場合は、基本メソッドを呼び出す必要があります。そうしなければ、フォーカスは移動しません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnDropDownClosed(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownClosed" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownClosed</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownClosed</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownClosed</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnDropDownClosing(GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownClosing" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownClosingEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownClosing</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownClosing</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownClosing</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnDropDownOpened(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownOpened" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownOpened</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownOpened</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownOpened</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnDropDownOpening(GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownOpening" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownOpening</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownOpening</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownOpening</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnEnabledChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnableChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEnableChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnableChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnEnter(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Enter" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnter</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEnter</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnter</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnGotFocus(System.EventArgs)">
      <summary>GotFocus イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnGotFocus</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnGotFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnGotFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnImeModeChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.ImeModeChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnImeModeChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnImeModeChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnImeModeChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnLeave(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Leave">Leave</see> /&gt; イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnLeave</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnLeave</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnLeave</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnMultilineChanged(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MultilineChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnMultilineChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnMultilineChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnMultilineChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.OnVisibleChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnVisibleChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnVisibleChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnVisibleChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>このコントロールの指定した境界を設定する作業を実行します。</summary>
      <param name="x">
        <b>
          <see cref="P:System.Windows.Forms.Control.Left">Left</see>
        </b> プロパティを設定する <b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="y">
        <b>
          <see cref="P:System.Windows.Forms.Control.Top">Top</see>
        </b> プロパティを設定する <b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="width">
        <b>
          <see cref="P:System.Windows.Forms.Control.Width">Width</see>
        </b> プロパティを設定する <b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="height">
        <b>
          <see cref="P:System.Windows.Forms.Control.Height">Height</see>
        </b> プロパティを設定する <b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="specified">境界の設定に使用される引数を指定する<b><see cref="T:System.Windows.Forms.BoundsSpecified">BoundsSpecified</see></b> 値のビットごとの組み合わせ。列挙体。</param>
      <remarks>通常、境界に対応する各パラメーターは、specifiedパラメーターを除き、それぞれの現在の値を指定して渡されます。たとえば、コントロールの現在のインスタンスに関連するHeightプロパティ、Widthプロパティ、LocationプロパティのXまたはYプロパティを渡すことができます。ただし、渡した値はすべて受け入れられ、コントロールに適用されます。boundsSpecifiedパラメーターは、アプリケーションによって変更されたコントロールの境界の要素を表します。たとえば、コントロールのSizeを変更した場合、boundsSpecifiedパラメーターの値はBoundsSpecifiedのSize値になります。ただし、Dockプロパティが設定された結果としてSizeが調整された場合、boundsSpecifiedパラメーターの値はBoundsSpecifiedのNone値になります。<br /><b>継承時の注意: </b>派生クラスでSetBoundsCoreをオーバーライドする場合は、基本クラスのSetBoundsCoreメソッドを呼び出して、コントロールの境界を強制的に変更してください。派生クラスでは、SetBoundsCoreメソッドにサイズの制約を追加できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.SwitchDropDown">
      <summary>ドロップダウンウィンドウの状態を切り替えます。</summary>
      <remarks>このメソッドは主にGcShortcutの動作に使用されます。ドロップダウンウィンドウが閉じている場合、このメソッドを使用するとドロップダウンウィンドウが開きます。ドロップダウンウィンドウが開いている場合、このメソッドを使用するとドロップダウンウィンドウが閉じます。このメソッドは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DropDown.AllowDrop" />プロパティが<see langword="false" />の場合には何もしません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WndProc(System.Windows.Forms.Message@)">
      <summary>ウィンドウメッセージを処理します。</summary>
      <param name="m">処理対象の<b><see cref="T:System.Windows.Forms.Message">Message</see></b>。</param>
      <remarks>
        <para>すべてのメッセージは、<see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />メソッドを通じてフィルタ処理された後に<b>WndProc</b>メソッドに送られます。</para>
        <para />
        <para>
          <b>WndProc</b>メソッドは、Windows WindowProc関数に正確に対応しています。Windowsメッセージの処理方法の詳細については、MSDNライブラリ（http://msdn.microsoft.com/library/ja）にあるWindowsプラットフォームSDKのリファレンスでWindowProc関数のドキュメントを参照してください。</para>
        <para />
        <para>
          <br />
          <b>継承時の注意: </b>継承コントロールでは、自身で処理できないメッセージを処理するために、基本クラスの<b>WndProc</b>メソッドを呼び出す必要があります。 </para>
      </remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTabChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" />プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<b>AcceptsTab</b> プロパティがプログラムによって変更された場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownClosed">
      <summary>ドロップダウンウィンドウが閉じたときに発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがプログラムまたはユーザー操作によって閉じた場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownClosing">
      <summary>ドロップダウンウィンドウが閉じる前に発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがコードの実行またはユーザー操作によって閉じる場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownOpened">
      <summary>ドロップダウンウィンドウが開いたときに発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがプログラムまたはユーザー操作によって開いた場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownOpening">
      <summary>ドロップダウンウィンドウが開く前に発生します。</summary>
      <remarks>このイベントは、ドロップダウンウィンドウがコードの実行またはユーザー操作によって開く場合に発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MultilineChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" /> プロパティの値が変更されたときに発生します。</summary>
      <remarks>このイベントは、<b>Multiline</b> プロパティがプログラムによって変更された場合に発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType">
      <summary>
        <b>GcTextBoxCellType</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AcceptsCrLf">
      <summary>文字列をコピー、切り取り、および貼り付けるときの CrLf 文字の処理方法を示す値を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときの CrLf 文字の処理モードを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 列挙体。<br />既定値は <b>CrLfMode.NoControl</b> です。</value>
      <remarks>
        <b>CrLf.Cut</b> に設定すると、<b>GcTextBox</b> で文字列をコピー、切り取り、および貼り付けるときに標準の <b>TextBox</b> と同じように動作します。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AcceptsTabChar">
      <summary>文字列をコピー、切り取り、および貼り付けるときのTab文字の処理方法を示す値を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときのTab文字の処理モードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" />列挙体。<br />デフォルト値は<b>TabCharMode.NoControl</b>です。</value>
      <remarks>このプロパティはセルが編集モードのときにのみ効果があります。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b>が有効な<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode" />項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AllowSpace">
      <summary>入力可能なスペースの種類を取得または設定します。</summary>
      <value>入力できるスペース文字の種類を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AllowSpace" />列挙体。<br />デフォルト値は<b>AllowSpace.Both</b>です。</value>
      <remarks>
        <para>
          <b>AllowSpace</b>プロパティを使用して、テキストに入力できるスペースの種類を指定します。</para>
        <para />
        <para>
          <b>AllowSpace</b>が<b>None</b>の場合、この<b>GcTextBox</b>にはスペースを入力できません。<b>AllowSpace.Narrow</b>を指定すると、半角スペースを入力できます。<b>AllowSpace.Wide</b>を指定すると、全角スペースを入力できます。<b>AllowSpace.Both</b>を指定すると、すべての種類のスペースを入力できます。</para>
        <para />
        <note>AutoConvertプロパティが<see langword="true" />で、AllowSpaceが<b>AllowSpace.Wide</b>の場合、ユーザーがコントロールに半角スペースを入力すると、自動的に半角スペースが全角スペースに変換されます。この動作は他の設定についても同じです。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Format(System.Object)" />プロパティは常に<b>AllowSpace</b>プロパティと組み合わせて使用されます。 </note>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AutoConvert" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AlternateText">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> コントロールの代替テキストを取得します。</summary>
      <value>代替テキストを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText" /> 値。</value>
      <remarks>現在の値が<see cref="F:System.String.Empty" />で、このコントロールに入力フォーカスがある場合、この<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" />プロパティは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText.Null" />設定（nullではない）と等しくなります。現在の値が<see langword="null" />で、このコントロールに入力フォーカスがない場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" nolink="true" />プロパティは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText.DisplayNull" />設定と等しくなります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AutoComplete">
      <summary>オートコンプリート関連の設定を取得します。</summary>
      <value>オートコンプリート。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AutoCompleteCustomSource">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteSource" /> プロパティが CustomSource に設定されている場合に使用するカスタムの <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteSource" /> と共に使用する <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" />。<br />既定値は <see langword="null" /> です。</value>
      <remarks>
        <b>AutoCompleteCustomSource</b>、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteMode" />、<b>AutoCompleteSource</b>の各プロパティを使用して、入力された文字列をあらかじめ用意したすべての文字列と前方一致で比較することによって入力文字列を自動的に補完する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />を作成できます。これは、TextBoxコントロールにURL、アドレス、ファイル名、コマンドなどを入力する場合に役立ちます。<para /><para><b>AutoCompleteCustomSource</b>プロパティの使用は任意ですが、<b>AutoCompleteCustomSource</b>を使用するためには、<b>AutoCompleteSource</b>プロパティをCustomSourceに設定する必要があります。</para><para /><para><b>AutoCompleteMode</b>プロパティと<b>AutoCompleteSource</b>プロパティは組み合わせて使用する必要があります。 </para></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AutoCompleteMode">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> コントロールのオートコンプリートの動作を制御するオプションを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteMode" /> 値の１つ。値は AutoAppend、AutoSuggest、AutoSuggestAppend、None のいずれかです。<br />既定値は <b>None</b> です。</value>
      <remarks>
        <para>
          <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteCustomSource" />、<b>AutoCompleteMode</b>、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteSource" />の各プロパティを使用して、入力された文字列をあらかじめ用意したすべての文字列と前方一致で比較することによって入力文字列を自動的に補完する<b>GcTextBox</b>を作成できます。これは、<b>GcTextBox</b>コントロールにURL、アドレス、ファイル名、コマンドなどを入力する場合に役立ちます。</para>
        <para />
        <para>
          <b>AutoCompleteCustomSource</b>プロパティの使用は任意ですが、<b>AutoCompleteCustomSource</b>を使用するためには、<b>AutoCompleteSource</b>プロパティを<b>CustomSource</b>に設定する必要があります。</para>
        <para />
        <para>
          <b>AutoCompleteMode</b>プロパティと<b>AutoCompleteSource</b>プロパティは組み合わせて使用する必要があります。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AutoCompleteSource">
      <summary>オートコンプリートで使用される補完文字列のソースを指定する値を取得または設定します。</summary>
      <value>
        <b>
          <see cref="T:System.Windows.Forms.AutoCompleteSource">AutoCompleteSource</see>
        </b>列挙体。 既定値は<b>None</b>です。 <list type="table"><listheader><term>AutoCompleteSourceの値</term><description>説明</description></listheader><item><term><b>1 - FileSystem</b></term><description>ファイル システムをソースとして指定します。</description></item><item><term><b>2 - HistoryList</b></term><description>URL (Uniform Resource Locator) を履歴リストに含めます。</description></item><item><term><b>4 - RecentlyUsedList</b></term><description>URL (Uniform Resource Locator) を最近使用した URL のリストに含めます。</description></item><item><term><b>6 - AllUrl</b></term><description><b><see cref="F:System.Windows.Forms.AutoCompleteSource.HistoryList">HistoryList</see></b> および <b><see cref="F:System.Windows.Forms.AutoCompleteSource.RecentlyUsedList">RecentlyUsedList</see></b> に相 当するものをソースとして指定します。 </description></item><item><term><b>7 - AllSystemSources</b></term><description><b><see cref="F:System.Windows.Forms.AutoCompleteSource.FileSystem">FileSystem</see></b> および <b><see cref="F:System.Windows.Forms.AutoCompleteSource.AllUrl">AllUrl</see></b> に相当するものを ソースとして指定します。これは、<b><see cref="T:System.Windows.Forms.AutoCompleteMode">AutoCompleteMode</see></b> が 既定値以外の値に設定されている場合の既定値です。 </description></item><item><term><b>32 - FileSystemDirectories</b></term><description>ファイル名ではなくディレクトリ名だけがオートコンプリートの対象になることを指定します。</description></item><item><term><b>64 - CustomSource</b></term><description> 組み込みの <b><see cref="T:System.Windows.Forms.AutoCompleteStringCollection">AutoCompleteStringCollection</see></b> の 文字列をソースとして指定します。 </description></item><item><term><b>128 - None</b></term><description><b><see cref="T:System.Windows.Forms.AutoCompleteSource">AutoCompleteSource</see></b> が現在使用されていないことを 指定します。これは <b><see cref="T:System.Windows.Forms.AutoCompleteSource">AutoCompleteSource</see></b> の既定値です。 </description></item><item><term><b>256 - ListItems</b></term><description><b><see cref="T:System.Windows.Forms.ComboBox">ComboBox</see></b> の各項目がソースを表すことを指定します。 </description></item></list></value>
      <remarks>
        <para>
          <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteCustomSource" />、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoCompleteMode" />、<b>AutoCompleteSource</b>の各プロパティを使用して、入力された文字列をあらかじめ用意したすべての文字列と前方一致で比較することによって入力文字列を自動的に補完する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" />を作成できます。これは、<b>GcTextBox</b>コントロールにURL、アドレス、ファイル名、コマンドなどを入力する場合に役立ちます。</para>
        <para />
        <para>
          <b>AutoCompleteCustomSource</b>プロパティの使用は任意ですが、<b>AutoCompleteCustomSource</b>を使用するためには、<b>AutoCompleteSource</b>プロパティを<b>CustomSource</b>に設定する必要があります。</para>
        <para />
        <para>
          <b>AutoCompleteMode</b>プロパティと<b>AutoCompleteSource</b>プロパティは組み合わせて使用する必要があります。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.AutoConvert">
      <summary>入力された文字をフィールドの設定に従って自動的に変換するかどうかを取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>文字を自動変換します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>文字の自動変換をしません。</description>
          </item>
        </list> 既定値は<b>True</b>です。</value>
      <remarks>
        <para>
          <b>AutoConvert</b> プロパティを true に設定すると、変換可能なすべての文字が入力マスクに従って自動的に変換されます。たとえば、入力マスクを "A" に設定した場合、コントロールに小文字を入力すると、自動的に大文字に変換されます。</para>
        <para>全角文字入力マスクに半角文字を入力した場合、入力した文字は自動的に全角に変換されます。また、コントロールで半角文字のみが許可されている場合には、全角のスペースは自動的に半角のスペースに変換されます。 </para>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Format" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AllowSpace" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.ClearCollection">
      <summary>デザイナによる内部使用。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.DisplayAlignment">
      <summary>コントロールに入力フォーカスがないときに水平軸を表示するときのテキストの配置を取得または設定します。</summary>
      <value>コントロール内でのテキストの配置方法を指定する <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DisplayAlignment" /> 列挙値の１つ。<br />既定値は <b>DisplayAlignment.None</b> です。</value>
      <remarks>このプロパティは、文字間隔設定の異なるテキストを表示するために使用されます。<note>この <b>GcTextBox</b> のテキストがこのコントロールの幅より長い場合、文字間隔効果はなくなります。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.DropDown">
      <summary>ドロップダウン機能のカスタマイズに使用されるドロップダウン設定を取得します。</summary>
      <value>ドロップダウンウィンドウの設定を含む <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDown" /> インスタンス。</value>
      <remarks>この <b>DropDown</b> プロパティを設定することで、ドロップダウンの動作とウィンドウの外観をカスタマイズできます。このプロパティは、ドロップダウンを表示するかどうか、ドロップダウンをサイズ変更可能にするかどうか、ドロップダウンウィンドウの方向、ドロップダウンウィンドウの影、および開閉時のアニメーションを指定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.DropDownEditor">
      <summary>ドロップダウンエディタの設定を取得します。</summary>
      <value>ドロップダウンエディタの設定を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownEditor" />インスタンス。</value>
      <remarks>この <b>DropDownEditor</b> プロパティを設定することで、ドロップダウンウィンドウをカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Ellipsis">
      <summary>
        <b>GcTextBox</b> のテキストが <b>GcTextBox</b> の指定された長さを超えていることを表す省略記号（...）の表示方法を示す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" /> 列挙体。<b>None</b> は、省略記号文字列が表示されないことを意味します。<b>EllipsisEnd</b> は、文字列の末尾を文字単位でトリミングします。<b>EllipsisPath</b> は、文字列の中央部分を文字単位でトリミングします。<b>EllipsisWord</b>は、文字列の末尾を単語単位でトリミングします。<br />既定値は <b>EllipsisMode.None</b> です。</value>
      <remarks>
        <b>Ellipsis</b> プロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" /> を使用する場合にのみ効果があります。テキストがこのコントロールの幅より長くて、なおかつこのコントロールにフォーカスがないときは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.EllipsisString" /> プロパティで指定された省略記号文字列が表示されます。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.EllipsisString">
      <summary>テキストの幅がコントロールより長い場合に省略記号として表示する文字列を取得または設定します。</summary>
      <value>省略記号として使用する文字列を示す <b>string</b> 値。<br />既定値は <b>(...)</b> です。</value>
      <remarks>このプロパティで指定した文字列は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Ellipsis" /> が <b>EllipsisMode.EllipsisEnd</b> または <b>EllipsisMode.EllipsisPath</b> に設定されている場合に使用されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.FocusPosition">
      <summary>エディタがフォーカスを取得したときの初期カーソル位置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.FormatString">
      <summary>入力可能な文字種を指定する書式を取得または設定します。</summary>
      <value>コントロールへのテキストの入力書式を指定する文字列。<br />デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>このプロパティは、入力できる文字と記号の種類を指定します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AllowSpace" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AutoConvert" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GridLine">
      <summary>各グリッド線のスタイルを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> を取得または設定します。</summary>
      <value>各グリッド線のスタイルを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />。</value>
      <remarks>このプロパティは、各テキスト行の間にグリッド線が必要な場合に使用されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.LineSpace">
      <summary>隣接する２つの行の行間隔を取得または設定します。</summary>
      <value>隣接する２つの行の行間隔を示す <b>int</b> 値。<br />既定値は<b>０</b>です。</value>
      <remarks>
        <b>LineSpace</b> プロパティは、テキスト行の間隔を示します。<note>このプロパティは、Multiline プロパティが true の場合にのみ有効です。 </note></remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">valueが0未満の場合は、ArgumentOutOfRangeExceptionがスローされます。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.MaxLength">
      <summary>テキストコントロールに入力できる最大文字数を取得または設定します。</summary>
      <value>コントロールに入力できる文字数またはバイト数（文字数とバイト数のどちらであるかは<b>LengthAsByte</b>プロパティによって決定されます）。<br />デフォルト値は<b>ゼロ</b>です。</value>
      <remarks>
        <b>MaxLength</b> プロパティを使用して、ユーザーがコントロールに入力できる文字数を制限できます。既定値は０で、文字数が制限されないことを示します。０より大きい任意の数を指定すると、それが最大文字数になります。表示結果には、この <b>MaxLength</b> プロパティと共に <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLengthUnit" /> も影響します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値がゼロ未満の場合は、ArgumentOutOfRangeException がスローされます。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.MaxLengthCodePage">
      <summary>バイト単位の最大長のカウントに使用されるエンコーディングのコードページを取得または設定します。</summary>
      <value>エンコーディングのコードページを示す<see cref="T:System.Int32" />値。<b />デフォルト値は-1で、エンコーディングを使用せずに組み込みのバイト長カウント方法を使用することを示します。</value>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.MaxLength" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.MaxLengthUnit" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.MaxLengthUnit">
      <summary>コントロールに保持できる最大文字数をバイト、文字、テキスト要素のいずれに基づいて取り扱うかを取得または設定します。</summary>
      <value>
        <b>MaxLength</b>がバイトに基づく場合はtrue。文字に基づく場合はfalse。<br />デフォルト値は<b>LengthUnit.Char</b>です。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.MaxLength" /> プロパティをカウントする際の単位を決定します。値が <b>LengthUnit.Byte</b> の場合、MaxLength はバイト単位でカウントされます。値が <b>LengthUnit.Char</b> の場合、MaxLength は文字単位でカウントされます。値が <b>LengthUnit.TextElement</b> の場合、MaxLength はテキスト要素単位でカウントされます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.MaxLineCount">
      <summary>入力できる最大の行数を取得または設定します。</summary>
      <value>最大の行数を示す <b>int</b> 値。<br />既定値は<b>ゼロ</b>です。</value>
      <remarks>
        <b>MaxLineCount</b> は、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.CountWrappedLine" /> プロパティが <see langword="true" /> で、なおかつ <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Muilitline" /> プロパティも <see langword="true" /> であるときに、入力できるテキストの行数を制限します。このプロパティの既定値はゼロで、制限がないことを意味します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.CountWrappedLine" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Multiline">
      <summary>複数行のテキストの入力と表示を可能にするかどうかを取得または設定します。</summary>
      <value>コントロールが複数行コントロールの場合はtrue。それ以外の場合はfalse。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>
        <para>ユーザーが複数行コントロールにテキストボックスの幅を超えるテキストを入力すると、テキストが折り返されます。</para>
        <para>サイズの大きいコントロールには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" /> プロパティを使用してスクロールバーを追加することもできます。水平スクロールバーが指定されていない場合、複数行コントロールのテキストは自動的に折り返されます。</para>
        <note type="cnotes">デフォルトボタンのないフォームでは、［Enter］キーを押すと、複数行コントロールの次の行にフォーカスが移動します。デフォルトボタンがある場合、次の行に移動するには［Ctrl］+［Enter］を押す必要があります。また、タブを挿入するには［Ctrl］+［Tab］を押す必要があります。 </note>
      </remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.PasswordChar">
      <summary>単一行のテキストコントロールで、パスワードの文字の代わりに表示するプレースホルダ文字を取得または設定します。</summary>
      <value>プレースホルダ文字を表す<b><see cref="T:System.Char">Char</see></b>値。 既定値は<b>\0</b>です。</value>
      <remarks>
        <para>
          <b>PasswordChar</b>を使用して、ダイアログボックスにパスワードフィールドを作成できます。任意の半角文字を使用できますが、Windowsベースのアプリケーションではアスタリスク（*）（Chr(42)）を使うのが一般的です。</para>
        <para>このプロパティは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" />プロパティには影響しません。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Text" nolink="true" />にはユーザーが入力した文字列、またはコードから設定した文字列がそのまま格納されます。<b>PasswordChar</b>を0（デフォルト値）に設定すると、コントロールの実際のテキストが表示されます。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.PasswordRevelationMode">
      <summary>パスワード可視化モードを取得または設定します。</summary>
      <value>パスワード可視化モードを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.PasswordRevelationMode" />値の1つ。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode.None">None</see>で、入力したパスワードが可視化されないことを示します。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>入力候補値を示す <b>string</b> 値。<br />既定値は <see cref="F:System.String.Empty" /> です。</value>
      <remarks>
        <b>RecommendedValue</b> プロパティはユーザーへのヒントを提供するもので、値が完全に入力されていないときに表示されます。値の入力中に特定のショートカットキーまたはキーの組み合わせを押すと、入力候補値を取得できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.ScrollBarMode">
      <summary>スクロールバーの表示方法を取得または設定します。</summary>
      <value>内容がコントロールの長さを超えると同時にスクロールバーが表示されるかどうかを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBarMode" /> 列挙値の１つ。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Fixed" /> です。</value>
      <remarks>スクロールバーを表示するには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" /> プロパティを <see langword="true" /> に設定する必要があります。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Fixed" /> に設定した場合、スクロールバーは常に表示されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Automatic" /> に設定した場合は、コントロールの内容がコントロールの長さを超えたときにのみ、スクロールバーが表示されます。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.ScrollBars">
      <summary>複数行の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> コントロールにどのスクロールバーを表示するかを取得または設定します。</summary>
      <value>複数行の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> コントロールにスクロールバーを表示しないか、水平スクロールバーを表示するか、垂直スクロールバーを表示するか、両方のスクロールバーを表示するかを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" /> 列挙値の１つ。<br />既定値は <b>None</b> です。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" /> プロパティが <b>WrapMode.WordWrap</b> または <b>WrapMode.CharWrap</b> に設定されている場合は、<b>ScrollBars</b> プロパティの値に関わらず、水平スクロールバーは表示されません。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBarMode" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを示す値を取得または設定します。</summary>
      <value>入力候補値を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>
        <b>ShowRecommendedValue</b> が <see langword="true" /> の場合、値が完全に入力されていないときに <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.RecommendedValue" /> プロパティの値が表示されます。それ以外の場合、<b>RecommendedValue</b> プロパティの値は表示されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.SideButtons">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> コントロールのサイドボタンを取得します。</summary>
      <value>コレクションを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> 値。</value>
      <remarks>
        <b>SideButtons</b>は追加または削除できます。これには<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.UseSystemPasswordChar">
      <summary>システムパスワード文字を使用するかどうかを示す値を取得または設定します。</summary>
      <value>システムパスワード文字を使用するかどうかを示す <see langword="bool" /> 値。この値が <see langword="true" /> の場合は、パスワードを表示するときにシステム設定から取得した文字が使用されます。<br />既定値は <see langword="false" /> です。</value>
      <remarks>
        <b>UseSystemPasswordChar</b> プロパティは <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.PasswordChar" /> プロパティよりも優先されます。<b>UseSystemPasswordChar</b> が <see langword="true" /> に設定されている場合は常にデフォルトのシステムパスワード文字が使用され、<b>PasswordChar</b> に設定された文字は無視されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.WrapMode">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox" /> コントロールが複数行の場合の折り返しルールを取得または設定します。</summary>
      <value>テキストの折り返しルールを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.WrapMode" /> 列挙体。<br />既定値は <b>WrapMode.WordWrap</b> です。</value>
      <remarks>
        <b>WrapMode</b>プロパティはテキスト折り返し動作に影響を与えます。値が<b>WrapMode.WordWrap</b>の場合、テキストは単語単位で折り返されます。値が<b>WrapMode.CharWrap</b>の場合、テキストは文字単位で折り返されます。<note>このプロパティは、Multilineがtrueの場合にのみ有効です。 </note></remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.Multiline" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsReturn" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.AcceptsTab" />
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.ScrollBars" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.CanOverflow">
      <summary>セルが一杯になったときに隣接するセルにデータを表示できるかどうかを決定します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Clone">
      <summary>クローンされたセル型を作成して返します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Format(System.Object)">
      <summary>指定したデータをセル型の書式に書式設定し、それを文字列として返します。</summary>
      <param name="obj">書式設定するセルデータを含む、データモデル内のオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.FormatToClipboard(System.Object)">
      <summary>クリップボードに書式設定します。</summary>
      <param name="obj">オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
      <returns>すべてのデフォルトショートカットを含むディクショナリー。</returns>
      <remarks>派生クラスで <b>GetDefaultShortcuts</b> メソッドを使用して、セルが作成されるときのデフォルトショートカットをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルにショートカットは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetDefaultSideButtonTypes">
      <summary>既定のサイドボタンを取得します。</summary>
      <returns>. すべてのタイプのデフォルトサイドボタンを含む <see cref="T:System.Type" /> リスト。</returns>
      <remarks>派生クラスで <b>GetDefaultSideButtonTypes</b> メソッドを使用して、セルが作成されるときのデフォルトサイドボタンをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルにサイドボタンは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetDisplayText(System.Object)">
      <summary>表示テキストを取得します。</summary>
      <param name="value">値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>外観と倍率を指定してこのセル型の編集コントロールを取得します。</summary>
      <param name="appearance">セルの外観設定。</param>
      <param name="zoomFactor">セルの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetEditorValue">
      <summary>編集コントロール内の書式なしの値を取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>レンダラーコントロールのためにセルの優先サイズ（必要な最大サイズ）を取得します。</summary>
      <param name="g">セルを描画するためのグラフィックデバイスインタフェース。</param>
      <param name="size">優先サイズまたは必要な最大サイズ。</param>
      <param name="appearance">レンダラーコントロールの外観設定。</param>
      <param name="value">レンダラーコントロールの名前を含むオブジェクト。</param>
      <param name="zoomFactor">レンダラーコントロールの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>エディタコントロールのためにセルの優先サイズ（必要な最大サイズ）を取得します。</summary>
      <param name="editor">エディタコントロールの名前。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo[])">
      <summary>既定のサイドボタンを初期化します。</summary>
      <param name="defaultSideButtons">初期化する既定のサイドボタン。</param>
      <remarks>派生クラスで <b>InitializeDefaultSideButtons</b> メソッドを使用して、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.GetDefaultSideButtonTypes" /> メソッドによって作成されるデフォルトサイドボタンを初期化できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>エディタコントロールを初期化します。</summary>
      <param name="control">設定対象となるコントロールを表す<b><see cref="T:System.Windows.Forms.Control">Control</see></b>オブジェクト。</param>
      <param name="appearance">外観。</param>
      <param name="zoomFactor">倍率。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>指定したコントロールが再利用できるかどうかを判断します。</summary>
      <param name="control">設定対象となるコントロールを表す<b><see cref="T:System.Windows.Forms.Control">Control</see></b>オブジェクト。</param>
      <returns>指定したコントロールが再利用できる場合は <c>true</c>。それ以外の場合は <c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.IsValid(System.Object)">
      <summary>指定した値が有効かどうかを判断します。</summary>
      <param name="value">検証する値（オブジェクトとして）。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.PaintCell(FarPoint.PDF.PdfGraphics,System.Drawing.RectangleF,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>指定した外観設定を使用して、編集モードでないときのセルを指定したグラフィックインタフェースに PDF 印刷します。</summary>
      <param name="g">セルを描画するための PDF グラフィックデバイスインタフェース。</param>
      <param name="r">矩形領域の位置とサイズ。</param>
      <param name="appearance">セルの外観設定。</param>
      <param name="value">セルのレンダラーコントロールの名前を含むオブジェクト。</param>
      <param name="isSelected">セルが選択されているかどうか。</param>
      <param name="isLocked">セルがロックされているかどうか。</param>
      <param name="zoomFactor">セルの描画倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Parse(System.String)">
      <summary>指定した文字列をセル型のデータ型に解析し、それをオブジェクトとして返します。</summary>
      <param name="s">解析するシート上のセルの文字列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.SetEditorValue(System.Object)">
      <summary>編集コントロールの値を設定します。</summary>
      <param name="value">エディタコントロールの（オブジェクトとしての）値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.ShowSubEditor">
      <summary>セルに関連付けられたサブエディタコントロールを表示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>セルの編集を開始します。</summary>
      <param name="e">イベント。</param>
      <param name="selectAll">すべてを選択するかどうか。</param>
      <param name="autoClipboard">クリップボードアクションのショートカットキーを許可するかどうか。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxCellType.StopEditing">
      <summary>セルの編集を終了します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl">
      <summary>GcTextBoxCellType の編集コントロール。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl" /> クラスの新しいインスタンスを初期化します。</summary>
      <remarks>GcTextBoxのフォント設定は、親コンテナーコントロールによって定義されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.Font">
      <summary>コントロールによって表示されるテキストのフォントを取得または設定します。</summary>
      <value>コントロールによって表示されるテキストに適用する<see cref="T:System.Drawing.Font" />。 既定値は<see cref="P:System.Windows.Forms.Control.DefaultFont" /> プロパティの値です。</value>
      <remarks>
        <para>
          <b>Font</b>プロパティはアンビエントプロパティです。アンビエントプロパティとは、明示的に設定しない場合に親コントロールから取得されるコントロールプロパティです。たとえば<see cref="T:System.Windows.Forms.Button" />は、デフォルトでは親の<see cref="T:System.Windows.Forms.Form" />と同じ<see cref="P:System.Windows.Forms.Control.BackColor" />を持ちます。アンビエントプロパティの詳細については、<see cref="T:System.Windows.Forms.AmbientProperties" />クラスまたは<see cref="T:System.Windows.Forms.Control" />クラスの概要を参照してください。</para>
        <para />
        <para>
          <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.SubEditor">
      <summary>セルのサブエディタを取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.InputNewLine">
      <summary>新しい行を作成します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>指定されているキーが、コントロールに認識される入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</summary>
      <param name="keyData">キーを表す<b><see cref="T:System.Windows.Forms.Keys">Keys</see></b>値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定されたキーは入力キーです。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定されたキーは入力キーではありません。</description>
          </item>
        </list>
      </returns>
      <remarks>
        <b>IsInputKey</b>メソッドを呼び出すと、keyDataパラメーターで指定したキーが、コントロールに必要な入力キーかどうかを判断できます。このメソッドは、ウィンドウメッセージのプリプロセス中に呼び出され、指定された入力キーを前処理するか、直接コントロールに送信するかを決定します。<b>IsInputKey</b>が<see langword="true" />を返す場合、指定されたキーはコントロールに直接送信されます。<b>IsInputKey</b>が<see langword="false" />を返す場合、キーは前処理され、プリプロセス中にキーに対する処理が終了されなかった場合だけ、コントロールに送信されます。前処理されるキーには、［Tab］、［Enter］、［Esc］、［↑］、［↓］、［←］、［→］が含まれます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>KeyExit イベントを使用してフォーカスを移動します。</summary>
      <param name="e">イベントデータを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> インスタンス。</param>
      <remarks>この <b>MoveFocusByKeyExit</b> メソッドが呼び出されると、フォーカスが移動します。ExitKeys.CharInput、ExitKeys.CtrlRight、ExitKeys.NextControl、ExitKeys.Right、および ExitKeys.Tab は、フォーカスを前方に移動します。その他の ExitKeys は、フォーカスを後方に移動します。<br /><b>継承時の注意：</b>このメソッドを継承クラスでオーバーライドする場合は、基本メソッドを呼び出す必要があります。そうしなければ、フォーカスは移動しません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.NextCell">
      <summary>次のセルに移動します。ショートカットアクションを使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnAfterFocus(System.EventArgs)">
      <summary>AfterFocusイベントを発生させます。</summary>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnDropDownClosed(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownClosed" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownClosed</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownClosed</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownClosed</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnDropDownOpening(GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBox.DropDownOpening" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownOpeningEventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnDropDownOpening</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnDropDownOpening</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnDropDownOpening</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnGotFocus(System.EventArgs)">
      <summary>GotFocus イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnGotFocus</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnGotFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnGotFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnInvalidInput(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnInvalidInput</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnInvalidInput</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnInvalidInput</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the KeyDown event.</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>KeyPress イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnLostFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.LostFocus" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnLostFocus</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnLostFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnLostFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.OnParentChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.ParentChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.PreviousCell">
      <summary>前のセルに移動します。ショートカットアクションを使用します。</summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTextBoxEditingControl.AfterFocus">
      <summary>コントロールがフォーカスを取得した後に発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan">
      <summary>
        <b>GcTimeSpan</b>コントロールクラスを表します。</summary>
      <remarks>
        <para>
          <b>GcTimeSpan</b>コントロールを使用すると、機能的なタイムスパン（期間や時間の長さ）入力インタフェースを迅速かつ効率的に設計できます。</para>
        <para>
          <b>GcTimeSpan</b>コントロールを使用した場合、タイムスパン値のデータ検証の必要性が軽減されます。 </para>
      </remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="container">コントロールが配置されるコンテナを表す<b><see cref="T:System.ComponentModel.IContainer">IContainer</see></b>オブジェクト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.AcceptsCrLf">
      <summary>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理方法を示す値を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理モードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" />列挙体。<br />デフォルト値は<b>CrLfMode.NoControl</b>です。</value>
      <remarks>
        <b>CrLf.Cut</b>に設定すると、<b>GcTimeSpan</b>で文字列をコピー、切り取り、および貼り付けるときの動作が標準の<b>TextBox</b>と同じになります。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ActiveField">
      <summary>アクティブフィールドを取得します。</summary>
      <value>アクティブなフィールドを示す<see cref="T:GrapeCity.Win.Views.Field" />値。</value>
      <remarks>このプロパティは、アクティブなフィールド（キャレットが存在するフィールド）を示します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.AlternateText">
      <summary>コントロールの代替テキストの設定を取得します。</summary>
      <value>代替テキストを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText" />値。</value>
      <remarks>このプロパティを設定すると、編集モードおよび表示モードでコントロールの値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.Zero" />または<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.Null" />のときに、設定したテキストが代わりに表示されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.DefaultActiveField">
      <summary>デフォルトのアクティブフィールドを取得または設定します。</summary>
      <value>デフォルトのアクティブフィールドを示す<see cref="T:GrapeCity.Win.Views.Field" />値。<br /> デフォルト値は<see langword="null" />です。</value>
      <remarks>コントロールがフォーカスを取得すると、デフォルトのアクティブフィールドにフォーカスが設定されます。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.HighlightText" />プロパティの値が<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.Field" />の場合、アクティブフィールドのすべてのテキストが選択されます。それ以外の場合は、キャレットが最初の入力位置に移動します。</remarks>
      <exception cref="T:System.ArithmeticException">指定されたフィールドが<see cref="T:GrapeCity.Win.Views.FieldCollection" />に存在しません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.DisplayFields">
      <summary>コントロールの表示フィールドを取得します。</summary>
      <value>表示フィールドのコレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldCollection" />オブジェクト。</value>
      <remarks>このプロパティは、このコントロールに入力フォーカスがないときの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value" />の表示方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Fields">
      <summary>コントロールのフィールドを取得します。</summary>
      <value>GcTimeSpanの項目を表す<see cref="T:GrapeCity.Win.Views.TimeSpanFieldCollection" />。</value>
      <remarks>このプロパティは、このコントロールの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value" />の表示方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.IsInvalidText">
      <summary>テキストが無効かどうかを示す<see langword="bool" />値を取得します。</summary>
      <value>テキストが無効かどうかを示す<see langword="bool" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxMinBehavior">
      <summary>新しい入力値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MinValue" />から<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxValue" />までの範囲から外れているときの動作を取得または設定します。</summary>
      <value>新しい入力値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MinValue" />から<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxValue" />までの範囲から外れているときの動作を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxMinBehavior" />列挙値。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.AdjustToMaxMin" />です。</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b>が有効な<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxMinBehavior" />項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxValue">
      <summary>フィールドまたは値によってコントロールをスピンするときの許容される最大値を取得または設定します。</summary>
      <value>許容される最大値を示す<see cref="T:System.TimeSpan" />値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MinValue" />未満であるか、デフォルト値を超えています。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MinValue">
      <summary>フィールドまたは値によってコントロールをスピンするときの許容される最小値を取得または設定します。</summary>
      <value>許容される最小値を示す<see cref="T:System.TimeSpan" />値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxValue" />を超えているか、デフォルト値未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.NegativeColor">
      <summary>このコントロールの値の符号が負である場合の色を取得または設定します。</summary>
      <value>負数の色。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value" />プロパティが<see cref="F:System.TimeSpan.Zero" />未満で、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.UseNegativeColor" />プロパティが<see langword="true" />の場合は、このプロパティに従ってテキストの色が決定されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.PreferredHeight">
      <summary>コントロールに最適な高さを取得します。</summary>
      <value>コントロールの最適な高さを示す<b>int</b>値。</value>
      <remarks>このプロパティは、<see cref="P:System.Windows.Forms.Control.PreferredSize" />プロパティの高さと同じです。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>入力候補値を示す<see cref="T:System.TimeSpan" />値。<br /> デフォルト値は<see cref="F:System.TimeSpan.Zero" />です。</value>
      <remarks>
        <b>RecommendedValue</b>プロパティは、値が完全に入力されていないときにユーザーに提示されるヒントを提供します。値の入力中に特定のショートカットキーまたはキーの組み合わせを押すと、入力候補値を取得できます。</remarks>
      <exception cref="T:System.ArgumentException">現在のパターンと一致しない無効な値が<b>RecommendedValue</b>プロパティに設定されるときに発生します。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ShowRecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを示す値を取得または設定します。</summary>
      <value>入力候補値を表示する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="false" />です。</value>
      <remarks>この<b>ShowRecommendedValue</b>が<see langword="true" />の場合、値が完全に入力されていないときに<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.RecommendedValue" />プロパティの値が表示されます。それ以外の場合、<b>RecommendedValue</b>プロパティの値は表示されません。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.RecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.SideButtons">
      <summary>コントロールに設定されているサイドボタンのコレクションを取得します。</summary>
      <value>コレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" />値。</value>
      <remarks>
        <b>SideButtons</b>にはいくつかのコマンドボタンを追加または削除できます。これには、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Spin">
      <summary>スピン機能に関する設定を取得します。</summary>
      <value>スピン機能に関する設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpin" />値。</value>
      <remarks>この<b>Spin</b> プロパティを設定することで、スピン動作をカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Text">
      <summary>コントロールの現在のテキストを取得または設定します。</summary>
      <value>
        <value />
      </value>
      <remarks>
        <b>Text</b>プロパティには、すべてのリテラルと入力フォーカスを持つフィールドまたは入力フォーカスを持たない表示フィールドのすべての文字が含まれます。</remarks>
      <exception cref="T:System.ArgumentException">値が有効ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.TouchDropDownScale">
      <summary>タッチ操作でドロップダウンを表示した時ドロップダウン項目に適用するスケールの比率を取得または設定します。</summary>
      <value>タッチ操作でドロップダウンを表示した時ドロップダウン項目に適用するスケールの比率。規定値は 150%です。</value>
      <remarks>このプロパティは、このクラスでは意味がありません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.UseNegativeColor">
      <summary>負数を表示するために<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.NegativeColor" />を使用するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.NegativeColor" />を使用して負数を表示する場合は<see langword="true" />、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ForeColor" />を使用して負数を表示する場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value" />プロパティが<see cref="F:System.TimeSpan.Zero" />未満で、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.UseNegativeColor" />プロパティが<see langword="true" />の場合は、このプロパティに従ってテキストの色が決定されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ValidateMode">
      <summary>検証モードを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx" /> 列挙値の１つ。既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateEx" /> です。</value>
      <remarks>このプロパティは、検証モードを取得します。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティに指定された値が有効な列挙値ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value">
      <summary>値を<b><see cref="T:System.DateTime">DateTime</see></b> 型で取得または設定します。</summary>
      <value>コントロールに割り当てられた<see cref="T:System.Nullable`1" />値。デフォルト値はゼロです。</value>
      <remarks>このプロパティは、フィールド内のすべての文字からリテラルを除いた値を取得します。このコントロールにどのようなフィールドがあるかにかかわらず、この<b>Value</b>は常に同じです。</remarks>
      <exception cref="T:System.FormatException">値が有効な書式文字列ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MinValue" />未満であるか、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.MaxValue" />を超えています。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ValueSign">
      <summary>コントロールの値の符号を取得または設定します。</summary>
      <value>値の符号を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl" />値。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" />です。</value>
      <remarks>
        <b>ValueSign</b>プロパティは、受け入れ可能な値を決定します。値が<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Positive" />の場合は、<see cref="F:System.TimeSpan.Zero" />以上の値のみが許可されます。値が<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Negative" />の場合は、<see cref="F:System.TimeSpan.Zero" nolink="true" />以下の値のみが許可されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" />は、すべての値が許可されることを意味します。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">値が<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl" />で定義されていません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.AboutBox">
      <summary>バージョン情報ダイアログボックスを表示します。</summary>
      <remarks>このメソッドが呼び出された後、製品情報を含むウィンドウが表示されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ApplyRecommendedValue">
      <summary>入力候補値をコントロールに適用します。</summary>
      <remarks>この<b>ApplyRecommendedValue</b>メソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ShowRecommendedValue" />プロパティが<see langword="true" />の場合、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.RecommendedValue" />を受け入れることができます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.CreateAccessibilityInstance">
      <summary>新しいユーザー補助オブジェクトを作成します。</summary>
      <returns>新しい<see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Dispose(System.Boolean)">
      <summary>このコントロールと子コントロールが使用しているアンマネージリソースを解放します。オプションで、マネージリソースも解放します。</summary>
      <param name="disposing">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>マネージリソースとアンマネージリソースの両方を解放します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>アンマネージリソースだけを解放します。</description>
          </item>
        </list>
      </param>
      <remarks>
        <see cref="T:System.Windows.Forms.Control" />の使用が終わったら、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Dispose(System.Boolean)" />を呼び出します。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Dispose(System.Boolean)" nolink="true" />メソッドは、<see cref="T:System.Windows.Forms.Control" nolink="true" />を使用できない状態にします。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Dispose(System.Boolean)" nolink="true" />を呼び出した後で、<see cref="T:System.Windows.Forms.Control" nolink="true" />へのすべての参照を解放し、<see cref="T:System.Windows.Forms.Control" nolink="true" />によって占有されていたメモリをガベージコレクターがクリアできるようにする必要があります。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.DoSpinDown(System.TimeSpan)">
      <summary>スピンダウンを実行します。</summary>
      <param name="increment">スピンダウン時の増分量を示す<see cref="T:System.Decimal" />値。</param>
      <remarks>このメソッドは、incrementパラメーターに従ってこのコントロールの値をスピンダウンします。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.DoSpinUp(System.TimeSpan)" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.DoSpinUp(System.TimeSpan)">
      <summary>スピンアップを実行します。</summary>
      <param name="increment">スピンアップ時の増分量を示す<see cref="T:System.Decimal" />値。</param>
      <remarks>このメソッドは、incrementパラメーターに従ってこのコントロールの値をスピンアップします。</remarks>
      <seealso cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.DoSpinDown(System.TimeSpan)" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.GetDefaultDisplayFields">
      <summary>既定の表示フィールドを取得します。</summary>
      <returns>表示用のすべてのデフォルトフィールドを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayField" />の配列。</returns>
      <remarks>派生クラスで<b>GetDefaultDisplayFields</b>メソッドを使用して、コントロールが作成されるときのデフォルト表示フィールドをカスタマイズできます。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldsBuilder.BuildFields(System.String)" />を使用すると、文字列書式に従って<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayField" />の配列を作成できます。このメソッドが<see langword="null" />を返す場合、コントロールに表示フィールドは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.GetDefaultFields">
      <summary>既定の入力フィールドを取得します。</summary>
      <returns>入力用のすべてのデフォルトフィールドを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanField" />の配列。</returns>
      <remarks>派生クラスで<b>GetDefaultFields</b>メソッドを使用して、コントロールが作成されるときのデフォルトフィールドをカスタマイズできます。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldsBuilder.BuildFields(System.String)" />を使用すると、文字列書式に従って<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanField" />の配列を作成できます。このメソッドが<see langword="null" />を返す場合、コントロールにフィールドは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
      <returns>既定のショートカット機能を含む<b>Dictionary</b><b>&lt;</b><b>Keys, string</b><b>&gt;</b>インタフェースを実装したオブジェクト。</returns>
      <remarks>
        <b>GetDefaultShortcuts</b> メソッドはコントロールが作成されるときに派生クラスに対して既定のショートカット機能の設定を行います。<see langword="null" />を設定した場合には、ショートカット機能は何も設定されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.GetDefaultSideButtonTypes">
      <summary>既定のサイドボタンを取得します。</summary>
      <returns>すべてのタイプのデフォルトサイドボタンを含む<see cref="T:System.Type" />リスト。</returns>
      <remarks>派生クラスで<b>GetDefaultSideButtonTypes</b>メソッドを使用して、コントロールが作成されるときのデフォルトサイドボタンをカスタマイズできます。このメソッドが<see langword="null" />を返す場合、コントロールにサイドボタンは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[])">
      <summary>既定のサイドボタンを初期化します。</summary>
      <param name="defaultSideButtons">初期化する既定のサイドボタン。</param>
      <remarks>派生クラスで<b>InitializeDefaultSideButtons</b>メソッドを使用して、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.GetDefaultSideButtonTypes" />メソッドによって作成されるデフォルトサイドボタンを初期化できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.NextField">
      <summary>次のフィールドにジャンプします。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。現在キャレットのあるフィールドが最後の編集可能フィールドである場合、キャレットは移動しません。キャレットが正常に移動すると、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" />イベントが発生します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.NextFieldThenControl">
      <summary>次のフィールドにジャンプします。ただし、キャレットが最後の編集可能フィールドにある場合は、次のコントロールにジャンプします。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。キャレットが正常に移動すると、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" />イベントが発生します。キャレットが他のコントロールに移動した場合は、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.KeyExit" />イベントが発生します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.OnEnter(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Enter" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnter</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEnter</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnter</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.OnTextChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.TextChanged" /> イベントを発生します。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Validating" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.ComponentModel.CancelEventArgs">CancelEventArgs</see></b>。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnValidating</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnValidating</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnValidating</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.OnValueChanged(System.EventArgs)">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value" />プロパティが変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnValueChanged</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnValueChanged</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnValueChanged</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.PreviousField">
      <summary>前のフィールドにジャンプします。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。現在キャレットのあるフィールドが最初の編集可能フィールドである場合、キャレットは移動しません。キャレットが正常に移動すると、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" />イベントが発生します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.PreviousFieldThenControl">
      <summary>前のフィールドにジャンプします。ただし、キャレットが最初の編集可能フィールドにある場合は、前のコントロールにジャンプします。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。キャレットが正常に移動すると、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldEnter" />イベントと<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.FieldLeave" />イベントが発生します。キャレットが他のコントロールに移動した場合は、<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.KeyExit" />イベントが発生します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.SetZero">
      <summary>値を<see cref="F:System.TimeSpan.Zero" />にリセットします。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />のために使用されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.SwitchSign">
      <summary>値の符号を切り替えます。</summary>
      <remarks>このメソッドは主に<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut" />の動作に使用されます。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ValueChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value" />プロパティが変更されたときに発生します。</summary>
      <remarks>このイベントは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value" />プロパティが変更された場合に発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType">
      <summary>
        <b>GcTimeSpanCellType</b>クラスを表します。</summary>
      <remarks>GcTimeSpanCellを使用すると、機能的な日時入力インタフェースを迅速かつ効率的に設計できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.AcceptsCrLf">
      <summary>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理方法を取得または設定します。</summary>
      <value>文字列をコピー、切り取り、および貼り付けるときのCrLf文字の処理モードを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" />列挙体。<br />デフォルト値は<b>CrLfMode.NoControl</b>です。</value>
      <remarks>
        <b>CrLf.Cut</b>に設定すると、<b>GcTimeSpan</b>セルで文字列をコピー、切り取り、または貼り付けるときの動作が標準の<b>TextBox</b>と同じになります。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b> が有効な <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode" /> 項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.AlternateText">
      <summary>代替テキストの設定を取得します。</summary>
      <value>代替テキストを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText" />値。</value>
      <remarks>このプロパティは、編集モードおよび表示モードで値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.Zero" />または<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.Null" />のときの代替テキストの表示方法を指定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.ClearCollection">
      <summary>デザイナによる内部使用。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.DefaultActiveField">
      <summary>デフォルトのアクティブフィールドを取得または設定します。</summary>
      <value>デフォルトのアクティブフィールドを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" />値。<br /> デフォルト値は<see langword="null" />です。</value>
      <remarks>コントロールがフォーカスを取得すると、デフォルトのアクティブフィールドにフォーカスが設定されます。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorControl.HighlightText" />プロパティの値が<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.Field" />の場合、アクティブフィールドのすべてのテキストが選択されます。それ以外の場合は、キャレットが最初の入力位置に移動します。</remarks>
      <exception cref="T:System.ArithmeticException">指定されたフィールドが<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldCollection" />に存在しません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.DisplayFields">
      <summary>表示フィールドを取得します。</summary>
      <value>表示フィールドのコレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldCollection" />オブジェクト。</value>
      <remarks>このプロパティは、このコントロールに入力フォーカスがないときの<see cref="N:GrapeCity.Win.Value" />の表示方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.ExcelExportFormat">
      <summary>Excel エクスポート書式を取得または設定します。</summary>
      <value>Excel エクスポート書式。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.Fields">
      <summary>フィールドを取得します。</summary>
      <value>GcTimeSpanの項目を表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldCollection" />オブジェクト。</value>
      <remarks>このプロパティは、このコントロールの<see cref="N:GrapeCity.Win.Value" />の表示方法を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.FocusPosition">
      <summary>エディタがフォーカスを取得したときの初期カーソル位置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MaxMinBehavior">
      <summary>新しい値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MinValue" />から<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MaxValue" />までの範囲から外れているときの動作を取得または設定します。</summary>
      <value>新しい入力値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MinValue" />から<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MaxValue" />までの範囲から外れているときの動作を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MaxMinBehavior" />列挙値。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.AdjustToMaxMin" />です。</value>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <b>value</b>が有効な<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MaxMinBehavior" />項目ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MaxValue">
      <summary>スピンボタンを使用してフィールドまたは値を変更するときの許容される最大値を取得または設定します。</summary>
      <value>許容される最大値を示す<see cref="T:System.TimeSpan" />値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MinValue" />未満であるか、デフォルト値を超えています。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MinValue">
      <summary>スピンボタンを使用してフィールドまたは値を変更するときの許容される最小値を取得または設定します。</summary>
      <value>許容される最小値を示す<see cref="T:System.TimeSpan" />値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">値が<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.MaxValue" />を超えているか、デフォルト値未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.NegativeColor">
      <summary>値の符号が負である場合の色を取得または設定します。</summary>
      <value>負数の色。</value>
      <remarks>
        <see cref="N:GrapeCity.Win.Value" />プロパティが<see cref="F:System.TimeSpan.Zero" />未満で、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.UseNegativeColor" />プロパティが<see langword="true" />の場合は、このプロパティによってテキストの色が決定されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.PaintByControl">
      <summary>セルの描画方法を示す値を取得または設定します。true の場合、内部コントロールの描画を使用してセルが描画されます。この場合、セルは編集コントロールとまったく同じように描画されます。セルのすべての設定（スタイルの異なるフィールドなど）がセルの描画時に有効になります。文字列を直接描画するのではなくコントロールによって描画する場合、セルの描画パフォーマンスは遅くなります。また、PDF にエクスポートしたときにセルのテキストは選択できません。false の場合、パフォーマンスは良好ですが、一部の設定が無効になります。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.RecommendedValue">
      <summary>入力候補値を取得または設定します。</summary>
      <value>入力候補値を示す<see cref="T:System.TimeSpan" />値。<br /> デフォルト値は<see cref="F:System.TimeSpan.Zero" />です。</value>
      <remarks>
        <b>RecommendedValue</b>プロパティはユーザーへのヒントを提供するもので、値が完全に入力されていないときに表示されます。値の入力中に特定のショートカットキーまたはキーの組み合わせを押すと、入力候補値を取得できます。</remarks>
      <exception cref="T:System.ArgumentException">現在のパターンと一致しない値が<b>RecommendedValue</b>プロパティに設定されたときに発生します。</exception>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ShowRecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.SerializationDefaultActiveFieldIndex">
      <summary>シリアル化のために内部で使用。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.ShowRecommendedValue">
      <summary>入力候補値を表示するかどうかを取得または設定します。</summary>
      <value>入力候補値を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>
        <b>ShowRecommendedValue</b>が<see langword="true" />の場合、値が完全に入力されていないときに<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.RecommendedValue" />プロパティの値が表示されます。それ以外の場合、<b>RecommendedValue</b>プロパティの値は表示されません。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.RecommendedValue" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.SideButtons">
      <summary>コントロールに設定されているサイドボタンのコレクションを取得します。</summary>
      <value>コレクションを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> 値。</value>
      <remarks>
        <b>SideButtons</b>にはいくつかの種類のサイドボタンを追加または削除できます。これには<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />が含まれます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.Spin">
      <summary>スピン機能の設定を取得します。</summary>
      <value>スピン機能の設定を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpin" /> 値。</value>
      <remarks>この<b>Spin</b> プロパティを設定することで、スピン動作をカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.UseNegativeColor">
      <summary>負数を表示するために<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.NegativeColor" />を使用するかどうかを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.NegativeColor" />を使用して負数を表示する場合は<see langword="true" />、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.ForeColor" />を使用して負数を表示する場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
      <remarks>
        <see cref="N:GrapeCity.Win.Value" />プロパティが<see cref="F:System.TimeSpan.Zero" />未満で、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.UseNegativeColor" />プロパティが<see langword="true" />の場合は、このプロパティによってテキストの色が決定されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.ValidateMode">
      <summary>検証モードを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx" /> 列挙値の１つ。既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateEx" /> です。</value>
      <remarks>このプロパティは、検証モードを取得します。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティに指定された値が有効な列挙値ではありません。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.ValueSign">
      <summary>値の符号を取得または設定します。</summary>
      <value>値の符号を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl" />値。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" />です。</value>
      <remarks>
        <b>ValueSign</b>プロパティは、受け入れ可能な値を決定します。値が<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Positive" />の場合は、<see cref="F:System.TimeSpan.Zero" />以上の値のみが許可されます。値が<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Negative" />の場合は、<see cref="F:System.TimeSpan.Zero" nolink="true" />以下の値のみが許可されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl" />は、すべての値が許可されることを意味します。</remarks>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">値が<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl" />で定義されていません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.Clone">
      <summary>基本セルを作成して返します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.Format(System.Object)">
      <summary>指定したデータをセル型の書式に書式設定し、それを文字列として返します。</summary>
      <param name="obj">書式設定するセルデータを含む、データモデル内のオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.FormatToClipboard(System.Object)">
      <summary>クリップボードに書式設定します。</summary>
      <param name="obj">オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetDefaultDisplayFields">
      <summary>既定の表示フィールドを取得します。</summary>
      <returns>表示用のすべてのデフォルトフィールドを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo" /> の配列。</returns>
      <remarks>派生クラスで <b>GetDefaultDisplayFields</b> メソッドを使用して、セルが作成されるときのデフォルト表示フィールドをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルに表示フィールドは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetDefaultFields">
      <summary>既定の入力フィールドを取得します。</summary>
      <returns>すべてのデフォルト入力フィールドを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanField" />の配列。</returns>
      <remarks>派生クラスで <b>GetDefaultFields</b> メソッドを使用して、コントロールが作成されるときのデフォルトフィールドをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルにフィールドは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
      <returns>すべてのデフォルトショートカットを含むディクショナリー。</returns>
      <remarks>派生クラスで <b>GetDefaultShortcuts</b> メソッドを使用して、セルが作成されるときのデフォルトショートカットをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルにショートカットは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetDefaultSideButtonTypes">
      <summary>既定のサイドボタンを取得します。</summary>
      <returns>. すべてのタイプのデフォルトサイドボタンを含む <see cref="T:System.Type" /> リスト。</returns>
      <remarks>派生クラスで <b>GetDefaultSideButtonTypes</b> メソッドを使用して、セルが作成されるときのデフォルトサイドボタンをカスタマイズできます。このメソッドが <see langword="null" /> を返す場合、セルにサイドボタンは追加されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetDisplayText(System.Object)">
      <summary>表示テキストを取得します。</summary>
      <param name="value">セル値。</param>
      <returns>表示テキスト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetEditorControl(FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>外観と倍率を指定してこのセル型の編集コントロールを取得します。</summary>
      <param name="appearance">セルの外観設定。</param>
      <param name="zoomFactor">セルの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetEditorValue">
      <summary>編集コントロール内の書式なしの値を取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に対して、ターゲットオブジェクトのシリアル化に必要なデータを設定します。</summary>
      <param name="info">データを設定する <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">このシリアル化のシリアル化（<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照）。</param>
      <exception cref="T:System.Security.SecurityException">呼び出し元に必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>レンダラーコントロールのためにセルの優先サイズ（必要な最大サイズ）を取得します。</summary>
      <param name="g">セルを描画するためのグラフィックデバイスインタフェース。</param>
      <param name="size">優先サイズまたは必要な最大サイズ。</param>
      <param name="appearance">レンダラーコントロールの外観設定。</param>
      <param name="value">レンダラーコントロールの名前を含むオブジェクト。</param>
      <param name="zoomFactor">レンダラーコントロールの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetPreferredSize(System.Windows.Forms.Control)">
      <summary>エディタコントロールのためにセルの優先サイズ（必要な最大サイズ）を取得します。</summary>
      <param name="editor">エディタコントロールの名前。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.InitializeDefaultSideButtons(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo[])">
      <summary>既定のサイドボタンを初期化します。</summary>
      <param name="defaultSideButtons">初期化する既定のサイドボタン。</param>
      <remarks>派生クラスで<b>InitializeDefaultSideButtons</b>メソッドを使用して、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.GetDefaultSideButtonTypes" />メソッドによって作成されるデフォルトサイドボタンを初期化できます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>エディタコントロールを初期化します。</summary>
      <param name="control">設定対象となるコントロールを表す<b><see cref="T:System.Windows.Forms.Control">Control</see></b>オブジェクト。</param>
      <param name="appearance">外観。</param>
      <param name="zoomFactor">倍率。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.IsReusable(System.Windows.Forms.Control)">
      <summary>指定したコントロールが再利用できるかどうかを判断します。</summary>
      <param name="control">設定対象となるコントロールを表す<b><see cref="T:System.Windows.Forms.Control">Control</see></b>オブジェクト。</param>
      <returns>指定したコントロールが再利用できる場合は <c>true</c>。それ以外の場合は <c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.IsValid(System.Object)">
      <summary>指定した値が有効かどうかを判断します。</summary>
      <param name="value">検証する値（オブジェクトとして）。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.Parse(System.String)">
      <summary>指定した文字列をセル型のデータ型に解析し、それをオブジェクトとして返します。</summary>
      <param name="s">解析するシート上のセルの文字列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.SetEditorValue(System.Object)">
      <summary>編集コントロールの値を設定します。</summary>
      <param name="value">エディタコントロールの（オブジェクトとしての）値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.ShowSubEditor">
      <summary>セルに関連付けられたサブエディタコントロールを表示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>セルの編集を開始します。</summary>
      <param name="e">イベント。</param>
      <param name="selectAll">すべてのセルデータを選択するかどうか。</param>
      <param name="autoClipboard">クリップボードアクションのショートカットキーを許可するかどうか。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType.StopEditing">
      <summary>セルの編集を終了します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl">
      <summary>GcTimeSpanCellTypeの編集コントロール。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.Font">
      <summary>コントロールによって表示されるテキストのフォントを取得または設定します。</summary>
      <value>コントロールによって表示されるテキストに適用する<see cref="T:System.Drawing.Font" />。 既定値は<see cref="P:System.Windows.Forms.Control.DefaultFont" /> プロパティの値です。</value>
      <remarks>
        <para>
          <b>Font</b>プロパティはアンビエントプロパティです。アンビエントプロパティとは、明示的に設定しない場合に親コントロールから取得されるコントロールプロパティです。たとえば<see cref="T:System.Windows.Forms.Button" />は、デフォルトでは親の<see cref="T:System.Windows.Forms.Form" />と同じ<see cref="P:System.Windows.Forms.Control.BackColor" />を持ちます。アンビエントプロパティの詳細については、<see cref="T:System.Windows.Forms.AmbientProperties" />クラスまたは<see cref="T:System.Windows.Forms.Control" />クラスの概要を参照してください。</para>
        <para />
        <para>
          <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.SubEditor">
      <summary>セルのサブエディタを取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>指定されているキーが、コントロールに認識される入力キーであるか、またはプリプロセスを必要とする特殊なキーであるかを確認します。</summary>
      <param name="keyData">キーを表す<b><see cref="T:System.Windows.Forms.Keys">Keys</see></b>値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定されたキーは入力キーです。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定されたキーは入力キーではありません。</description>
          </item>
        </list>
      </returns>
      <remarks>
        <b>IsInputKey</b>メソッドを呼び出すと、keyDataパラメーターで指定したキーが、コントロールに必要な入力キーかどうかを判断できます。このメソッドは、ウィンドウメッセージのプリプロセス中に呼び出され、指定された入力キーを前処理するか、直接コントロールに送信するかを決定します。<b>IsInputKey</b>が<see langword="true" />を返す場合、指定されたキーはコントロールに直接送信されます。<b>IsInputKey</b>が<see langword="false" />を返す場合、キーは前処理され、プリプロセス中にキーに対する処理が終了されなかった場合だけ、コントロールに送信されます。前処理されるキーには、［Tab］、［Enter］、［Esc］、［↑］、［↓］、［←］、［→］が含まれます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.MoveFocusByKeyExit(GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs)">
      <summary>KeyExit イベントを使用してフォーカスを移動します。</summary>
      <param name="e">イベントデータを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> インスタンス。</param>
      <remarks>
        <b>ExitKeys.CharInput</b>、<b>ExitKeys.CtrlRight</b>、<b>ExitKeys.NextControl</b>、<b>ExitKeys.Right</b>、および<b>ExitKeys.Tab</b>は、フォーカスを前方に移動します。その他の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" />は、フォーカスを後方に移動します。<note>このメソッドを継承クラスでオーバーライドする場合は、基本メソッドを呼び出す必要があります。そうしなければ、フォーカスは移動しません。 </note></remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.NextCell">
      <summary>ショートカットアクションを使用して次のセルに移動します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.NextFieldThenCell">
      <summary>ショートカットアクションを使用して次のフィールド（最後のフィールドの場合は次のセル）に移動します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.OnAfterFocus(System.EventArgs)">
      <summary>AfterFocusイベントを発生させます。</summary>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.OnEnter(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Enter" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnEnter</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnEnter</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnEnter</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.OnGotFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.GotFocus" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnGotFocus</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnGotFocus</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnGotFocus</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.OnInvalidInput(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.EditBase.InvalidInput" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.EventArgs" /> インスタンス。</param>
      <remarks>イベントが発生すると、デリゲートを使用してイベントハンドラが呼び出されます。<para /><b>OnInvalidInput</b> メソッドを使用すると、派生クラスでデリゲートを結び付けずにイベントを処理できます。派生クラスでイベントを処理する場合は、この手法をお勧めします。<para /><b>継承時の注意:</b><para /> 派生クラスで<b>OnInvalidInput</b>をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの<b>OnInvalidInput</b> メソッドを呼び出してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the KeyDown event.</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>KeyPress イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.OnParentChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.ParentChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.PreviousCell">
      <summary>ショートカットアクションを使用して前のセルに移動します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.PreviousFieldThenCell">
      <summary>ショートカットアクションを使用して前のフィールド（最初のフィールドの場合は前のセル）に移動します。</summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanEditingControl.AfterFocus">
      <summary>コントロールがフォーカスを取得した後に発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect">
      <summary>グラデーション効果を定義するクラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" />クラスのインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.#ctor(GrapeCity.Win.Spread.InputMan.CellType.GradientStyle,GrapeCity.Win.Spread.InputMan.CellType.GradientDirection,System.Drawing.Color,System.Drawing.Color)">
      <summary>特定の値を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" />クラスのインスタンスを初期化します。</summary>
      <param name="style">グラデーションのスタイルを示します。</param>
      <param name="direction">グラデーションの方向を示します。</param>
      <param name="startColor">グラデーションの開始色を示します。</param>
      <param name="endColor">グラデーションの終了色を示します。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.Default">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" />のデフォルト値オブジェクトを取得します。</summary>
      <value>デフォルト値を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.Direction">
      <summary>グラデーションの方向を示す値を取得または設定します。</summary>
      <value>グラデーションの方向を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection" />値。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection.NotSet" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.EndColor">
      <summary>グラデーションの終了色を示す値を取得または設定します。</summary>
      <value>グラデーションの終了色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.Color.Black" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.StartColor">
      <summary>グラデーションの開始色を示す値を取得または設定します。</summary>
      <value>グラデーションの開始色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.Color.White" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.Style">
      <summary>グラデーションのスタイルを示す値を取得または設定します。</summary>
      <value>グラデーションのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle" />値。<br /> デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.Horizontal" />です。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.Clone">
      <summary>この項目の同一コピーを作成します。</summary>
      <returns>クローンする項目と同じ画像を持ち、同じサブ項目が関連付けられた項目を表すオブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.Equals(System.Object)">
      <summary>指定した<b>Object</b>が現在の<b>Object</b>と等しいかどうかを判断します。</summary>
      <param name="obj">現在の<b>Object</b>と比較する<see cref="T:System.Object" />。</param>
      <returns>指定した<b>Object</b>が現在の<b>Object</b>と等しい場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.GetHashCode">
      <summary>この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" />オブジェクトのハッシュコードを取得します。</summary>
      <returns>この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect" />オブジェクトのハッシュコードを示す<see cref="T:System.Int32" />値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.GradientEffect.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Grid">
      <summary>
        <b>DropdownCalendar</b> クラスのグリッド設定を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Grid.#ctor">
      <summary>新しい <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Grid" /> インスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Grid.#ctor(GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.Line,GrapeCity.Win.Spread.InputMan.CellType.VerticalFlags)">
      <summary>指定した属性設定を使用して、新しい <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Grid" /> インスタンスを初期化します。</summary>
      <param name="left">左境界線を表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体。</param>
      <param name="right">右境界線を表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体。</param>
      <param name="top">上境界線を表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体。</param>
      <param name="bottom">下境界線を表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体。</param>
      <param name="separator">区切り線を表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体。</param>
      <param name="horizontal">水平線を表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体。</param>
      <param name="vertical">垂直線を表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体。</param>
      <param name="verticalFlag">垂直線を描画する部分を表す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.VerticalFlag" /> 列挙体。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.Bottom">
      <summary>下 <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体を取得または設定します。</summary>
      <value>グリッドの下の線を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.Horizontal">
      <summary>水平 <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体を取得または設定します。</summary>
      <value>グリッドのすべての水平線を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.Left">
      <summary>左 <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体を取得または設定します。</summary>
      <value>グリッドの左の線を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.Right">
      <summary>右 <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体を取得または設定します。</summary>
      <value>グリッドの右の線を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.Separator">
      <summary>ヘッダ区切り <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体を取得または設定します。</summary>
      <value>ヘッダ区切り線を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.Top">
      <summary>上 <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体を取得または設定します。</summary>
      <value>グリッドの上の線を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.Vertical">
      <summary>垂直 <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体を取得または設定します。</summary>
      <value>グリッドのすべての垂直線を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> 構造体。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Grid.VerticalFlag">
      <summary>垂直区切り線を日付領域と曜日タイトルの両方に表示するかどうかを取得または設定します。</summary>
      <value>線を描画する場所を指定する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.VerticalFlags" /> 列挙体。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Grid.Clone">
      <summary>オブジェクトの複製を返します。</summary>
      <returns>複製されたオブジェクトを表す<b><see cref="T:System.Object">Object</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Grid.ContentCalculate">
      <summary>現在の領域に含まれる各セルのサイズなど、使用される必要な情報を計算します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Grid.IndexCalculate">
      <summary>週インデックス領域の各セルのサイズなど、使用される必要な情報を計算します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Grid.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Editors.Grid.PropertyChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="System.ComponentModel.PropertyChangedEventArgs">PropertyChangedEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Grid.OnPropertyChanged(System.String)">
      <summary>
        <see cref="E:GrapeCity.Win.Editors.Grid.PropertyChanged" /> イベントを発生させます。</summary>
      <param name="propName">イベントデータを格納している<b><see cref="System.ComponentModel.PropertyChangedEventArgs">PropertyChangedEventArgs</see></b>。</param>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.Grid.PropertyChanged">
      <summary>プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday">
      <summary>カレンダーの休日を設定します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Holiday.#ctor(System.Int32,System.Int32)">
      <summary>指定した設定を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="month">月を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="day">日を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Holiday.#ctor(System.String,System.Int32,System.Int32)">
      <summary>指定した設定を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">休日の名称を表す<b><see cref="T:System.String">String</see></b>値。</param>
      <param name="month">月を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="day">日を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Holiday.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した設定を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="startMonth">開始月を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="startDay">開始日を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="endMonth">終了月を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="endDay">終了日を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Holiday.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した休業期間を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">休日の名称を表す<b><see cref="T:System.String">String</see></b>値。</param>
      <param name="startMonth">開始月を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="startDay">開始日を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="endMonth">終了月を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="endDay">終了日を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Holiday.EndDay">
      <summary>休日の終了日を取得または設定します。</summary>
      <value>休業期間の終了日を表す、1から月の日数までの整数値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Holiday.EndMonth">
      <summary>休日の終了月を取得または設定します。</summary>
      <value>休業期間の終了月を表す、1～12の整数値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Holiday.IsYearly">
      <summary>休日が毎年適用されるか、されないかを取得します。</summary>
      <value>この休日が毎年適用される場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>この実装の休日は毎年繰り返されるため、常に<see langword="true" />の値が返されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Holiday.Name">
      <summary>休日の名称を取得または設定します。</summary>
      <value>休日の名称を表す<b><see cref="T:System.String">String</see></b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Holiday.StartDay">
      <summary>休日の開始日を取得または設定します。</summary>
      <value>休業期間の開始日を表す、1から月の日数までの整数値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Holiday.StartMonth">
      <summary>休日の開始月を取得または設定します。</summary>
      <value>休業期間の開始月を表す、1～12の整数値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Holiday.Clone">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" /> オブジェクトのシャローコピーを作成します。</summary>
      <returns>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" /> のシャローコピー。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Holiday.IsHoliday(System.DateTime)">
      <summary>指定の日付がオブジェクトに関連付けられているかどうかを返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定された日付がオブジェクトに関連付けられています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定された日付はオブジェクトに関連付けられていません。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Holiday.TypeOfDay(System.DateTime)">
      <summary>指定の日付の種類を返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>日のタイプを表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> 列挙体。</returns>
      <remarks>このメソッドは、指定した日付が休日の場合は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Holiday" />を返し、それ以外の場合は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Normal" />を返します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase">
      <summary>休日インタフェースの基本クラス実装を表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.IsYearly">
      <summary>休日が毎年適用されるか、されないかを取得します。</summary>
      <value>この休日が毎年適用される場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.Name">
      <summary>休日の名称を取得または設定します。</summary>
      <value>休日の名称を表す<b><see cref="T:System.String">String</see></b>値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.Clone">
      <summary>オブジェクトの複製を返します。</summary>
      <returns>複製されたオブジェクトを表す<b><see cref="T:System.Object">Object</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.IsHoliday(System.DateTime)">
      <summary>指定の日付がオブジェクトに関連付けられているかどうかを返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定された日付がオブジェクトに関連付けられています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定された日付はオブジェクトに関連付けられていません。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.PropertyChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.PropertyChangedEventArgs" />インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.TypeOfDay(System.DateTime)">
      <summary>指定の日付の種類を返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>日のタイプを表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> 列挙体。</returns>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.HolidayBase.PropertyChanged">
      <summary>いずれかのプロパティが変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection">
      <summary>休日コレクションマネージャによってサポートされる<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" />、および<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday" />クラスのインスタンスのコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.#ctor">
      <summary>新しい <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> オブジェクトを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.#ctor(GrapeCity.Win.Spread.InputMan.CellType.Weekdays)">
      <summary>新しい <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> オブジェクトを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.#ctor(GrapeCity.Win.Spread.InputMan.CellType.IHoliday[],GrapeCity.Win.Spread.InputMan.CellType.Weekdays)">
      <summary>指定した設定を使用して、新しい<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" />オブジェクトを初期化します（外部での使用は推奨されません）。</summary>
      <param name="holidays">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> インタフェースを実装した休日のオブジェクト配列。</param>
      <param name="weekdays">曜日の休日設定を含む<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Weekdays" />オブジェクト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Item(System.Int32)">
      <summary>インデックスによって指定した <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> を取得します。</summary>
      <value>インデックスを示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Weekdays">
      <summary>休業日設定の対象となる曜日を指定する<b><see cref="T:GrapeCity.Win.Editors.Weekdays">Weekdays</see></b> オブジェクトを取得または設定します。</summary>
      <value>各曜日の休日規則を含む<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Weekdays" />オブジェクト。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.IHoliday)">
      <summary>コレクションに項目を追加します。</summary>
      <param name="holiday">追加する休日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.AddRange(GrapeCity.Win.Spread.InputMan.CellType.IHoliday[])">
      <summary>指定した <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> 配列の要素をコレクションの最後にコピーします。</summary>
      <param name="holidays">コレクションに追加する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> オブジェクトの配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Contains(GrapeCity.Win.Spread.InputMan.CellType.IHoliday)">
      <summary>指定した<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" />が<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" />のメンバかどうかを示す値を返します。</summary>
      <param name="holiday">コレクションのメンバかどうかをチェックする<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" />。</param>
      <returns>
        <b>holiday</b> パラメーターが <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> のメンバーである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.IHoliday[],System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> 全体を、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> 型の互換性のある１次元配列の指定した０から始まるインデックス以降にコピーします。</summary>
      <param name="holidays">コピー操作のコピー先として使用する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> 型の配列。</param>
      <param name="index">コピー先配列上のコピー開始位置を示す0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.GetTypeOfDay(System.DateTime,System.Object@)">
      <summary>指定した日付に対応する項目を取得し、更に休日の種類を返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <param name="holiday">休日に関連付けれらた<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" />、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" />、または<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceWorkday" />クラス。</param>
      <returns>日のタイプを表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> 列挙体。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.IHoliday)">
      <summary>指定した <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> を検索し、コレクション内で最初に見つかった一致する項目の０から始まるインデックスを返します。</summary>
      <param name="holiday">コレクション内で検索する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" />。</param>
      <returns>指定項目の、コレクション内での0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.IHoliday)">
      <summary>コレクションに休日オブジェクトを挿入します。</summary>
      <param name="index">
        <b>holiday</b>を挿入する位置の0から始まるインデックス。</param>
      <param name="holiday">挿入する項目を表す<b><see cref="T:GrapeCity.Win.Editors.IHoliday">IHoliday</see></b>インタフェース実装オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.IsHoliday(System.DateTime)">
      <summary>指定の日付がオブジェクトに関連付けられているかどうかを返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定された日付がオブジェクトに関連付けられています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定された日付はオブジェクトに関連付けられていません。</description>
          </item>
        </list>
      </returns>
      <remarks>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Holiday" />または<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ForceHoliday" />クラスを使用して指定された日付は休日として扱われます。また、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />構造体を使用することで、特定の曜日を休日として扱うこともできます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.IsOverridden(System.DateTime)">
      <summary>指定の日付が振替休日か、そうでないかを返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>指定した日付が振替休日の場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
      <remarks>指定した休日が、同じく休日に設定されている日に重なったとき、その休日に振替フラグが設定されていると、<b>振替</b>休日が発生します。詳細については、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />を参照してください。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.OnClear">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> インスタンスの内容をクリアした後で、追加のカスタム処理を実行します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> インスタンスに新しい要素を挿入した後で、追加のカスタム処理を実行します。</summary>
      <param name="index">
        <b>value</b>を挿入する位置の0から始まるインデックス。</param>
      <param name="value">指定したインデックスにある要素の新しい値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> インスタンスから要素を削除した後で、追加のカスタム処理を実行します。</summary>
      <param name="index">削除された項目の、0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">削除された項目を表す<b><see cref="T:System.Object">Object</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.IHoliday)">
      <summary>指定した <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" /> を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" /> 内で検索し、最初に見つかった一致する項目を削除します。</summary>
      <param name="holiday">コレクションから削除する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday" />。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle">
      <summary>休日スタイルを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.#ctor(System.String)">
      <summary>指定した名前を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />の名前を示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.#ctor(System.String,GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection,GrapeCity.Win.Spread.InputMan.CellType.SubStyle)">
      <summary>名前、休日のコレクション および休日の書式を設定して<b><see cref="T:GrapeCity.Win.Editors.HolidayStyle">HolidayStyle</see></b> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />の名前を示す<see cref="T:System.String" />値。</param>
      <param name="holidays">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />の休日を示す<see cref="T:System.String" />値。</param>
      <param name="subStyle">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />のサブスタイルを示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.Holidays">
      <summary>休日のコレクションを取得または設定します。</summary>
      <value>休日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.Name">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> の名前を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />の名前を示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.SubStyle">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> のサブスタイルを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />のサブスタイルを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.SubStyle" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.Clone">
      <summary>この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> オブジェクトの同一コピーを作成します。</summary>
      <returns>このメソッドによって作成される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />オブジェクトを返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.Dispose">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> で使用されているリソースを解放します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.OnHolidaysCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayCollection" />が変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.CollectionChangeEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />オブジェクトが変更されたときに発生します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.PropertyChangedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.OnSubStylePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.SubStyle" />オブジェクトが変更されたときに発生します。</summary>
      <param name="e">イベントデータを格納している<b><see cref="System.ComponentModel.PropertyChangedEventArgs">PropertyChangedEventArgs</see></b>。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection">
      <summary>休日設定のコレクションを実装します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.#ctor">
      <summary>
        <b>
          <see cref="T:GrapeCity.Win.Editors.HolidayStyleCollection">HolidayStyleCollection</see>
        </b> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.#ctor(System.String[],GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="keys">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> に追加するキーの配列。</param>
      <param name="holidayStyles">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> に追加する HolidayStyle の配列。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Item(System.Int32)">
      <summary>指定したインデックスにある<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />を取得します。</summary>
      <value>インデックスを示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Item(System.String)">
      <summary>指定したキーを持つ <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> を取得します。</summary>
      <value>キーを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Add(System.String)">
      <summary>指定したキーを持つ新しい <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> に追加します。</summary>
      <param name="key">この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> のキー。</param>
      <returns>この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> でのインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Add(System.String,GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle)">
      <summary>指定したキーと値を持つ項目を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> に追加します。</summary>
      <param name="key">キー文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
      <param name="holidayStyle">コレクションに追加する項目を表す<b><see cref="T:GrapeCity.Win.Editors.HolidayStyle">HolidayStyle</see></b>オブジェクト。</param>
      <returns>この項目の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> でのインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.AddRange(System.String[],GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle[])">
      <summary>指定したキーの配列と <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> の配列を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> に追加します。</summary>
      <param name="keys">キー文字列を表す<b><see cref="T:System.String">String</see></b>配列。</param>
      <param name="holidayStyles">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Clear">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> からすべての要素を削除します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> の項目を、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> 型の互換性のある１次元配列の先頭インデックス以降にコピーします。</summary>
      <param name="array">コピー操作のコピー先として使用する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> 型の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle[],System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> の項目を、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> 型の互換性のある１次元配列の指定した０から始まるインデックス以降にコピーします。</summary>
      <param name="array">コピー操作のコピー先として使用する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> 型の配列。</param>
      <param name="arrayIndex">コピー先配列上のコピー開始位置を示す0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Dispose">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> で使用されているリソースを解放します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Insert(System.Int32,System.String)">
      <summary>指定したキーを持つ新しい <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> に挿入します。</summary>
      <param name="index">この挿入する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> のインデックス。</param>
      <param name="key">この挿入する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> のキー。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Insert(System.Int32,System.String,GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle)">
      <summary>指定したキーと値を持つ項目を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> に挿入します。</summary>
      <param name="index">この挿入する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> のインデックス。</param>
      <param name="key">. この挿入する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> のキー。</param>
      <param name="holidayStyle">挿入された <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" /> オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Load(System.String)">
      <summary>コレクションをファイルから読み込みます。</summary>
      <param name="fileName">ファイル名を示す<see cref="T:System.String" />。</param>
      <returns>休日スタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />が変更されたときに発生します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.CollectionChangeEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.OnHolidayStyleHolidaysCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />が変更されたときに発生します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.CollectionChangeEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.OnHolidayStylePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />オブジェクトが変更されたときに発生します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.CollectionChangeEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.OnHolidayStyleSubStylePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyle.SubStyle" />プロパティが変更されたときに発生します。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.PropertyChangedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Remove(System.String)">
      <summary>指定したキーを持つ要素を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> から削除します。</summary>
      <param name="key">項目のキーを示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.RemoveAt(System.Int32)">
      <summary>指定したインデックスにある要素を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" /> から削除します。</summary>
      <param name="index">項目のインデックスを示す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection.Save(GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection,System.String)">
      <summary>休日スタイルをXML形式でディスクに保存します。</summary>
      <param name="holidayStyles">休日スタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayStyleCollection" />。</param>
      <param name="fileName">ファイル名を示す<see cref="T:System.String" />。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo">
      <summary>ユーザーの入力を受け入れるキャラクターボックスを定義します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo" />の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo.#ctor(System.Boolean,System.Drawing.Size,System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,System.Windows.Forms.Padding,System.Windows.Forms.Padding,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo,System.Drawing.Font,System.Drawing.ContentAlignment)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo" />の新しいインスタンスを初期化します。</summary>
      <param name="autoSize">コントロールに割り当てられたフォントが変更されたときにコントロールの高さが自動的に調整されるかどうかを示す<see langword="bool" />値。</param>
      <param name="backColor">背景色を示す<see cref="T:System.Drawing.Color" />。</param>
      <param name="border">入力ボックスの境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />。</param>
      <param name="contentAlignment">入力ボックスの内容の配置を示す<see cref="T:System.Drawing.ContentAlignment" />値。</param>
      <param name="font">入力ボックスのテキストのフォントを示す<see cref="T:System.Drawing.Font" />。</param>
      <param name="foreColor">前景色を示す<see cref="T:System.Drawing.Color" />。</param>
      <param name="margin">余白を示す<see cref="T:System.Windows.Forms.Padding" />。</param>
      <param name="padding">パディングを示す<see cref="T:System.Windows.Forms.Padding" />。</param>
      <param name="size">入力ボックスのサイズを示す<see cref="T:System.Drawing.Size" />。</param>
      <param name="style">入力ボックスのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase">
      <summary>InputManセルの基本クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化情報から新しい InputManCellTypeBase を作成します。</summary>
      <param name="info">SerializationInfo。</param>
      <param name="context">StreamingContext。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.AcceptsArrowKeys">
      <summary>編集コントロールによる方向キーの処理方法を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.BackgroundImage">
      <summary>セルの背景画像を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.EditMode">
      <summary>コントロールの編集モードを取得または設定します。</summary>
      <value>このコントロールの編集モードを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EditMode" /> 値。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EditMode.Insert" /> です。</value>
      <remarks>このプロパティの値に "Fixed" という接頭辞が付いている場合は、［Insert］キーを押しても編集モードに影響しません。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.OverWrite" /> プロパティがこのメソッドに影響を与える場合があります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.ExcelExportFormat">
      <summary>Excel ファイルにエクスポートするときに Excel によって使用される書式文字列を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.ExitOnLastChar">
      <summary>コントロールに最後の文字が入力されると同時にタブオーダーの次のコントロールがフォーカスを受け取るかどうかを取得または設定します。</summary>
      <value>入力コントロールによって定義された最後の文字がコントロールに入力されると同時にタブオーダーの次のコントロールにフォーカスが移動する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>最後に入力した文字によってテキストがコントロールの最大文字数を超えた場合、入力フォーカスが次のコントロールに移動します。</remarks>
      <seealso cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.ExitOnLeftRightKey" />
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.ReadOnly">
      <summary>このコントロールが読み取り専用かどうかを示す値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>コントロールを読み取り専用にします。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>コントロールへの入力を許可します。</description>
          </item>
        </list>既定値は<b>False</b>です。</value>
      <remarks>このプロパティを <see langword="true" /> に設定すると、実行時にユーザーがコントロールの内容を変更できなくなります。このプロパティが <see langword="true" /> に設定されている場合でも、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.Text" /> プロパティの値をコードで設定することは可能です。<see cref="P:System.Windows.Forms.Control.Enabled" /> プロパティによってコントロールを無効にする代わりにこの機能を使用することで、内容をコピーしたりツールチップを表示したりすることが可能となります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.ShortcutKeys">
      <summary>InputMan EditingControl のショートカットを取得します。</summary>
      <value>編集コントロールのすべてのショートカットを表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary" /> 値。</value>
      <remarks>このディクショナリーにショートカットを追加すると、編集モードでそれらのショートカットを InputMan コントロールと同じように使用できます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.ShowTouchToolBar">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.TouchToolBar" />の表示方法を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.TouchToolBar" />の表示方法を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions" />値。デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions.TapGripper" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.Static">
      <summary>セルが、ユーザー入力を禁止する静的セルであるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.TouchContextMenuScale">
      <summary>タッチによってコンテキストメニューがポップアップしたときにコンテキストメニュー項目の高さに適用する係数を取得または設定します。</summary>
      <value>この係数は、タッチによってコンテキストメニューがポップアップしたときにコンテキストメニュー項目の高さに適用されます。デフォルト値は1.5fです。</value>
      <remarks>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.EditBase.TouchContextMenuScale" />を設定することで、タッチによってコンテキストメニューがポップアップしたときにコンテキストメニュー項目の高さを高くすることができます。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">指定できる値は 1 から 4 までです。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.TouchToolBar">
      <summary>タッチ操作によって表示される<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.TouchToolBar" />を取得します。</summary>
      <value>タッチ操作によって表示される<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.TouchToolBar" />インスタンス。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.UseSpreadDropDownButtonRender">
      <summary>Spread ドロップダウンボタンレンダラーによってドロップダウンボタンを描画するかどうかを示す値を取得または設定します。</summary>
      <value>Spread ドロップダウンボタンレンダラーによってドロップダウンボタンを描画する場合は <c>true</c>。それ以外の場合は <c>false</c>。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.CanBeOverflown">
      <summary>別のセルが一杯になったときにそのデータをこのセルに表示できるかどうか（このセルに対してオーバーフローできるかどうか）を決定します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.CanOverflow">
      <summary>セルが一杯になったときに隣接するセルにデータを表示できるかどうかを決定します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.CancelEditing">
      <summary>セルの編集をキャンセルします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.Clone">
      <summary>基本 InputMan セルを作成して返します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.Dispose">
      <summary>オブジェクトによって使用されているリソースを開放します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.GetDefaultShortcuts">
      <summary>既定のショートカット機能を取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.GetDisplayText(System.Object)">
      <summary>表示テキストを取得します。</summary>
      <param name="value">値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.GetEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>指定した親コントロールのエディタに関連付けられたコントロールを取得します。</summary>
      <param name="parent">親コントロール。</param>
      <param name="appearance">コントロールの外観設定。</param>
      <param name="zoomFactor">コントロールの表示倍率を表す数値。</param>
      <returns>コントロール。</returns>
      <remarks>コントロールをはじめて作成した後、そのコントロールを parent.Controls に追加し、その親に対して再び呼び出されたときに同じインスタンスを返します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.GetErrorIconBound(System.Drawing.Graphics,FarPoint.Win.Spread.Appearance,System.Drawing.Rectangle,System.Single)">
      <summary>エラーアイコンを描画する矩形を取得します。</summary>
      <param name="g">Graphichsオブジェクト。</param>
      <param name="appearance">外観設定。</param>
      <param name="cellRectangle">セルを描画する矩形。</param>
      <param name="zoomFactor">倍率設定。</param>
      <returns>矩形。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に対して、ターゲットオブジェクトのシリアル化に必要なデータを設定します。</summary>
      <param name="info">データを設定する <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">このシリアル化のシリアル化（<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照）。</param>
      <exception cref="T:System.Security.SecurityException">呼び出し元に必要なアクセス許可がありません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.GetReservedCursor(System.Object)">
      <summary>このセル型に予約されているカーソルを取得します。</summary>
      <param name="o">予約されているカーソル（ポインタ）を示すオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.InitialByCreateInstance(System.Object,System.String,System.Object)">
      <summary>設計時のCreateInstanceをサポートします。</summary>
      <param name="instance" />
      <param name="propertyName" />
      <param name="value" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.InitializeEditorControl(System.Windows.Forms.Control,FarPoint.Win.Spread.Appearance,System.Single)">
      <summary>エディタコントロールを初期化します。</summary>
      <param name="control">初期化するエディタコントロール。</param>
      <param name="appearance">外観設定。</param>
      <param name="zoomFactor">コントロールの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.IsReservedLocation(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Single)">
      <summary>指定したカーソル位置に、編集コントロールに対する特別な意味があるかどうかを判断します。</summary>
      <param name="g">エディタコントロールを描画するためのグラフィックデバイスインタフェース。</param>
      <param name="x">ポインタ位置の X 座標。</param>
      <param name="y">ポインタ位置の Y 座標。</param>
      <param name="rc">矩形領域の位置とサイズ。</param>
      <param name="appearance">エディタコントロールの外観設定。</param>
      <param name="value">エディタコントロールの名前を含むオブジェクト。</param>
      <param name="zoomFactor">エディタコントロールの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.IsReusable(System.Windows.Forms.Control)">
      <summary>このコントロールが再利用できるかどうかをチェックします。</summary>
      <param name="control" />
      <returns>このコントロールが再利用できる場合は true。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.PaintCell(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>指定した外観設定を使用して、編集モードでないときのセルを指定したグラフィックインタフェースに描画します。</summary>
      <param name="g">セルを描画するためのグラフィックデバイスインタフェース。</param>
      <param name="r">矩形領域の位置とサイズ。</param>
      <param name="appearance">セルの外観設定。</param>
      <param name="value">セルのレンダラーコントロールの名前を含むオブジェクト。</param>
      <param name="isSelected">セルが選択されているかどうか。</param>
      <param name="isLocked">セルがロックされているかどうか。</param>
      <param name="zoomFactor">セルの表示倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.PaintCell(FarPoint.PDF.PdfGraphics,System.Drawing.RectangleF,FarPoint.Win.Spread.Appearance,System.Object,System.Boolean,System.Boolean,System.Single)">
      <summary>指定した外観設定を使用して、編集モードでないときのセルを指定したグラフィックインタフェースに PDF 印刷します。</summary>
      <param name="g">セルを描画するための PDF グラフィックデバイスインタフェース。</param>
      <param name="r">矩形領域の位置とサイズ。</param>
      <param name="appearance">セルの外観設定。</param>
      <param name="value">セルのレンダラーコントロールの名前を含むオブジェクト。</param>
      <param name="isSelected">セルが選択されているかどうか。</param>
      <param name="isLocked">セルがロックされているかどうか。</param>
      <param name="zoomFactor">セルの描画倍率を表す数値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.StartEditing(System.EventArgs,System.Boolean,System.Boolean)">
      <summary>セルの編集を開始します。</summary>
      <param name="e">イベント。</param>
      <param name="selectAll">すべてを選択するかどうか。</param>
      <param name="autoClipboard">クリップボードアクションのショートカットキーを許可するかどうか。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.InputManCellTypeBase.StopEditing">
      <summary>セルの編集を終了します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle">
      <summary>スタイルの設定を定義する<b>ItemStyle</b>クラスを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle.BackColor">
      <summary>背景色を取得または設定します。</summary>
      <value>背景色を表す<see cref="T:System.Drawing.Color" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle.ForeColor">
      <summary>文字色を取得または設定します。</summary>
      <value>前景色を表す<see cref="T:System.Drawing.Color" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle.GradientEffect">
      <summary>背景グラデーション効果を表す値を取得または設定します。</summary>
      <value>背景グラデーション効果を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyle.GradientEffect" />値。<br /> デフォルト値は<see langword="null" />です。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo">
      <summary>スタイルの設定を定義する<b>ItemStyleInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo.BackColor">
      <summary>背景色を取得または設定します。</summary>
      <value>背景色を表す<see cref="T:System.Drawing.Color" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo.ForeColor">
      <summary>文字色を取得または設定します。</summary>
      <value>前景色を表す<see cref="T:System.Drawing.Color" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo.GradientEffect">
      <summary>背景グラデーション効果を表す値を取得または設定します。</summary>
      <value>背景グラデーション効果を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo.GradientEffect" />値。<br /> デフォルト値は<see langword="null" />です。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemStyleInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate">
      <summary>項目のテンプレートを定義する<b>ItemTemplate</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.#ctor(System.Int32,System.Object,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Drawing.Font,GrapeCity.Win.Spread.InputMan.CellType.GradientEffect)">
      <summary>指定した値を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="indent">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のインデントを表す<see cref="T:System.Int32" />値。</param>
      <param name="image">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Image" />を表す<b>object</b>値。</param>
      <param name="backColor">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.BackColor" />を表す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="foreColor">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ForeColor" />を表す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="height">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Height" />を表す<see cref="T:System.Int32" />値。</param>
      <param name="font">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Font" />を表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.Font" />値。</param>
      <param name="gradientEffect">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.GradientEffect" />を表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.GradientEffect" />。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.AutoItemHeight">
      <summary>高さが最適かどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。高さが最適な場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.BackColor">
      <summary>背景色を取得または設定します。</summary>
      <value>背景色を示す<see cref="T:System.Drawing.Color" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.Font">
      <summary>フォントを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.Font" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.ForeColor">
      <summary>文字色を取得または設定します。</summary>
      <value>前景色を示す<see cref="T:System.Drawing.Color" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.GradientEffect">
      <summary>グラデーション効果を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.GradientEffect" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.Height">
      <summary>高さを取得または設定します。</summary>
      <value>高さを示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.Image">
      <summary>画像を取得または設定します。</summary>
      <value>画像を示す<see cref="T:System.Object" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.Indent">
      <summary>インデントを取得または設定します。</summary>
      <value>インデントを示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.ResetFont">
      <summary>
        <b>Font</b>をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.ResetForeColor">
      <summary>
        <b>ForeColor</b>をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.ResetHeight">
      <summary>Heightプロパティをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.ShouldSerializeFont">
      <summary>
        <b>Font</b>をシリアル化する必要があるかどうかを示します。</summary>
      <returns>
        <see langword="bool" />値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.ShouldSerializeForeColor">
      <summary>
        <b>ForeColor</b>をシリアル化する必要があるかどうかを示します。</summary>
      <returns>
        <see langword="bool" />値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate.ShouldSerializeHeight">
      <summary>Heightをシリアル化する必要があるかどうかを示します。</summary>
      <returns>
        <see langword="bool" />値。Heightプロパティのコードを生成する必要がある場合はtrue、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection">
      <summary>
        <b>ItemTemplate</b>を保持する<b>ItemTemplateCollection</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.Count">
      <summary>コレクションの項目数を取得します。</summary>
      <value>コレクションの項目数を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.Item(System.Int32)">
      <summary>指定した位置にある項目を取得または設定します。</summary>
      <value>コレクション内の指定した位置を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate)">
      <summary>コレクションに項目を追加します。</summary>
      <param name="item">コレクションに追加する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate" />オブジェクト。</param>
      <returns>追加された項目のインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.Clear">
      <summary>コレクション内のすべての項目をクリアします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.Contains(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate)">
      <summary>コレクションに指定した項目が含まれるかどうかを判断します。</summary>
      <param name="item">指定した<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />オブジェクト。</param>
      <returns>コレクション内でオブジェクトが見つかった場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate[],System.Int32)">
      <summary>
        <see cref="T:System.Collections.ICollection" />の要素を、<see cref="T:System.Array" />の特定の<see cref="T:System.Array" nolink="true" />インデックス以降にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" />の要素のコピー先となる1次元の<see cref="T:System.Array" />。<see cref="T:System.Array" nolink="true" />にはゼロから始まるインデックスが必要です。</param>
      <param name="index">コピーを開始する、配列内のゼロから始まるインデックス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.GetEnumerator">
      <summary>コレクションを列挙する列挙子を取得します。</summary>
      <returns>コレクションの列挙子を返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate)">
      <summary>項目のインデックスを取得します。</summary>
      <param name="item">インデックスを特定する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />オブジェクト。</param>
      <returns>コレクション内でオブジェクトが見つかった場合はそのインデックス。見つからなかった場合は-1。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate)">
      <summary>コレクションの指定した位置に項目を挿入します。</summary>
      <param name="index">値を挿入する位置の、ゼロから始まるインデックス。</param>
      <param name="item">コレクションに挿入する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate)">
      <summary>コレクションから特定の項目を削除します。</summary>
      <param name="item">削除する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplate" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollection.RemoveAt(System.Int32)">
      <summary>コレクションの特定の位置にある項目を削除します。</summary>
      <param name="index">削除するインデックス。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo">
      <summary>
        <b>ItemTemplateInfo</b>を保持する<b>ItemTemplateCollectionInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.#ctor">
      <summary>デフォルトコンストラクター</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.Count">
      <summary>コレクションの項目数を取得します。</summary>
      <value>コレクションの項目数を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.Item(System.Int32)">
      <summary>指定した位置にある項目を取得または設定します。</summary>
      <value>コレクション内の指定した位置を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.Add(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo)">
      <summary>コレクションに項目を追加します。</summary>
      <param name="item">コレクションに追加する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo" />オブジェクト。</param>
      <returns>追加された項目のインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.AddRange(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo[])">
      <summary>指定したコレクションに含まれる要素をコレクションの最後に追加します。</summary>
      <param name="items">このコレクションに要素を追加するコレクション。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.Clear">
      <summary>コレクション内のすべての項目をクリアします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.Contains(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo)">
      <summary>コレクションに指定した項目が含まれるかどうかを判断します。</summary>
      <param name="item">指定した<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクト。</param>
      <returns>コレクション内でオブジェクトが見つかった場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo[],System.Int32)">
      <summary>
        <see cref="T:System.Collections.ICollection" />の要素を、<see cref="T:System.Array" />の特定の<see cref="T:System.Array" nolink="true" />インデックス以降にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" />の要素のコピー先となる1次元の<see cref="T:System.Array" />。<see cref="T:System.Array" nolink="true" />にはゼロから始まるインデックスが必要です。</param>
      <param name="index">コピーを開始する、配列内のゼロから始まるインデックス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.GetEnumerator">
      <summary>コレクションを列挙する列挙子を取得します。</summary>
      <returns>コレクションの列挙子を返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo)">
      <summary>項目のインデックスを取得します。</summary>
      <param name="item">インデックスの特定に使用する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />オブジェクト。</param>
      <returns>コレクション内でオブジェクトが見つかった場合はそのインデックス。見つからなかった場合は-1。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo)">
      <summary>コレクションの指定した位置に項目を挿入します。</summary>
      <param name="index">値を挿入する位置の、ゼロから始まるインデックス。</param>
      <param name="item">コレクションに挿入する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.Remove(GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo)">
      <summary>コレクションから特定の項目を削除します。</summary>
      <param name="item">削除する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.RemoveAt(System.Int32)">
      <summary>コレクションの特定の位置にある項目を削除します。</summary>
      <param name="index">削除するインデックス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateCollectionInfo.ToArray">
      <summary>コレクションのサブ項目を新しい配列にコピーします。</summary>
      <returns>コレクションのすべての項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo" />の配列。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo">
      <summary>項目のテンプレートを定義する<b>ItemTemplateInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.#ctor(System.Int32,System.Object,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Drawing.Font,GrapeCity.Win.Spread.InputMan.CellType.GradientEffect)">
      <summary>指定した値を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="indent">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のインデントを表す<see cref="T:System.Int32" />値。</param>
      <param name="image">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Image" />を表す<b>object</b>値。</param>
      <param name="backColor">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.BackColor" />を表す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="foreColor">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ForeColor" />を表す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="height">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Height" />を表す<see cref="T:System.Int32" />値。</param>
      <param name="font">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Font" />を表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Font" />値。</param>
      <param name="gradientEffect">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.GradientEffect" />を表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.GradientEffect" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.AutoItemHeight">
      <summary>高さが最適かどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" />値。高さが最適な場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.BackColor">
      <summary>背景色を取得または設定します。</summary>
      <value>背景色を示す<see cref="T:System.Drawing.Color" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Font">
      <summary>フォントを取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Font" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.ForeColor">
      <summary>文字色を取得または設定します。</summary>
      <value>前景色を示す<see cref="T:System.Drawing.Color" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.GradientEffect">
      <summary>グラデーション効果を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.GradientEffect" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Height">
      <summary>高さを取得または設定します。</summary>
      <value>高さを示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Image">
      <summary>画像を取得または設定します。</summary>
      <value>画像を示す<see cref="T:System.Object" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Indent">
      <summary>インデントを取得または設定します。</summary>
      <value>インデントを示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.ResetFont">
      <summary>
        <b>Font</b>をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.ResetForeColor">
      <summary>
        <b>ForeColor</b>をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.ResetHeight">
      <summary>Heightプロパティをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.ShouldSerializeFont">
      <summary>
        <b>Font</b>をシリアル化する必要があるかどうかを示します。</summary>
      <returns>
        <see langword="bool" />値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.ShouldSerializeForeColor">
      <summary>
        <b>ForeColor</b>をシリアル化する必要があるかどうかを示します。</summary>
      <returns>
        <see langword="bool" />値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ItemTemplateInfo.ShouldSerializeHeight">
      <summary>Heightをシリアル化する必要があるかどうかを示します。</summary>
      <returns>
        <see langword="bool" />値。Heightプロパティのコードを生成する必要がある場合はtrue、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs">
      <summary>イベントのデータを提供します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs.#ctor(GrapeCity.Win.Spread.InputMan.CellType.ExitKeys)">
      <summary>指定した <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" /> を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="key">
        <b>KeyExit</b>イベントを発生させたキーを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" />値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs.Key">
      <summary>
        <b>KeyExit</b>イベントを発生させたキーを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" />値を取得します。</summary>
      <value>
        <b>KeyExit</b>イベントを発生させたキーを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys" />値。</value>
      <remarks>このプロパティは、キーボードのキーを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Line">
      <summary>外観設定を定義する<b>Line</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Line.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Line.#ctor(GrapeCity.Win.Spread.InputMan.CellType.LineStyle,System.Drawing.Color)">
      <summary>指定した属性設定を使用して、新しい <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> クラスインスタンスを初期化します。</summary>
      <param name="lineStyle">線のスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />列挙体。</param>
      <param name="color">線の色を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Color" />値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Color">
      <summary>罫線の色を取得または設定します。</summary>
      <value>線の色を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Color" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Empty">
      <summary>空白線を取得します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Line.LineWidth">
      <summary>罫線の太さを取得します。</summary>
      <value>線の幅を表す <see cref="T:System.Int32" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Line.Style">
      <summary>線のスタイル（点線、破線、くぼんだ線など）を取得または設定します。</summary>
      <value>スタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle" />値の1つ。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Line.Clone">
      <summary>オブジェクトの複製を返します。</summary>
      <returns>複製されたオブジェクトを表す<b><see cref="T:System.Object">Object</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Line.Equals(System.Object)">
      <summary>指定したオブジェクトが現在のインスタンスと等しいかどうかを判断します。</summary>
      <param name="obj">現在の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" /> と比較する <b>object</b>。</param>
      <returns>このメソッドは、<b>obj</b>が<b>Line</b>オブジェクトであり、その<b>Color</b>プロパティと<b>Style</b>プロパティがこの<b>Line</b>構造体の対応するプロパティと等しい場合は<b>true</b>を返し、それ以外の場合は<b>false</b>を返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Line.GetHashCode">
      <summary>オブジェクトのハッシュコードを返します。</summary>
      <returns>現在のオブジェクトのハッシュコードを示す<see cref="T:System.Int32" />値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Line.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />オブジェクトが変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.PropertyChangedEventArgs" />インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Line.ToString">
      <summary>罫線の色と種類を表す文字列を返します。</summary>
      <returns>罫線の色と種類を表す<b><see cref="T:System.String">String</see></b>値。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn">
      <summary>列オブジェクトを定義する<b>ListColumn</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.#ctor(System.String)">
      <summary>ヘッダのテキストを指定して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="text">ヘッダのテキストを示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType)">
      <summary>表示タイプを指定して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataDisplayType">列の表示タイプを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataDisplayType" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataDisplayType">列の表示タイプを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataDisplayType" />値。</param>
      <param name="defaultSubItem">列のデフォルトサブ項目を表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DefaultSubItem" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem,System.Int32)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataDisplayType">列の表示タイプを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataDisplayType" />値。</param>
      <param name="defaultSubItem">列のデフォルトサブ項目を表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DefaultSubItem" />値。</param>
      <param name="width">列の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Width" />を表す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem,System.Int32,System.Boolean)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataDisplayType">列の表示タイプを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataDisplayType" />値。</param>
      <param name="defaultSubItem">列のデフォルトサブ項目を表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DefaultSubItem" />値。</param>
      <param name="width">列の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Width" />を表す<see cref="T:System.Int32" />値。</param>
      <param name="visible">列が表示されるかどうかを示す<see langword="bool" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,System.String,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItem,System.Collections.IComparer,System.Windows.Forms.SortOrder,System.Boolean,System.Int32)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="autoWidth">
        <see langword="true" />に設定した場合、幅が自動的に計算されます。</param>
      <param name="dataType">列の表示タイプを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataDisplayType" />値。</param>
      <param name="dataPropertyName">データソースのプロパティ名を示す<see cref="T:System.String" />値。</param>
      <param name="defaultSubItem">列のデフォルトサブ項目を表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DefaultSubItem" />値。</param>
      <param name="sortComparer">ソートの比較子を示す<see cref="T:System.Collections.IComparer" />値。</param>
      <param name="sortOrder">ソートの順序を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.SortOrder" />値。</param>
      <param name="visible">列を表示する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</param>
      <param name="width">列の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Width" />を表す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.AutoWidth">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />の幅が内容に基づいて自動的に計算されるかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />の幅が内容に基づいて自動的に計算される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataDisplayType">
      <summary>値の表示タイプを表す値を取得または設定します。</summary>
      <value>値の表示タイプを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataDisplayType" />列挙体。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DataPropertyName">
      <summary>現在連結されているデータソースの連結フィールドの名前を表す<see cref="T:System.String" />値を取得または設定します。</summary>
      <value>データソースのプロパティ名を示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DefaultSubItem">
      <summary>デフォルトサブ項目を表す値を取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />のデフォルトサブ項目を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.DefaultSubItem" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Header">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />のヘッダ設定を表す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />のヘッダを表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.SortComparer">
      <summary>ソート機能の比較子クラスを取得または設定します。</summary>
      <value>
        <see cref="T:System.Collections.IComparer" />オブジェクト。これを使用して独自のソートアルゴリズムを実装できます。</value>
      <remarks>値が<see langword="null" />の場合は組み込みのソートポリシーが使用されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.SortOrder">
      <summary>ソート順序を取得または設定します。</summary>
      <value>ソート順序を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.SortOrder" />列挙体。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Visible">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />が表示されるかどうかを示す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />が表示される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Width">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />の幅を表す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />の幅を表す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetAutoWidth">
      <summary>自動的に計算された幅をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetDataDisplayType">
      <summary>データの表示タイプをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetDefaultSubItem">
      <summary>デフォルトサブ項目をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetHeader">
      <summary>ヘッダをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetSortComparer">
      <summary>ソート比較子をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetSortOrder">
      <summary>ソート順序をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetVisible">
      <summary>表示/非表示設定をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ResetWidth">
      <summary>幅をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ShouldSerializeDefaultSubItem">
      <summary>デフォルトサブ項目をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.ShouldSerializeHeader">
      <summary>ヘッダをシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Sort">
      <summary>列に関連するサブ項目を基準にしてコレクションの項目をソートします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.Sort(System.Windows.Forms.SortOrder,System.Collections.IComparer)">
      <summary>列に関連するサブ項目を基準にしてコレクションの項目をソートします。</summary>
      <param name="sortOrder">ソートの順序を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumn.SortOrder" />値。</param>
      <param name="sortComparer">ソートの比較子を示す<see cref="T:System.Collections.IComparer" />値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />オブジェクトを保持する<b>ListColumnCollection</b>クラスを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Count">
      <summary>コレクションの項目数を取得します。</summary>
      <value>コレクションの項目数を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Item(System.Int32)">
      <summary>指定した位置にある列を取得または設定します。</summary>
      <value>コレクション内の指定した位置を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.ListColumn)">
      <summary>コレクションに項目を追加します。</summary>
      <param name="listColumn">コレクションに追加する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />オブジェクト。</param>
      <returns>追加された項目のインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Add(System.String)">
      <summary>指定したテキストを持つ<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />をコレクションに追加します。</summary>
      <param name="text">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />のテキストを示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.AddProcess(GrapeCity.Win.Spread.InputMan.CellType.ListColumn)">
      <summary>列がコレクションに追加される前に呼び出されます。</summary>
      <param name="column">コレクションに追加される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.AddRange(GrapeCity.Win.Spread.InputMan.CellType.ListColumn[])">
      <summary>指定したコレクションに含まれる列をコレクションの最後に追加します。</summary>
      <param name="columns">コレクションに追加された<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Clear">
      <summary>コレクション内のすべての項目をクリアします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Contains(GrapeCity.Win.Spread.InputMan.CellType.ListColumn)">
      <summary>コレクションに特定の項目が含まれるかどうかを判断します。</summary>
      <param name="item">コレクション内で検索する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />項目。</param>
      <returns>コレクション内で項目が見つかった場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.ListColumn[],System.Int32)">
      <summary>
        <see cref="T:System.Collections.ICollection" />の要素を、<see cref="T:System.Array" />の特定の<see cref="T:System.Array" nolink="true" />インデックス以降にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" />の要素のコピー先となる1次元の<see cref="T:System.Array" />。<see cref="T:System.Array" nolink="true" />にはゼロから始まるインデックスが必要です。</param>
      <param name="arrayIndex">コピーを開始する、配列内のゼロから始まるインデックス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.GetEnumerator">
      <summary>コレクションの列挙子を取得します。</summary>
      <returns>コレクションの現在の列挙子を表す<see cref="T:System.Collections.IEnumerator" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ListColumn)">
      <summary>項目のインデックスを取得します。</summary>
      <param name="item">インデックスを特定する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />オブジェクト。</param>
      <returns>コレクション内でオブジェクトが見つかった場合はそのインデックスを示す<see cref="T:System.Int32" />値。見つからなかった場合は-1。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.ListColumn)">
      <summary>コレクションの指定した位置に項目を挿入します。</summary>
      <param name="index">値を挿入する位置の、ゼロから始まるインデックス。</param>
      <param name="item">コレクションに挿入するオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListColumn)">
      <summary>コレクションから特定の項目を削除します。</summary>
      <param name="item">削除する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />項目。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.RemoveAt(System.Int32)">
      <summary>コレクションの特定の位置にある項目を削除します。</summary>
      <param name="index">削除する項目のゼロから始まるインデックス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.RemoveProcess(GrapeCity.Win.Spread.InputMan.CellType.ListColumn)">
      <summary>列がコレクションから削除される前に呼び出されます。</summary>
      <param name="column">コレクションから削除される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollection.ToArray">
      <summary>コレクションのサブ項目を新しい<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />配列にコピーします。</summary>
      <returns>コレクションからコピーされた項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumn" />配列値。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />オブジェクトを保持する<b>ListColumnCollectionInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Count">
      <summary>コレクションの項目数を取得します。</summary>
      <value>コレクションの項目数を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Item(System.Int32)">
      <summary>指定した位置にある列を取得または設定します。</summary>
      <value>コレクション内の指定した位置を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Add(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo)">
      <summary>コレクションに項目を追加します。</summary>
      <param name="listColumn">コレクションに追加する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />オブジェクト。</param>
      <returns>追加された項目のインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Add(System.String)">
      <summary>指定したテキストを持つ<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />をコレクションに追加します。</summary>
      <param name="text">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />オブジェクトのテキストを示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.AddProcess(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo)">
      <summary>列がコレクションに追加される前に呼び出されます。</summary>
      <param name="column">コレクションに追加される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.AddRange(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo[])">
      <summary>指定したコレクションに含まれる列をコレクションの最後に追加します。</summary>
      <param name="columns">コレクションに追加された<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Clear">
      <summary>コレクション内のすべての項目をクリアします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Contains(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo)">
      <summary>コレクションに特定の項目が含まれるかどうかを判断します。</summary>
      <param name="item">コレクション内で検索する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />項目。</param>
      <returns>コレクション内で項目が見つかった場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo[],System.Int32)">
      <summary>
        <see cref="T:System.Collections.ICollection" />の要素を、<see cref="T:System.Array" />の特定の<see cref="T:System.Array" nolink="true" />インデックス以降にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" />の要素のコピー先となる1次元の<see cref="T:System.Array" />。<see cref="T:System.Array" nolink="true" />にはゼロから始まるインデックスが必要です。</param>
      <param name="arrayIndex">コピーを開始する、配列内のゼロから始まるインデックス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.GetEnumerator">
      <summary>コレクションの列挙子を取得します。</summary>
      <returns>コレクションの現在の列挙子を表す<see cref="T:System.Collections.IEnumerator" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo)">
      <summary>項目のインデックスを取得します。</summary>
      <param name="item">インデックスの特定に使用する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />オブジェクト。</param>
      <returns>コレクション内でオブジェクトが見つかった場合はそのインデックスを示す<see cref="T:System.Int32" />値。見つからなかった場合は-1。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo)">
      <summary>コレクションの指定した位置に項目を挿入します。</summary>
      <param name="index">値を挿入する位置の、ゼロから始まるインデックス。</param>
      <param name="item">コレクションに挿入するオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo)">
      <summary>コレクションから特定の項目を削除します。</summary>
      <param name="item">削除する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />項目。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.RemoveAt(System.Int32)">
      <summary>コレクションの特定の位置にある項目を削除します。</summary>
      <param name="index">削除する項目のゼロから始まるインデックス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.RemoveProcess(GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo)">
      <summary>列がコレクションから削除される前に呼び出されます。</summary>
      <param name="column">コレクションから削除される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnCollectionInfo.ToArray">
      <summary>コレクションのサブ項目を新しい<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />配列にコピーします。</summary>
      <returns>コレクションからコピーされた項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />配列値。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo">
      <summary>列オブジェクトを定義する<b>ListColumnInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor(System.String)">
      <summary>ヘッダテキストを指定して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="text">ヘッダテキストを示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType)">
      <summary>表示タイプを指定して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataDisplayType">列の表示タイプを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataDisplayType" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataDisplayType">列の表示タイプを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataDisplayType" />値。</param>
      <param name="defaultSubItem">列のデフォルトサブ項目を表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo,System.Int32)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataDisplayType">列の表示タイプを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataDisplayType" />値。</param>
      <param name="defaultSubItem">列のデフォルトサブ項目を表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo" />値。</param>
      <param name="width">列の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Width" />を表す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo,System.Int32,System.Boolean)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataDisplayType">列の表示タイプを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataDisplayType" />値。</param>
      <param name="defaultSubItem">列のデフォルトサブ項目を表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo" />値。</param>
      <param name="width">列の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Width" />を表す<see cref="T:System.Int32" />値。</param>
      <param name="visible">列が表示されるかどうかを示す<see langword="bool" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType,System.String,GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo,System.Collections.IComparer,System.Windows.Forms.SortOrder,System.Boolean,System.Int32)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="autoWidth">
        <see langword="true" />に設定した場合、幅が自動的に計算されます。</param>
      <param name="dataType">列の表示タイプを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataDisplayType" />値。</param>
      <param name="dataPropertyName">データソースのプロパティ名を示す<see cref="T:System.String" />値。</param>
      <param name="defaultSubItem">列のデフォルトサブ項目を表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DefaultSubItemInfo" />値。</param>
      <param name="sortComparer">ソートの比較子を示す<see cref="T:System.Collections.IComparer" />値。</param>
      <param name="sortOrder">ソートの順序を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.SortOrder" />値。</param>
      <param name="visible">列を表示する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</param>
      <param name="width">列の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Width" />を表す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.AutoWidth">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />の幅が内容に基づいて自動的に計算されるかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />の幅が内容に基づいて自動的に計算される場合は<see langword="true" />、それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataDisplayType">
      <summary>値の表示タイプを取得または設定します。</summary>
      <value>値の表示タイプを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataDisplayType" />列挙体。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DataPropertyName">
      <summary>現在連結されているデータソースの連結フィールドの名前を表す<see cref="T:System.String" />値を取得または設定します。</summary>
      <value>データソースのプロパティ名を示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DefaultSubItem">
      <summary>デフォルトサブ項目を表す値を取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />オブジェクトのデフォルトサブ項目を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.DefaultSubItem" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Header">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />オブジェクトのヘッダ設定を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />オブジェクトのヘッダを表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.IsBinding">
      <summary>列がデータソースに連結されているかどうかを判断します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.SortComparer">
      <summary>ソート機能の比較子クラスを取得または設定します。</summary>
      <value>
        <see cref="T:System.Collections.IComparer" />オブジェクト。これを使用して独自のソートアルゴリズムを実装できます。</value>
      <remarks>値が<see langword="null" />の場合は組み込みのソートポリシーが使用されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.SortOrder">
      <summary>ソート順序を取得または設定します。</summary>
      <value>ソート順序を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.SortOrder" />列挙体。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Visible">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />が表示されるかどうかを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />が表示される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Width">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />の幅を表す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo" />の幅を表す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetAutoWidth">
      <summary>自動的に計算された幅をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetDataDisplayType">
      <summary>データの表示タイプをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetDefaultSubItem">
      <summary>デフォルトサブ項目をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetHeader">
      <summary>ヘッダをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetSortComparer">
      <summary>ソート比較子をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetSortOrder">
      <summary>ソート順序をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetVisible">
      <summary>表示/非表示設定をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ResetWidth">
      <summary>幅をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ShouldSerializeDefaultSubItem">
      <summary>デフォルトサブ項目をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.ShouldSerializeHeader">
      <summary>ヘッダをシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.ListColumnInfo.PropertyChanged">
      <summary>プロパティが変更されたときにイベントを発生させます。内部使用のみ</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines">
      <summary>リストのグリッド線を定義する<b>ListGridLines</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines.HorizontalLines">
      <summary>水平線のスタイルを取得または設定します。</summary>
      <value>水平線の描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />オブジェクト。<br /> デフォルト値はダークグレーの一重線です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines.VerticalLines">
      <summary>垂直線のスタイルを取得または設定します。</summary>
      <value>垂直線の描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />オブジェクト。<br /> デフォルト値はダークグレーの一重線です。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines.ResetHorizontalLines">
      <summary>水平線をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines.ResetVerticalLines">
      <summary>垂直線をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines.ShouldSerializeHorizontalLines">
      <summary>水平線をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLines.ShouldSerializeVerticalLines">
      <summary>垂直線をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo">
      <summary>リストのグリッド線を定義する<b>ListGridLinesInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.HorizontalLines">
      <summary>水平線のスタイルを取得または設定します。</summary>
      <value>水平線の描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />オブジェクト。<br /> デフォルト値はダークグレーの一重線です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.VerticalLines">
      <summary>垂直線のスタイルを取得または設定します。</summary>
      <value>垂直線の描画に使用される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Line" />オブジェクト。<br /> デフォルト値はダークグレーの一重線です。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.ResetHorizontalLines">
      <summary>水平線をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.ResetVerticalLines">
      <summary>垂直線をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.ShouldSerializeHorizontalLines">
      <summary>水平線をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListGridLinesInfo.ShouldSerializeVerticalLines">
      <summary>垂直線をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader">
      <summary>ヘッダの設定を定義する<b>ListHeader</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.AllowResize">
      <summary>サイズを設定できるかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>ユーザーがサイズを設定できる場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.BackColor">
      <summary>背景色を表す値を取得または設定します。</summary>
      <value>背景色を示す<see cref="T:System.Drawing.Color" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.Clickable">
      <summary>クリック可能かどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" />がクリック可能な場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.ContentAlignment">
      <summary>コントロール内に表示するテキストの配置を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" />の内容の配置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.ContentAlignment" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.Ellipsis">
      <summary>テキストがヘッダの幅を超える場合に省略記号文字を表示するかどうかを取得または設定します。</summary>
      <value>テキストがヘッダの幅を超える場合に省略記号文字を表示するかどうかを示す<see langword="bool" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.ForeColor">
      <summary>前景色を表す値を取得または設定します。</summary>
      <value>前景色を示す<see cref="T:System.Drawing.Color" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.GradientEffect">
      <summary>グラデーション効果を表す値を取得または設定します。</summary>
      <value>グラデーション効果を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.GradientEffect" />値。<br /> デフォルト値は<see langword="null" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.Image">
      <summary>画像を表す値を取得または設定します。</summary>
      <value>画像を示す<b>Object</b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.ImageTextSpace">
      <summary>画像とテキストの間隔を取得または設定します。</summary>
      <value>画像とテキストの間隔を表す<see cref="T:System.Int32" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.SortIndicatorAlignment">
      <summary>ソートインジケーターの配置を表す値を取得または設定します。</summary>
      <value>ソートインジケーターの配置を示す<see cref="T:System.Windows.Forms.LeftRightAlignment" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.Text">
      <summary>キャプションを表す文字列を取得または設定します。</summary>
      <value>キャプションを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.TextAttachAlignment">
      <summary>テキストを画像に対してどのように配置するかを取得または設定します。</summary>
      <value>テキストを画像に対してどのように配置するかを表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.TextEffect">
      <summary>テキスト効果の設定を取得または設定します。</summary>
      <value>テキスト効果を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeader.TextEffect" />値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo">
      <summary>ヘッダの設定を定義する<b>ListHeaderInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.AllowResize">
      <summary>サイズを設定できるかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>ユーザーがサイズを設定できる場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.BackColor">
      <summary>背景色を表す値を取得または設定します。</summary>
      <value>背景色を示す<see cref="T:System.Drawing.Color" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.Clickable">
      <summary>ヘッダがクリック可能かどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" />値。<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" />がクリック可能な場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.ContentAlignment">
      <summary>コントロール内に表示するテキストの配置を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeader" />オブジェクトの内容の配置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.ContentAlignment" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.Ellipsis">
      <summary>テキストがヘッダの幅を超える場合に省略記号文字を表示するかどうかを取得または設定します。</summary>
      <value>テキストがヘッダの幅を超える場合に省略記号文字を表示するかどうかを示す<see langword="bool" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.ForeColor">
      <summary>前景色を表す値を取得または設定します。</summary>
      <value>前景色を示す<see cref="T:System.Drawing.Color" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.GradientEffect">
      <summary>グラデーション効果を取得または設定します。</summary>
      <value>グラデーション効果を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.GradientEffect" />値。<br /> デフォルト値は<see langword="null" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.Image">
      <summary>画像を取得または設定します。</summary>
      <value>画像を示す<b>Object</b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.ImageTextSpace">
      <summary>画像とテキストの間隔を取得または設定します。</summary>
      <value>画像とテキストの間隔を表す<see cref="T:System.Int32" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.SortIndicatorAlignment">
      <summary>ソートインジケーターの配置を取得または設定します。</summary>
      <value>ソートインジケーターの配置を示す<see cref="T:System.Windows.Forms.LeftRightAlignment" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.Text">
      <summary>キャプション文字列を取得または設定します。</summary>
      <value>キャプションを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.TextAttachAlignment">
      <summary>テキストを画像に対してどのように配置するかを取得または設定します。</summary>
      <value>テキストを画像に対してどのように配置するかを表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.TextEffect">
      <summary>テキスト効果の設定を取得または設定します。</summary>
      <value>テキスト効果を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.TextEffect" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane">
      <summary>ヘッダペインの設定を定義する<b>ListHeader</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.AutoHeight">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" />の高さが自動的に調整されるかどうかを示す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" />の高さが<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" nolink="true" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.Font" />に基づいて自動的に調整される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.BackColor">
      <summary>背景色を取得または設定します。</summary>
      <value>コントロールの背景色を表す<see cref="T:System.Drawing.Color" />。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.Control" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.Font">
      <summary>フォントを表す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" />のフォントを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.Font" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.GradientEffect">
      <summary>背景グラデーション効果を表す値を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.GradientEffect" />オブジェクト。<br /> デフォルト値は<see langword="null" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.Height">
      <summary>高さを示す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" />の高さを示す<see cref="T:System.Int32" />値。<br /> デフォルト値は20です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.Visible">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" />が表示されるかどうかを示す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" />が表示される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.ResetHeight">
      <summary>Heightプロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.ShouldSerializeHeight">
      <summary>Heightプロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo">
      <summary>ヘッダペインの設定の定義に使用される<b>ListHeaderPaneInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.AutoHeight">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" />の高さが自動的に調整されるかどうかを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" />の高さが<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" nolink="true" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane.Font" />に基づいて自動的に調整される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.BackColor">
      <summary>背景色を取得または設定します。</summary>
      <value>コントロールの背景色を表す<see cref="T:System.Drawing.Color" />。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.Control" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.Font">
      <summary>フォントを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" />のフォントを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.Font" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.GradientEffect">
      <summary>背景グラデーション効果を表す値を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.GradientEffect" />オブジェクト。<br /> デフォルト値は<see langword="null" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.Height">
      <summary>高さを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPane" />の高さを示す<see cref="T:System.Int32" />値。<br /> デフォルト値は20です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.Visible">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" />オブジェクトが表示されるかどうかを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo" />が表示される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.ResetHeight">
      <summary>Heightプロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListHeaderPaneInfo.ShouldSerializeHeight">
      <summary>Heightプロパティを永続化する必要があるかどうかを示します。</summary>
      <returns>プロパティの値がデフォルト値から変更されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem">
      <summary>項目のデフォルト設定を定義する<b>ListItem</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItem)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItem">サブ項目を表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItem[])">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />オブジェクトのコレクション。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(System.Object[])">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">オブジェクトのコレクション。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItem[],System.Object)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />オブジェクトのコレクション。</param>
      <param name="image">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の画像を表す<b>object</b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(System.Object[],System.Object)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">オブジェクトのコレクション。</param>
      <param name="image">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の画像を表す<b>object</b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItem[],System.Int32,System.Object)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">SubItemのコレクション。</param>
      <param name="indent">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のインデントを表す<see cref="T:System.Int32" />値。</param>
      <param name="image">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の画像を表す<b>object</b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(System.Object[],System.Int32,System.Object)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">オブジェクトのコレクション。</param>
      <param name="indent">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のインデントを表す<see cref="T:System.Int32" />値。</param>
      <param name="image">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の画像を表す<b>object</b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItem[],System.Int32,System.Object,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Drawing.Font,GrapeCity.Win.Spread.InputMan.CellType.GradientEffect,System.String,System.Object,System.Boolean)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />のコレクション。</param>
      <param name="indent">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のインデントを表す<see cref="T:System.Int32" />値。</param>
      <param name="image">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の画像を表す<b>object</b>値。</param>
      <param name="backColor">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の背景色を表す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="foreColor">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の前景色を表す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="height">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の高さを表す<see cref="T:System.Int32" />値。</param>
      <param name="font">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のフォントを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Font" />値。</param>
      <param name="gradientEffect">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のグラデーション効果を表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.GradientEffect" />。</param>
      <param name="toolTipText">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のツールチップテキストを表す<see cref="T:System.String" />値。</param>
      <param name="tag">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のタグを表す<b>object</b>値。</param>
      <param name="visible">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />が表示されるかどうかを表す<see langword="bool" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(System.Object[],System.Int32,System.Object,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Drawing.Font,GrapeCity.Win.Spread.InputMan.CellType.GradientEffect,System.String,System.Object,System.Boolean)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />のコレクション。</param>
      <param name="indent">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のインデントを表す<see cref="T:System.Int32" />値。</param>
      <param name="image">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の画像を表す<b>object</b>値。</param>
      <param name="backColor">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の背景色を表す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="foreColor">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の前景色を表す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="height">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の高さを表す<see cref="T:System.Int32" />値。</param>
      <param name="font">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のフォントを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Font" />値。</param>
      <param name="gradientEffect">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のグラデーション効果を表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.GradientEffect" />。</param>
      <param name="toolTipText">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のツールチップテキストを表す<see cref="T:System.String" />値。</param>
      <param name="tag">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のタグを表す<b>object</b>値。</param>
      <param name="visible">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />が表示されるかどうかを表す<see langword="bool" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor(System.String)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="text">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Text" />を表す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.AutoItemHeight">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の高さが自動的に計算されるかどうかを示す値を取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の高さが<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" nolink="true" />のフォントに基づいて自動的に計算される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.BackColor">
      <summary>背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の背景色を表す<see cref="T:System.Drawing.Color" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Checked">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />をチェックできるかどうかを示す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />をチェックできる場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Enabled">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />が有効かどうかを示す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />が有効な場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Font">
      <summary>フォントを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のフォントを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Font" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ForeColor">
      <summary>文字色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の前景色を表す<see cref="T:System.Drawing.Color" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.GradientEffect">
      <summary>ListItemの背景グラデーション効果を表す値を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.GradientEffect" />オブジェクト</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Height">
      <summary>ListItemの高さを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の高さを表す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Image">
      <summary>ListItemの画像を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の画像を示す<see cref="T:System.Object" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Indent">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のインデントを示す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のインデントを表す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のサブ項目コレクションを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のサブ項目コレクションを表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Tag">
      <summary>ユーザーが設定したタグを表す値を取得または設定します。</summary>
      <value>ユーザーが設定したタグを格納する<b>object</b>。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Text">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />のテキストを取得または設定します。</summary>
      <value>このテキストは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" />の最初の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Value" />を示します。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ToolTipText">
      <summary>項目のツールチップテキストを取得または設定します。</summary>
      <value>ツールチップのテキスト情報を表す<see cref="T:System.String" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Visible">
      <summary>ListItemが表示されるかどうかを示す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />が表示される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetAutoItemHeight">
      <summary>自動的に計算された項目の高さをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetBackColor">
      <summary>背景色をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetFont">
      <summary>フォントをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetForeColor">
      <summary>前景色をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetGradientEffect">
      <summary>グラデーション効果をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetHeight">
      <summary>高さをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetImage">
      <summary>画像をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetIndent">
      <summary>インデントをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ResetVisible">
      <summary>表示/非表示設定をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeAutoItemHeight">
      <summary>自動的に計算された項目の高さをシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeBackColor">
      <summary>背景色をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeFont">
      <summary>フォントをシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeForeColor">
      <summary>前景色をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeGradientEffect">
      <summary>グラデーション効果をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeHeight">
      <summary>Heightをシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeImage">
      <summary>画像をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeIndent">
      <summary>インデントをシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItem.ShouldSerializeVisible">
      <summary>表示/非表示設定をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />を保持する<b>ListItemCollection</b>クラスを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Count">
      <summary>コレクションの項目数を取得します。</summary>
      <value>コレクションの項目数を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Item(System.Int32)">
      <summary>指定した位置にある項目を取得または設定します。</summary>
      <value>指定した位置を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.ListItem)">
      <summary>コレクションに項目を追加します。</summary>
      <param name="item">コレクションに追加するObject。</param>
      <returns>追加された項目のインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Add(System.String)">
      <summary>指定したテキストを持つ<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />をコレクションに追加します。</summary>
      <param name="text">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Text" />を表す<see cref="T:System.String" />値。</param>
      <returns>追加された項目のインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.AddRange(GrapeCity.Win.Spread.InputMan.CellType.ListItem[])">
      <summary>指定したコレクションに含まれる要素をコレクションの最後に追加します。</summary>
      <param name="items">このコレクションに要素を追加するコレクション。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.AddRange(System.String[])">
      <summary>指定したコレクションに含まれるテキストをコレクションの最後に追加します。</summary>
      <param name="texts">このコレクションに要素を追加するコレクション。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Clear">
      <summary>コレクション内のすべての項目をクリアします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Contains(GrapeCity.Win.Spread.InputMan.CellType.ListItem)">
      <summary>コレクションに指定した項目が含まれるかどうかを判断します。</summary>
      <param name="item">指定した<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />オブジェクト。</param>
      <returns>コレクション内でオブジェクトが見つかった場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.ListItem[],System.Int32)">
      <summary>
        <see cref="T:System.Collections.ICollection" />の要素を、<see cref="T:System.Array" />の特定の<see cref="T:System.Array" nolink="true" />インデックス以降にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" />の要素のコピー先となる1次元の<see cref="T:System.Array" />。<see cref="T:System.Array" nolink="true" />にはゼロから始まるインデックスが必要です。</param>
      <param name="arrayIndex">コピーを開始する、配列内のゼロから始まるインデックス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Find(System.Object,System.Collections.IComparer,System.Int32,System.Int32)">
      <summary>開始インデックスから比較子によって値を検索します。</summary>
      <param name="value">検索する<b>object</b>値。</param>
      <param name="comparer">比較子を示す<see cref="T:System.Collections.IComparer" />値。</param>
      <param name="startIndex">検索の開始位置の直前の項目のゼロから始まるインデックス。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>項目が見つかった場合はそのインデックス。見つからなかった場合は-1。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.FindAllObject(System.Object,System.Int32)">
      <summary>指定したオブジェクトに一致するリスト内の最初の項目を検索します。</summary>
      <param name="obj">検索するオブジェクト。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>一致した項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.FindAllString(System.String,System.Int32)">
      <summary>指定した文字列で始まるコレクション内の最初の項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>一致した項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.FindAllStringExact(System.String,System.Int32)">
      <summary>指定した文字列に一致するリスト内の最初の項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>一致した項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.FindObject(System.Object,System.Int32,System.Int32)">
      <summary>指定したインデックスより後にある、指定したオブジェクトに一致する最初の項目を検索します。</summary>
      <param name="obj">検索するオブジェクト。</param>
      <param name="startIndex">検索の開始位置の直前の項目のゼロから始まるインデックス。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>見つかった最初の項目のゼロから始まるインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.FindString(System.String,System.Int32,System.Int32)">
      <summary>指定したインデックスより後にある、指定した文字列で始まる最初の項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="startIndex">検索の開始位置の直前の項目のゼロから始まるインデックス。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>見つかった最初の項目のゼロから始まるインデックス。一致が見つからなかった場合は-1を返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.FindStringExact(System.String,System.Int32,System.Int32)">
      <summary>指定したインデックスより後にある、指定した文字列に一致する最初の項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="startIndex">検索の開始位置の直前の項目のゼロから始まるインデックス。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>見つかった最初の項目のゼロから始まるインデックス。一致が見つからなかった場合は-1を返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.GetEnumerator">
      <summary>コレクションの列挙子を取得します。</summary>
      <returns>コレクションの現在の列挙子を表す<see cref="T:System.Collections.IEnumerator" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ListItem)">
      <summary>項目のインデックスを取得します。</summary>
      <param name="item">インデックスを特定する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />オブジェクト。</param>
      <returns>コレクション内で項目が見つかった場合はそのインデックスを示す<see cref="T:System.Int32" />値。見つからなかった場合は-1。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.ListItem)">
      <summary>コレクションの指定した位置に項目を挿入します。</summary>
      <param name="index">値を挿入する位置の、ゼロから始まるインデックス。</param>
      <param name="item">コレクションに挿入する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />項目。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItem)">
      <summary>コレクションから特定の項目を削除します。</summary>
      <param name="item">削除される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.RemoveAt(System.Int32)">
      <summary>コレクションの特定の位置にある項目を削除します。</summary>
      <param name="index">削除される項目のインデックスを示す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection.ToArray">
      <summary>コレクションのサブ項目を新しい配列にコピーします。</summary>
      <returns>コレクションのすべての項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の配列。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトを保持するために使用される<b>ListItemCollectionInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Count">
      <summary>コレクションの項目数を取得します。</summary>
      <value>コレクションの項目数を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Add(GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo)">
      <summary>コレクションに項目を追加します。</summary>
      <param name="item">コレクションに追加するObject。</param>
      <returns>追加された項目のインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Add(System.String)">
      <summary>指定したテキストを持つ<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトをコレクションに追加します。</summary>
      <param name="text">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Text" />を表す<see cref="T:System.String" />値。</param>
      <returns>追加された項目のインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.AddRange(GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo[])">
      <summary>指定したコレクションに含まれる一連の項目をコレクションの最後に追加します。</summary>
      <param name="items">このコレクションに要素を追加するコレクション。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.AddRange(System.String[])">
      <summary>指定したコレクションに含まれるテキストをコレクションの最後に追加します。</summary>
      <param name="texts">このコレクションに要素を追加するコレクション。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Clear">
      <summary>コレクション内のすべての項目をクリアします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Contains(GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo)">
      <summary>コレクションに指定した項目が含まれるかどうかを判断します。</summary>
      <param name="item">指定した<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクト。</param>
      <returns>コレクション内でオブジェクトが見つかった場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo[],System.Int32)">
      <summary>
        <see cref="T:System.Collections.ICollection" />の要素を、<see cref="T:System.Array" />の特定の<see cref="T:System.Array" nolink="true" />インデックス以降にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" />の要素のコピー先となる1次元の<see cref="T:System.Array" />。<see cref="T:System.Array" nolink="true" />にはゼロから始まるインデックスが必要です。</param>
      <param name="arrayIndex">コピーを開始する、配列内のゼロから始まるインデックス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Find(System.Object,System.Collections.IComparer,System.Int32,System.Int32)">
      <summary>開始インデックスから比較子によって値を検索します。</summary>
      <param name="value">検索する<b>object</b>値。</param>
      <param name="comparer">比較子を示す<see cref="T:System.Collections.IComparer" />値。</param>
      <param name="startIndex">検索の開始位置の直前の項目のゼロから始まるインデックス。</param>
      <param name="findTargetColumnIndex">検索する列を示す<see cref="T:System.Int32" />値。</param>
      <returns>項目でが見つかった場合はそのインデックス。見つからなかった場合は-1。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.FindAllObject(System.Object,System.Int32)">
      <summary>指定したオブジェクトに一致するリスト内の最初の項目を検索します。</summary>
      <param name="obj">検索するオブジェクト。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>一致した項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.FindAllString(System.String,System.Int32)">
      <summary>指定した文字列で始まるコレクション内の最初の項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>一致した項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollection" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.FindAllStringExact(System.String,System.Int32)">
      <summary>指定した文字列に一致するリスト内の最初の項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="findTargetColumnIndex">検索する列を示す<see cref="T:System.Int32" />値。</param>
      <returns>一致した項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.FindObject(System.Object,System.Int32,System.Int32)">
      <summary>指定したインデックスより後にある、指定したオブジェクトに一致する最初の項目を検索します。</summary>
      <param name="obj">検索するオブジェクト。</param>
      <param name="startIndex">検索の開始位置の直前の項目のゼロから始まるインデックス。</param>
      <param name="findTargetColumnIndex">検索する列インデックスを示す<see cref="T:System.Int32" />値。</param>
      <returns>見つかった最初の項目のゼロから始まるインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.FindString(System.String,System.Int32,System.Int32)">
      <summary>指定したインデックスより後にある、指定した文字列で始まる最初の項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="startIndex">検索の開始位置の直前の項目のゼロから始まるインデックス。</param>
      <param name="findTargetColumnIndex">検索する列を示す<see cref="T:System.Int32" />値。</param>
      <returns>見つかった最初の項目のゼロから始まるインデックス。一致が見つからなかった場合は-1を返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.FindStringExact(System.String,System.Int32,System.Int32)">
      <summary>指定したインデックスより後にある、指定した文字列に一致する最初の項目を検索します。</summary>
      <param name="s">検索する<see cref="T:System.String" />。</param>
      <param name="startIndex">検索の開始位置の直前の項目のゼロから始まるインデックス。</param>
      <param name="findTargetColumnIndex">検索する列を示す<see cref="T:System.Int32" />値。</param>
      <returns>見つかった最初の項目のゼロから始まるインデックス。一致が見つからなかった場合は-1を返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.GetEnumerator">
      <summary>コレクションの列挙子を取得します。</summary>
      <returns>コレクションの現在の列挙子を表す<see cref="T:System.Collections.IEnumerator" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo)">
      <summary>項目のインデックスを取得します。</summary>
      <param name="item">インデックスを特定する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />オブジェクト。</param>
      <returns>コレクション内で項目が見つかった場合はそのインデックスを示す<see cref="T:System.Int32" />値。見つからなかった場合は-1。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo)">
      <summary>コレクションの指定した位置に項目を挿入します。</summary>
      <param name="index">値を挿入する位置の、ゼロから始まるインデックス。</param>
      <param name="item">コレクションに挿入する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />項目。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.Remove(GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo)">
      <summary>コレクションから特定の項目を削除します。</summary>
      <param name="item">削除される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.RemoveAt(System.Int32)">
      <summary>コレクションの特定の位置にある項目を削除します。</summary>
      <param name="index">削除される項目のインデックスを示す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemCollectionInfo.ToArray">
      <summary>コレクションのサブ項目を新しい配列にコピーします。</summary>
      <returns>コレクションのすべての項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />の配列。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo">
      <summary>項目のデフォルト設定を指定するために使用される<b>ListItemInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItem">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo[])">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />オブジェクトのコレクション。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(System.Object[])">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">オブジェクトのコレクション。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo[],System.Object)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />オブジェクトのコレクション。</param>
      <param name="image">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの画像を表す<b>object</b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(System.Object[],System.Object)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">オブジェクトのコレクション。</param>
      <param name="image">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの画像を表す<b>object</b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo[],System.Int32,System.Object)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">サブ項目のコレクション。</param>
      <param name="indent">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトのインデント設定を表す<see cref="T:System.Int32" />値。</param>
      <param name="image">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの画像を表す<b>object</b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(System.Object[],System.Int32,System.Object)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">オブジェクトのコレクション。</param>
      <param name="indent">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトのインデント設定を表す<see cref="T:System.Int32" />値。</param>
      <param name="image">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの画像を表す<b>object</b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo[],System.Int32,System.Object,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Drawing.Font,GrapeCity.Win.Spread.InputMan.CellType.GradientEffect,System.String,System.Object,System.Boolean)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />オブジェクトのコレクション。</param>
      <param name="indent">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトのインデント設定を表す<see cref="T:System.Int32" />値。</param>
      <param name="image">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの画像を表す<b>object</b>値。</param>
      <param name="backColor">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの背景色を表す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="foreColor">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの前景色を表す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="height">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの高さを表す<see cref="T:System.Int32" />値。</param>
      <param name="font">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトのフォントを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Font" />値。</param>
      <param name="gradientEffect">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトのグラデーション効果を表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.GradientEffect" />。</param>
      <param name="toolTipText">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトのツールチップテキストを表す<see cref="T:System.String" />値。</param>
      <param name="tag">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトのタグを表す<b>object</b>値。</param>
      <param name="visible">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />が表示されるかどうかを表す<see langword="bool" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(System.Object[],System.Int32,System.Object,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Drawing.Font,GrapeCity.Win.Spread.InputMan.CellType.GradientEffect,System.String,System.Object,System.Boolean)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="subItems">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />オブジェクトのコレクション。</param>
      <param name="indent">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトのインデント設定を表す<see cref="T:System.Int32" />値。</param>
      <param name="image">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの画像を表す<b>object</b>値。</param>
      <param name="backColor">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの背景色を表す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="foreColor">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの前景色を表す<see cref="T:System.Drawing.Color" />値。</param>
      <param name="height">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの高さを表す<see cref="T:System.Int32" />値。</param>
      <param name="font">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトのフォントを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Font" />値。</param>
      <param name="gradientEffect">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトのグラデーション効果を表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.GradientEffect" />。</param>
      <param name="toolTipText">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトのツールチップテキストを表す<see cref="T:System.String" />値。</param>
      <param name="tag">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトのタグを表す<b>object</b>値。</param>
      <param name="visible">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトが表示されるかどうかを表す<see langword="bool" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(System.String)">
      <summary>指定した設定を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="text">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.Text" />を表す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.AutoItemHeight">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの高さが自動的に計算されるかどうかを取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの高さが<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" nolink="true" />のフォントに基づいて自動的に計算される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.BackColor">
      <summary>背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの背景色を表す<see cref="T:System.Drawing.Color" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Enabled">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />が有効かどうかを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトが有効な場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Font">
      <summary>フォントを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトのフォントを表す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Font" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ForeColor">
      <summary>文字色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの前景色を表す<see cref="T:System.Drawing.Color" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.GradientEffect">
      <summary>背景グラデーション効果を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.GradientEffect" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Height">
      <summary>ListItemInfoオブジェクトの高さを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトの高さを表す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Image">
      <summary>ListItemInfoの画像を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />の画像を示す<see cref="T:System.Object" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Indent">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />のインデント設定を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />のインデント設定を表す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.SubItems">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />のサブ項目コレクションを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />のサブ項目コレクションを表す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Tag">
      <summary>ユーザーが設定したタグを取得または設定します。</summary>
      <value>ユーザーが設定したタグを格納する<b>object</b>。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Text">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />オブジェクトのテキストを取得または設定します。</summary>
      <value>このテキストは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" />の最初の<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Value" />を示します。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ToolTipText">
      <summary>項目のツールチップテキストを取得または設定します。</summary>
      <value>ツールチップのテキスト情報を表す<see cref="T:System.String" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Visible">
      <summary>リスト項目が表示されるかどうかを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo" />が表示される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetAutoItemHeight">
      <summary>自動的に設定された項目の高さをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetBackColor">
      <summary>背景色をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetFont">
      <summary>フォントをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetForeColor">
      <summary>前景色をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetGradientEffect">
      <summary>グラデーション効果をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetHeight">
      <summary>高さをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetImage">
      <summary>画像をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetIndent">
      <summary>インデント設定をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ResetVisible">
      <summary>表示/非表示設定をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeAutoItemHeight">
      <summary>自動的に設定された項目の高さをシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeBackColor">
      <summary>背景色をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeFont">
      <summary>フォントをシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeForeColor">
      <summary>前景色をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeGradientEffect">
      <summary>グラデーション効果をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeHeight">
      <summary>高さをシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeImage">
      <summary>画像をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeIndent">
      <summary>インデント設定をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ListItemInfo.ShouldSerializeVisible">
      <summary>表示/非表示設定をシリアル化する必要があるかどうかを示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo">
      <summary>ユーザーが選択したものを受け入れるだけの読み取り専用のキャラクターボックスを定義します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo" />の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo" />の新しいインスタンスを初期化します。</summary>
      <param name="text">リテラルボックスのテキストを示す<see cref="T:System.String" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.#ctor(System.Boolean,System.Drawing.Size,System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,System.Windows.Forms.Padding,System.Windows.Forms.Padding,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo,System.Drawing.Font,System.Drawing.ContentAlignment,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.InputBoxInfo" />の新しいインスタンスを初期化します。</summary>
      <param name="autoSize">コントロールに割り当てられたフォントが変更されたときにコントロールの高さが自動的に調整されるかどうかを示す<see langword="bool" />値。</param>
      <param name="backColor">背景色を示す<see cref="T:System.Drawing.Color" />。</param>
      <param name="border">リテラルボックスの境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />。</param>
      <param name="contentAlignment">リテラルボックスの内容の配置を示す<see cref="T:System.Drawing.ContentAlignment" />値。</param>
      <param name="font">リテラルボックスのテキストのフォントを示す<see cref="T:System.Drawing.Font" />。</param>
      <param name="foreColor">前景色を示す<see cref="T:System.Drawing.Color" />。</param>
      <param name="margin">余白を示す<see cref="T:System.Windows.Forms.Padding" />。</param>
      <param name="padding">パディングを示す<see cref="T:System.Windows.Forms.Padding" />。</param>
      <param name="size">リテラルボックスのサイズを示す<see cref="T:System.Drawing.Size" />。</param>
      <param name="style">リテラルボックスのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" />。</param>
      <param name="text">リテラルボックスのテキストを示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.Text">
      <summary>リテラルボックスのテキストを取得または設定します。</summary>
      <value>リテラルボックスのテキストを示す<see cref="T:System.String" />。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.Clone">
      <summary>このオブジェクトのクローンであるオブジェクトを取得します。</summary>
      <returns>このオブジェクトのコピーである<see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.LiteralBoxInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateText">
      <summary>
        <b>MaskAlternateText</b>クラスを定義します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateText.DisplayNull">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>DisplayNull</b> インスタンスを取得します。</summary>
      <value>
        <b>DisplayNull</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateText.Null">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>Null</b> インスタンスを取得します。</summary>
      <value>
        <b>Null</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateTextInfo">
      <summary>
        <b>MaskAlternateTextInfo</b>クラスを定義します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateTextInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateTextInfo.DisplayNull">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>Null</b> インスタンスを取得します。</summary>
      <value>
        <b>Null</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateTextInfo.Null">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>DisplayNull</b> インスタンスを取得します。</summary>
      <value>
        <b>DisplayNull</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateTextInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateTextInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskAlternateTextInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo">
      <summary>読み取り専用の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo" />オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.AddRange(System.String)">
      <summary>指定した書式文字列から作成された別の<see cref="T:IList&lt;MaskField&gt;" />の内容をコレクションの最後に追加します。</summary>
      <param name="format">指定した書式文字列を示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.GetFormatString">
      <summary>MaskFieldInfoフィールドから生成された書式文字列を取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.OnAddRangeComplete(System.Object[])">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素配列を挿入した後に、追加のカスタム処理を実行します。</summary>
      <param name="value">追加された<b><see cref="T:System.Object">Object</see></b>配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.OnClear">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.OnFieldPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.FieldPropertyChanged" />イベントを発生させます。</summary>
      <param name="e" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.OnInsertComplete(System.Int32,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">値を挿入する位置の０から始まるインデックス。</param>
      <param name="value">インデックスにある要素の新しい値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldCollectionInfo.OnRemoveComplete(System.Int32,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">削除された項目の、0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">削除された項目を表す<b><see cref="T:System.Object">Object</see></b>値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldInfosBuilder">
      <summary>指定した書式を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo" />オブジェクトを作成するビルダーを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldInfosBuilder.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldInfosBuilder" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldInfosBuilder.BuildFields(System.String)">
      <summary>指定した書式を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo" />オブジェクトを作成します。</summary>
      <param name="format">GcMaskセルの定義された書式。</param>
      <returns>作成されたフィールドを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo" />の配列。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MaskFieldInfosBuilder.BuildFormatFromFields(GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo[])">
      <summary>既存のフィールドから書式文字列を作成します。</summary>
      <param name="fields" />
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedComboItemCollection">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedComboItemCollection" />クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MatchedComboItemCollection.Contains(GrapeCity.Win.Spread.InputMan.CellType.ListItem)">
      <summary>要素がこのコレクションに含まれるかどうかを判断します。</summary>
      <param name="item">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />オブジェクト。</param>
      <returns>
        <see langword="bool" />値。含まれている場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MatchedComboItemCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.ListItem)">
      <summary>指定した<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />の、このコレクション内でのゼロから始まるインデックスを取得します。</summary>
      <param name="item">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ListItem" />オブジェクト。</param>
      <returns>ゼロから始まるインデックスを示す<see cref="T:System.Int32" />値。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection">
      <summary>
        <b>MatchedListItemCollection</b>クラスを定義します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection.Count">
      <summary>
        <see cref="T:System.Collections.ICollection" />に含まれる要素の数を取得します。</summary>
      <value>項目数を表す<b><see cref="T:System.Int32">Int32</see></b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection.Item(System.Int32)">
      <summary>指定した位置にある項目を取得します。</summary>
      <value>指定した位置を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Collections.ICollection" />の要素を、<see cref="T:System.Array" />の特定の<see cref="T:System.Array" nolink="true" />インデックス以降にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" />の要素のコピー先となる1次元の<see cref="T:System.Array" />。<see cref="T:System.Array" nolink="true" />にはゼロから始まるインデックスが必要です。</param>
      <param name="index">コピーを開始する、配列内のゼロから始まるインデックス。</param>
      <exception cref="T:System.ArgumentNullException">arrayが<see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">indexがゼロ未満です。</exception>
      <exception cref="T:System.ArgumentException">arrayが多次元です。または、indexがarrayの長さ以上です。または、ソース<see cref="T:System.Collections.ICollection" />内の要素の数が、indexからコピー先配列の末尾までに格納できる数を超えています。</exception>
      <exception cref="T:System.InvalidCastException">ソース<see cref="T:System.Collections.ICollection" />の型が、コピー先配列の型に自動的にキャストできません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollection.GetEnumerator">
      <summary>コレクションを列挙する列挙子を返します。</summary>
      <returns>コレクションの列挙に使用できる<see cref="T:System.Collections.IEnumerator" />オブジェクト。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollectionInfo">
      <summary>
        <b>MatchedListItemCollectionInfo</b>クラスを定義します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollectionInfo.Count">
      <summary>
        <see cref="T:System.Collections.ICollection" />に含まれる要素の数を取得します。</summary>
      <value>項目数を表す<b><see cref="T:System.Int32">Int32</see></b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollectionInfo.Item(System.Int32)">
      <summary>指定した位置にある項目を取得します。</summary>
      <value>指定した位置を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollectionInfo.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Collections.ICollection" />の要素を、<see cref="T:System.Array" />の特定の<see cref="T:System.Array" nolink="true" />インデックス以降にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" />の要素のコピー先となる1次元の<see cref="T:System.Array" />。<see cref="T:System.Array" nolink="true" />にはゼロから始まるインデックスが必要です。</param>
      <param name="index">コピーを開始する、配列内のゼロから始まるインデックス。</param>
      <exception cref="T:System.ArgumentNullException">arrayが<see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">indexがゼロ未満です。</exception>
      <exception cref="T:System.ArgumentException">arrayが多次元です。または、indexがarrayの長さ以上です。または、ソース<see cref="T:System.Collections.ICollection" />内の要素の数が、indexからコピー先配列の末尾までに格納できる数を超えています。</exception>
      <exception cref="T:System.InvalidCastException">ソース<see cref="T:System.Collections.ICollection" />の型が、コピー先配列の型に自動的にキャストできません。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.MatchedListItemCollectionInfo.GetEnumerator">
      <summary>コレクションを列挙する列挙子を返します。</summary>
      <returns>コレクションの列挙に使用できる<see cref="T:System.Collections.IEnumerator" />オブジェクト。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" />オブジェクトの厳密に型指定されたコレクションを表します。<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" nolink="true" />オブジェクトの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.INamedObject.Name" />プロパティを使用して項目を検索および項目にアクセスするためのメソッドとプロパティを提供します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1.#ctor(GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection{`0})">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="values">新しいコレクションオブジェクトを構築するための項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1.#ctor(`0[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="values">厳密に型指定された<b>T</b>型オブジェクトの配列。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1.Item(System.String)">
      <summary>指定した名前を持つ要素を取得または設定します。</summary>
      <value>指定した項目を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" />型の要素。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1.ContainsKey(System.String)">
      <summary>指定したキーを持つ項目が <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1" /> コレクションに含まれているかどうかを判断します。</summary>
      <param name="name">コレクション内で検索するキー。</param>
      <returns>指定した名前を持つ<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" />型の項目がコレクションに含まれている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1.Find(System.String)">
      <summary>指定した名前を使用して項目を検索します。</summary>
      <param name="name">コレクションから取得するオブジェクトの名前を示す<see cref="T:System.String" />値。</param>
      <returns>指定した名前を持つ、コレクション内の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1.IndexOfKey(System.String)">
      <summary>指定したアイテムがコレクション内で最初に出現する位置のインデックスを取得します。</summary>
      <param name="name">検索する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> オブジェクトの名前。</param>
      <returns>指定した名前を持つ、コレクション内で最初に見つかった <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> オブジェクトの０から始まるインデックス。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />クラスを拡張し、項目がコレクションに追加またはコレクションから削除されるときに通知します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection.OnClearComplete">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection" /> インスタンスの内容をクリアした後で、追加のカスタム処理を実行します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection.CollectionChanged" /> イベントを発生させます。</summary>
      <param name="ccevent">イベントデータを格納している<b><see cref="System.ComponentModel.CollectionChangeEventArgs">CollectionChangeEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection" /> インスタンスに新しい要素を挿入した後で、追加のカスタム処理を実行します。</summary>
      <param name="index">
        <b>value</b>を挿入する位置の0から始まるインデックス。</param>
      <param name="value">指定したインデックスにある要素の新しい値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">削除された項目の、0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">指定したインデックスから削除する要素の値。</param>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.NotifyCollection.CollectionChanged">
      <summary>コレクションの項目が変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateText">
      <summary>
        <b>NumberAlternateText</b>クラスを定義します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateText.DisplayNull">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>DisplayNull</b> インスタンスを取得します。</summary>
      <value>
        <b>DisplayNull</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateText.DisplayZero">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />型の<b>DisplayZero</b>インスタンスを取得します。</summary>
      <value>
        <b>DisplayZero</b>インスタンスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateText.Null">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>Null</b> インスタンスを取得します。</summary>
      <value>
        <b>Null</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateText.Zero">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />型の<b>Zero</b>インスタンスを取得します。</summary>
      <value>
        <b>Zero</b>インスタンスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateTextInfo">
      <summary>
        <b>NumberAlternateTextInfo</b>クラスを定義します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateTextInfo.DisplayNull">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>DisplayNull</b> インスタンスを取得します。</summary>
      <value>
        <b>DisplayNull</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateTextInfo.DisplayZero">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />型の<b>DisplayZero</b>インスタンスを取得します。</summary>
      <value>
        <b>DisplayZero</b>インスタンスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateTextInfo.Null">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>Null</b> インスタンスを取得します。</summary>
      <value>
        <b>Null</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberAlternateTextInfo.Zero">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />型の<b>Zero</b>インスタンスを取得します。</summary>
      <value>
        <b>Zero</b>インスタンスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldCollectionInfo">
      <summary>
        <b>GcNumberCellType</b>の表示フィールドコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldCollectionInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldCollectionInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldCollectionInfo.AddRange(System.String)">
      <summary>指定した書式文字列から作成された別の<see cref="T:IList&lt;NumberDisplayField&gt;" />の内容をコレクションの最後に追加します。</summary>
      <param name="format">指定した書式文字列を示す <b>string</b> 値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldCollectionInfo.AddRange(System.String,System.String,System.String,System.String,System.String)">
      <summary>指定した引数から作成された別の<see cref="T:IList&lt;NumberDisplayField&gt;" />の内容をコレクションの最後に追加します。</summary>
      <param name="pattern">パターンを示す<b>string</b>値。</param>
      <param name="positivePrefix">値が正のときに前に付加する文字列を示す<b>string</b>値。</param>
      <param name="positiveSuffix">値が正のときに後ろに付加する文字列を示す<b>string</b>値。</param>
      <param name="negativePrefix">値が負のときに前に付加する文字列を示す<b>string</b>値。</param>
      <param name="negativeSuffix">値が負のときに後ろに付加する文字列を示す<b>string</b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldCollectionInfo.OnAddRange(System.Object[])">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素配列を挿入する前に、追加のカスタム処理を実行します。</summary>
      <param name="value">追加される<b><see cref="T:System.Object">Object</see></b>配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldCollectionInfo.OnInsert(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素を挿入する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">挿入位置を表す0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">挿入する項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldCollectionInfo.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに値を設定する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">更新される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="oldValue">更新前の項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="newValue">挿入する項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldInfosBuilder">
      <summary>書式を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldInfo" />オブジェクトを作成するビルダーを表します。これは<see langword="static class" />なので、継承またはインスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldInfosBuilder.BuildFields(System.String)">
      <summary>指定した書式を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldInfo" />オブジェクトを作成します。</summary>
      <param name="format">日付コントロールによって定義された書式。</param>
      <returns>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />フィールドを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldInfo" />の配列。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberDisplayFieldInfosBuilder.BuildFields(System.String,System.String,System.String,System.String,System.String)">
      <summary>指定した書式を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldInfo" />オブジェクトを作成します。</summary>
      <param name="pattern">パターンを示す<see cref="T:System.String" />値。</param>
      <param name="positivePrefix">値が正のときに前に付加する文字列を示す<see cref="T:System.String" />値。</param>
      <param name="positiveSuffix">値が正のときに後ろに付加する文字列を示す<see cref="T:System.String" />値。</param>
      <param name="negativePrefix">値が正のときに前に付加する文字列を示す<see cref="T:System.String" />値。</param>
      <param name="negativeSuffix">値が正のときに後ろに付加する文字列を示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo">
      <summary>読み取り専用の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo" />オブジェクトのコレクションを表します。このクラスは継承できません。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.Count">
      <summary>
        <see cref="T:System.Collections.ICollection" />に含まれる要素の数を取得します。</summary>
      <value>
        <see cref="T:System.Collections.ICollection" />に含まれる要素の数。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.DecimalPart">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />オブジェクトの小数部フィールドを取得します。</summary>
      <value>小数部のフィールドを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartFieldInfo" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.DecimalSeparator">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />の小数点記号フィールドを取得します。</summary>
      <value>小数点記号のフィールドを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorFieldInfo" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.IntegerPart">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />の整数部フィールドを取得します。</summary>
      <value>整数部のフィールドを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartFieldInfo" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.Item(System.Int32)">
      <summary>指定したインデックスにある<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFieldInfo" />オブジェクトを取得します。</summary>
      <value>このコレクションの指定したインデックスにある<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberField" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.SignPrefix">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />オブジェクトの符号接頭辞フィールドを取得します。</summary>
      <value>符号接頭辞を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignFieldInfo" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.SignSuffix">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />オブジェクトの符号接尾辞フィールドを取得します。</summary>
      <value>符号接尾辞を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignFieldInfo" />オブジェクト。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.GetEnumerator">
      <summary>コレクションを列挙する列挙子を返します。</summary>
      <returns>コレクションの列挙に使用できる<see cref="T:System.Collections.Generic.IEnumerator`1" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.SetFields(System.String)">
      <summary>書式を解析して各フィールドの設定を同期します。</summary>
      <param name="format">フィールドの書式を示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberFieldsInfo.SetFields(System.String,System.String,System.String,System.String,System.String)">
      <summary>パターンを解析して各フィールドの設定を同期します。</summary>
      <param name="pattern">フィールドのパターンを示す<see cref="T:System.String" />値。</param>
      <param name="positivePrefix">正の接頭辞の文字列を示す<see cref="T:System.String" />値。</param>
      <param name="positiveSuffix">正の接尾辞の文字列を示す<see cref="T:System.String" />値。</param>
      <param name="negativePrefix">負の接頭辞の文字列を示す<see cref="T:System.String" />値。</param>
      <param name="negativeSuffix">負の接尾辞の文字列を示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NumberSpin">
      <summary>数値のスピン機能の設定を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.NumberSpin.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NumberSpin" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberSpin.IncrementValue">
      <summary>スピン動作による値の変化量を取得または設定します。</summary>
      <value>増分値を示す<see cref="T:System.Decimal" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.NumberSpin.SpinMode">
      <summary>スピンモードを取得または設定します。</summary>
      <value>スピン操作の実行方法を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NumberSpinMode" />列挙体。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator">
      <summary>
        <b>PopUpCalculator</b>クラスを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Align">
      <summary>ポップアップウィンドウの配置を取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.LeftRightAlignment" />値。<br />デフォルト値は<see cref="F:System.Windows.Forms.LeftRightAlignment.Left" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.AllowPopUp">
      <summary>ポップアップウィンドウのポップアップが許可されているかどうかを示す値を取得または設定します。</summary>
      <value>ポップアップが許可されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.BackColor">
      <summary>ポップアップウィンドウの背景色を取得または設定します。</summary>
      <value>ポップアップウィンドウの背景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.Window" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.BackgroundImage">
      <summary>ポップアップウィンドウに表示される背景画像を取得または設定します。</summary>
      <value>ポップアップウィンドウの背景に表示する画像を表す<see cref="T:System.Drawing.Image" />。<br />デフォルト値は<see langword="null" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.BackgroundImageLayout">
      <summary>背景画像のレイアウトモードを取得または設定します。</summary>
      <value>背景画像のレイアウトモードを示す<see cref="T:System.Windows.Forms.ImageLayout" />値。<br />デフォルト値は<see cref="F:System.Windows.Forms.ImageLayout.Tile" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.BorderStyle">
      <summary>境界線のスタイルを取得または設定します。</summary>
      <value>境界線のスタイルを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.BorderStyle" />値。<br />デフォルト値は<see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.ButtonMappings">
      <summary>ボタン項目のショートカットキーを取得または設定します。</summary>
      <value>ボタンマッピングコレクションを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CalculatorButtonMappingCollection" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Cursor">
      <summary>マウスポインタがビューの上にあるときに表示されるカーソルを取得または設定します。</summary>
      <value>カーソルを表す<b><see cref="T:System.Windows.Forms.Cursor">Cursor</see></b>オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.DecimalDigit">
      <summary>小数点以下の桁数を取得または設定します。</summary>
      <value>小数部の桁数を示す<see cref="T:System.Int32" />値。<br />デフォルト値は2です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Font">
      <summary>ポップアップウィンドウで使用されるフォントを取得または設定します。</summary>
      <value>ポップアップウィンドウで使用されるフォントを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Font" />値。</value>
      <remarks>デフォルト値はコントロールのフォントと同じです。<see langword="null" />に設定した場合、例外は発生せず、値は自動的にデフォルト値になります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.ForeColor">
      <summary>ポップアップウィンドウの前景色を取得または設定します。</summary>
      <value>ポップアップウィンドウの前景色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.WindowText" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Lines">
      <summary>ポップアップウィンドウに表示される行数を取得または設定します。</summary>
      <value>ポップアップウィンドウに表示される行数を示す<see cref="T:System.Int32" />値。<br />デフォルト値は12です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Padding">
      <summary>ポップアップウィンドウのパディングを取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.Padding" />値。<br />デフォルト値は"1,1,1,1"です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.SingleBorderColor">
      <summary>ポップアップウィンドウの一重境界線の色を取得または設定します。</summary>
      <value>一重境界線の色を示す<see cref="T:System.Drawing.Color" />値。<br />デフォルト値は<see cref="P:System.Drawing.SystemColors.WindowFrame" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Text">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator" />のテキストを取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator" />のテキストを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.TextHAlign">
      <summary>ポップアップウィンドウのテキストの水平方向の配置を取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.HorizontalAlignment" />値。<br />デフォルト値は<see cref="F:System.Windows.Forms.HorizontalAlignment.Right" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.UseDecimalDigit">
      <summary>
        <b>DecimalDigit</b>プロパティを使用するかどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" />値。小数点以下の桁数を使用する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。<br />デフォルト値は<see langword="false" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Value">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator" />の値を取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator" />の値を示す<see cref="T:System.Decimal" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculator.Width">
      <summary>ポップアップウィンドウの幅を取得または設定します。</summary>
      <value>ポップアップウィンドウの幅を示す<see cref="T:System.Int32" />値。<br />デフォルト値は0です。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">valueがゼロ未満です。</exception>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo">
      <summary>ドロップダウンカレンダーの情報を表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.Align">
      <summary>ポップアップウィンドウの配置を取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.LeftRightAlignment" />値。<br />デフォルト値は<see cref="F:System.Windows.Forms.LeftRightAlignment.Left" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.AllowPopUp">
      <summary>ポップアップウィンドウを表示できるかどうかを取得または設定します。</summary>
      <value>ポップアップが許可されている場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="true" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.BackColor">
      <summary>ポップアップウィンドウの背景色を取得または設定します。</summary>
      <value>ポップアップウィンドウの背景色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.Window" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.BackgroundImage">
      <summary>ポップアップウィンドウに表示される背景画像を取得または設定します。</summary>
      <value>ポップアップウィンドウの背景に表示する画像を表す<see cref="T:System.Drawing.Image" />。<br /> デフォルト値は<see langword="null" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.BackgroundImageLayout">
      <summary>背景画像のレイアウトモードを取得または設定します。</summary>
      <value>背景画像のレイアウトモードを示す<see cref="T:System.Windows.Forms.ImageLayout" />値。<br /> デフォルト値は<see cref="F:System.Windows.Forms.ImageLayout.Tile" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.BorderStyle">
      <summary>コントロールの境界線の種類を取得または設定します。</summary>
      <value>境界線スタイルを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.BorderStyle" />値。<br /> デフォルト値は<see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.DecimalDigit">
      <summary>小数点以下の桁数を取得または設定します。</summary>
      <value>小数部の桁数を示す<see cref="T:System.Int32" />値。<br /> デフォルト値は2です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.Font">
      <summary>ポップアップウィンドウで使用されるフォントを取得または設定します。</summary>
      <value>ポップアップウィンドウで使用されるフォントを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.Font" />値。</value>
      <remarks>デフォルト値はコントロールのフォントと同じです。<see langword="null" />に設定した場合、例外は発生せず、値は自動的にデフォルト値になります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.ForeColor">
      <summary>ポップアップウィンドウの前景色を取得または設定します。</summary>
      <value>ポップアップウィンドウの前景色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.WindowText" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.Lines">
      <summary>ポップアップウィンドウに表示される行数を取得または設定します。</summary>
      <value>ポップアップウィンドウに表示される行数を示す<see cref="T:System.Int32" />値。<br /> デフォルト値は12です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.Padding">
      <summary>ポップアップウィンドウのパディングを取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.Padding" />値。<br />デフォルト値は"1,1,1,1"です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.SingleBorderColor">
      <summary>ポップアップウィンドウの一重境界線の色を取得または設定します。</summary>
      <value>一重境界線の色を示す<see cref="T:System.Drawing.Color" />値。<br /> デフォルト値は<see cref="P:System.Drawing.SystemColors.WindowFrame" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.TextHAlign">
      <summary>ポップアップウィンドウのテキストの水平方向の配置を取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.HorizontalAlignment" />値。<br />デフォルト値は<see cref="F:System.Windows.Forms.HorizontalAlignment.Right" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.UseDecimalDigit">
      <summary>
        <b>DecimalDigit</b>プロパティを使用するかどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" />値。小数点以下の桁数を使用する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="false" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpCalculatorInfo.Width">
      <summary>ポップアップウィンドウの幅を取得または設定します。</summary>
      <value>ポップアップウィンドウの幅を示す<see cref="T:System.Int32" />値。<br /> デフォルト値は0です。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">valueがゼロ未満です。</exception>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs">
      <summary>
        <b>PopUpClosing</b>イベントの<see cref="T:System.EventArgs" />を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs.#ctor">
      <summary>
        <b>PopUpClosingEventArgs</b>のインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs.#ctor(System.Boolean,System.Object)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="syncData">
        <see langword="bool" />値。<see langword="true" />に設定した場合、データが同期されます。</param>
      <param name="value">ドロップダウンダイアログからの値を示す<b>object</b>。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs.SyncData">
      <summary>ドロップダウンが開くときにデータをドロップダウンに同期するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。ドロップダウンが開くときにデータをドロップダウンに同期する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>このプロパティは、ドロップダウンが閉じるときにドロップダウンからコントロールにデータを同期するかどうかを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpClosingEventArgs.Value">
      <summary>ポップアップ部分からの値を取得または設定します。</summary>
      <value>ドロップダウンダイアログからの値を示す<b>object</b>。</value>
      <remarks>このプロパティは、ポップアップダイアログの値を取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs">
      <summary>
        <b>PopUpOpening</b>イベントの<see cref="T:System.EventArgs" />を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="syncData">
        <see langword="bool" />値。<see langword="true" />に設定されている場合、値をドロップダウンコントロールに同期します。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.PopUpOpeningEventArgs.SyncData">
      <summary>ドロップダウンが開くときにデータをドロップダウンに同期するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。ドロップダウンが開くときにデータをドロップダウンに同期する場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>このプロパティは、ポップアップダイアログが開くときにポップアップダイアログからコントロールにデータを同期するかどうかを決定します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ScrolledEventArgs">
      <summary>
        <b>
          <see cref="E:GrapeCity.Win.Editors.DropDownCalendar.Scrolled">Scrolled</see>
        </b> イベントのイベントデータを実装します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ScrolledEventArgs.#ctor(System.DateTime,System.DateTime)">
      <summary>初期値を指定して<b><see cref="T:GrapeCity.Win.Editors.ScrolledEventArgs">ScrolledEventArgs</see></b> クラスの新しいインスタンスを初期化します。</summary>
      <param name="start">スクロール後表示される最初の日付を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</param>
      <param name="end">スクロール後表示される最後の日付を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ScrolledEventArgs.EndDate">
      <summary>スクロール後カレンダーに表示される最後の日付を取得します。</summary>
      <value>表示される最後の日付を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ScrolledEventArgs.StartDate">
      <summary>スクロール後カレンダーに表示される最初の日付を取得します。</summary>
      <value>表示される最初の日付を表す<b><see cref="T:System.DateTime">DateTime</see></b>値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo">
      <summary>パターンを特殊な区切り記号として表示するキャラクターボックスを定義します。これは入力も選択も受け入れません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo" />の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo" />の新しいインスタンスを初期化します。</summary>
      <param name="separatorShape">区切り記号の形状を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape,System.Drawing.Size)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo" />の新しいインスタンスを初期化します。</summary>
      <param name="separatorShape">区切り記号の形状を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape" />。</param>
      <param name="separatorSize">区切り記号のサイズを示す<see cref="T:System.Drawing.Size" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.#ctor(System.Boolean,System.Drawing.Size,System.Drawing.Color,System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle,System.Windows.Forms.Padding,System.Windows.Forms.Padding,GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo,System.Drawing.Font,System.Drawing.ContentAlignment,GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape,System.Drawing.Size)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo" />の新しいインスタンスを初期化します。</summary>
      <param name="autoSize">コントロールに割り当てられたフォントが変更されたときにコントロールの高さが自動的に調整されるかどうかを示す<see langword="bool" />値。</param>
      <param name="backColor">背景色を示す<see cref="T:System.Drawing.Color" />。</param>
      <param name="border">入力ボックスの境界線を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxBorderInfo" />。</param>
      <param name="contentAlignment">入力ボックスの内容の配置を示す<see cref="T:System.Drawing.ContentAlignment" />値。</param>
      <param name="font">入力ボックスのテキストのフォントを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.Font" />。</param>
      <param name="foreColor">前景色を示す<see cref="T:System.Drawing.Color" />。</param>
      <param name="margin">余白を示す<see cref="T:System.Windows.Forms.Padding" />。</param>
      <param name="padding">パディングを示す<see cref="T:System.Windows.Forms.Padding" />。</param>
      <param name="size">入力ボックスのサイズを示す<see cref="T:System.Drawing.Size" />。</param>
      <param name="style">入力ボックスのスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle" />。</param>
      <param name="separatorShape">区切り記号の形状を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape" />。</param>
      <param name="separatorSize">区切り記号ボックスのサイズを示す<see cref="T:System.Drawing.Size" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.Font">
      <summary>区切り記号ボックスのフォントを取得または設定します。</summary>
      <value>テキストフォントを示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.Font" />。</value>
      <remarks>デフォルト値はコンテナーコントロールの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.Font" />です。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.SeparatorSize">
      <summary>区切り記号ボックスのサイズを取得または設定します。</summary>
      <value>区切り記号ボックスのサイズを示す<see cref="T:System.Drawing.Size" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.Shape">
      <summary>区切り記号ボックスの形状を取得または設定します。</summary>
      <value>区切り記号の形状を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape" />。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.Clone">
      <summary>このオブジェクトのクローンであるオブジェクトを取得します。</summary>
      <returns>このオブジェクトのコピーである<see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SeparatorBoxInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary">
      <summary>キーと文字列のペアのコレクションを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Count">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary" /> に含まれる要素の数を取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary" /> に含まれる要素の数を表す <see cref="T:System.Int32" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Item(System.Windows.Forms.Keys)">
      <summary>キー文字列を指定してコレクションの項目を取得します。</summary>
      <param name="key">ショートカットキーを表す<b><see cref="T:System.Windows.Forms.Keys">Keys</see></b>列挙体。</param>
      <value>関連付けられたショートカット動作を表す<b><see cref="T:System.Windows.Forms.MethodInvoker">MethodInvoker</see></b>デリゲート。</value>
      <exception cref="T:System.ArgumentNullException">指定された値が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">指定された値が無効なアクション名です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Keys">
      <summary>すべての要素のキーを含むコレクションを取得します。</summary>
      <value>コレクションのキーを含む Keys コレクション。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Values">
      <summary>内部コレクションの値を含むコレクションを取得します。</summary>
      <value>コレクションの値を含む文字列コレクション。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Add(System.Windows.Forms.Keys,System.String)">
      <summary>キー／文字列ペアの要素をコレクションに追加します。</summary>
      <param name="key">ショートカットのキーとして使用する <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Keys" />。</param>
      <param name="value">ショートカットの値として使用する <see cref="T:System.String" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.AddRange(GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionaryEntry[])">
      <summary>一連のキー／値ペアを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionaryEntry" /> の配列を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary" /> に追加します。</summary>
      <param name="entries">一連のキー／値ペアを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionaryEntry" /> の配列。</param>
      <remarks>このメソッドは MultiRow の内部構造で使用されます。ユーザーが使用することは推奨されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Clear">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary" /> からすべてのショートカットを削除します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Clone">
      <summary>オブジェクトの複製を返します。</summary>
      <returns>このインスタンスのコピーである <see cref="T:System.Object" /> 値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.ContainsKey(System.Windows.Forms.Keys)">
      <summary>指定したキーを持つ要素がコレクションに含まれているかどうかを判断します。</summary>
      <param name="key">コレクション内で検索する <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Keys" />。</param>
      <returns>指定した <paramref name="key" /> を持つ要素がコレクションに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。</summary>
      <returns>コレクションの列挙に使用できる <see cref="T:System.Collections.Generic.IEnumerator`1" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.Remove(System.Windows.Forms.Keys)">
      <summary>指定したキーを持つ要素を削除します。</summary>
      <param name="key">キー文字列を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <returns>要素が正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。このメソッドは、キーが元のコレクション内で見つからなかった場合にも <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionary.TryGetValue(System.Windows.Forms.Keys,System.String@)">
      <summary>指定されたショートカットキーに対応するショートカット動作を取得します。</summary>
      <param name="key">ショートカットキーを表す<b><see cref="T:System.Windows.Forms.Keys">Keys</see></b>列挙体。</param>
      <param name="value">このメソッドは、指定したキーが見つかった場合はそのキーに関連付けられた値を返します。キーが見つからなかった場合は、value パラメーターの型のデフォルト値を返します。このパラメーターは初期化せずに渡されます。</param>
      <returns>指定したキーを持つ要素がコレクションに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionaryEntry">
      <summary>キーと文字列のペアを表します。</summary>
      <remarks>このクラスは GcMultiRow の内部構造で使用されます。ユーザーが使用することは推奨されません。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionaryEntry.#ctor(System.Windows.Forms.Keys,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ShortcutDictionaryEntry" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="key" />
      <param name="value" />
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton">
      <summary>画像とテキストを持つ通常のサイドボタンを表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButton.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Behavior">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />をクリックしたときの動作を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior" />列挙体。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" />は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />をクリックしたときにスピンアップ動作が実行されることを意味し、<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" />は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" nolink="true" />をクリックしたときにスピンダウン動作が実行されることを意味します。</value>
      <remarks>
        <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" />に設定すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Text" />プロパティは強制的に"+"に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Interval" />プロパティは強制的に60に変更されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" />に設定すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Text" nolink="true" />プロパティは強制的に"-"に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Interval" nolink="true" />プロパティは強制的に60に変更されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.None" />に設定すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Text" nolink="true" />プロパティは強制的に<see cref="F:System.String.Empty" />に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Interval" nolink="true" />プロパティは強制的に0に変更されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.CheckOnClick">
      <summary>クリックされたときにボタンをチェックするかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。クリックされたときにボタンをチェックする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Checked">
      <summary>チェックボックスがチェックされた状態かどうかを示す値を取得または設定します。</summary>
      <value>チェックボックスがチェックされた状態かどうかを示す <see langword="bool" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.ContentAlignment">
      <summary>テキストに付随する画像の配置を取得または設定します（クラシックな外観）。</summary>
      <value>テキストに付随する画像の配置を示す <see cref="T:System.Drawing.ContentAlignment" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Delay">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの繰り返しが始まるまでの遅延時間（ミリ秒単位）を取得または設定します。</summary>
      <value>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの繰り返しが始まるまでの遅延時間（ミリ秒単位）を示す<see cref="T:System.Int32" />値。デフォルト値は250です。</value>
      <remarks>値は0以上にする必要があります。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.CheckOnClick" />プロパティが<see langword="true" />の場合、または<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Interval" />プロパティが0の場合、スピンアクションは停止します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値が0未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Image">
      <summary>ボタンに表示する画像を取得または設定します。</summary>
      <value>ボタンビューに表示される画像を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Image" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Interval">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの発生間隔を取得または設定します。</summary>
      <value>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの発生間隔を示す<see cref="T:System.Int32" />値。デフォルト値は0です。</value>
      <remarks>値は0以上にする必要があります。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.CheckOnClick" />プロパティが<see langword="true" />の場合、または<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Interval" />プロパティが0の場合、スピンアクションは停止します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値が0未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Text">
      <summary>ボタンに表示する文字列を取得または設定します。</summary>
      <value>ボタンビューに表示されるテキストを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.TextAlignment">
      <summary>テキストを画像の右に表示するか、左に表示するかを取得または設定します。</summary>
      <value>画像に対するテキストの位置を指定する<b><see cref="T:System.Windows.Forms.LeftRightAlignment">LeftRightAlignment</see></b>列挙体。 既定値は<b>Right</b>です。 <list type="table"><listheader><term>TextAlignmentの値</term><description>説明</description></listheader><item><term><b>0 - Left</b></term><description>オブジェクトまたはテキストが参照ポイントの左側に配置されます。</description></item><item><term><b>1 - Right</b></term><description>オブジェクトまたはテキストが参照ポイントの右側に配置されます。</description></item></list></value>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SideButton.CheckedChanged">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButton.Checked" /> プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase">
      <summary>サイドボタンの共通の基底クラスを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.BackColor">
      <summary>サイドボタンの背景色を取得または設定します。</summary>
      <value>サイドボタンの背景色。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.ButtonWidth">
      <summary>サイドボタンの幅を取得または設定します。</summary>
      <value>サイドボタンの幅を示す<see cref="T:System.Int32" />値。</value>
      <remarks>このプロパティの値は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> の幅を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Enabled">
      <summary>この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> が有効かどうかを示す値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>有効</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>無効</description>
          </item>
        </list>既定値は<b>True</b>です。</value>
      <remarks>
        <b>Enabled</b> プロパティを使用すると、コントロールを実行時に有効または無効にできます。たとえば、アプリケーションの現在の状態には適用されないコントロールを無効にできます。また、コントロールを無効にしてその使用を制限することも可能です。たとえば、ボタンを無効にしてユーザーがクリックできないようにすることができます。無効なコントロールは選択できません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.FlatAppearance">
      <summary>チェック状態とマウス状態を示すために使用される境界線の外観と色を取得します。</summary>
      <value>
        <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.FlatButtonAppearance" />オブジェクトの1つ。</value>
      <remarks>
        <b>FlatAppearance</b>プロパティを使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" nolink="true" />が属するコントロールの<see cref="T:System.Windows.Forms.FlatStyle" />が<b>FlatStyle.Flat</b>のときの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />オブジェクトの外観をカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.ForeColor">
      <summary>文字色を取得または設定します。</summary>
      <value>サイドボタンの前景色。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Name">
      <summary>オブジェクトの名前を取得または設定します。</summary>
      <value>オブジェクトの名前を示す <see cref="T:System.String" /> 値。<br />既定値は <see cref="F:System.String.Empty" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Parent">
      <summary>このSideButtonを所有するコントロールオブジェクトを取得します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Position">
      <summary>サイドボタンの位置を取得または設定します。</summary>
      <value>サイドボタンの位置を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition" />列挙体。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition.RightInside" />です。</value>
      <remarks>
        <b>Position</b>プロパティを使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />オブジェクトの位置を変更できます。配置できる位置は、コンテナーコントロールの境界線の内側または外側の左側または右側です。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Size">
      <summary>サイズボタンのサイズを取得します。</summary>
      <value>サイズを表す <see cref="T:System.Drawing.Size" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Tag">
      <summary>サイドボタンオブジェクトに関するデータを含むオブジェクトを取得または設定します。</summary>
      <value>サイドボタンオブジェクトに関するデータを含む<see cref="T:System.Object" />。デフォルト値は<see langword="null" />です。</value>
      <remarks>
        <para>
          <see cref="T:System.Object" />クラスから派生した任意の型をこのプロパティに割り当てることができます。TagプロパティがWindows Formデザイナを通じて設定される場合は、テキストのみを割り当てることができます。</para>
        <para> Tagプロパティの一般的な使い方は、サイドボタンオブジェクトに密接に関連するデータを保持することです。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.UseVisualStyleBackColor">
      <summary>フラットスタイルがシステムで、なおかつシステムテーマがアクティブなときに、ビジュアルスタイルの背景色を使用するかどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。フラットスタイルがシステムで、なおかつシステムテーマがアクティブなときに、ビジュアルスタイルの背景色を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>ビジュアルスタイルはコントロールの外観を指定するものです。たとえば、ビジュアルスタイルによってコントロールの色、サイズ、フォントを定義したり、作成するアプリケーションのインタフェースに合わせて視覚インタフェースを設定したりできます。また、すべてのWindowsベースのアプリケーションにビジュアルスタイルを適用するためのメカニズムも提供します。<note>このプロパティの影響を受けるのは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />と<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />のみです。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Visible">
      <summary>サイドボタンの表示方法を取得または設定します。</summary>
      <value>サイドボタンの表示設定を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonVisibility" />列挙体。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonVisibility.ShowAlways" />です。</value>
      <remarks>
        <b>Visible</b>プロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />が常に表示されるか、コンテナーコントロールがフォーカスを取得したときにのみ表示されるか、まったく表示されないかを決定します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.ComponentModel.Component" />によって使用されているアンマネージリソースを解放し、 オプションでマネージリソースも解放します。</summary>
      <param name="disposing">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>マネージリソースとアンマネージリソースの両方を解放します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>アンマネージリソースだけを解放します。</description>
          </item>
        </list>
      </param>
      <remarks>
        <see cref="T:System.Windows.Forms.Control" />の使用が終わったら、<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Dispose(System.Boolean)" />を呼び出します。<b>Dispose</b>メソッドは、<see cref="T:System.Windows.Forms.Control" nolink="true" />を使用できない状態にします。<see cref="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Dispose(System.Boolean)" nolink="true" />を呼び出した後で、<see cref="T:System.Windows.Forms.Control" nolink="true" />へのすべての参照を解放し、<see cref="T:System.Windows.Forms.Control" nolink="true" />によって占有されていたメモリをガベージコレクターがクリアできるようにする必要があります。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Finalize">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> がガベージコレクションによって回収される前に、アンマネージリソースを解放し、その他のクリーンアップ処理を実行します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.OnClick(System.Object,System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" /> イベントを発生させます。</summary>
      <param name="sender">イベントソースを示す<see cref="T:System.Object" />。</param>
      <param name="e">イベントデータを含む<see cref="T:System.EventArgs" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.MouseDown" /> イベントを発生させます。</summary>
      <param name="sender">イベントソースを示す<see cref="T:System.Object" />。</param>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Forms.MouseEventArgs" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.MouseUp" /> イベントを発生させます。</summary>
      <param name="sender">イベントソースを示す<see cref="T:System.Object" />。</param>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Forms.MouseEventArgs" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.PropertyChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.PropertyChangedEventArgs" />インスタンス。</param>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click">
      <summary>サイドボタンがクリックされたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.MouseDown">
      <summary>マウスボタンが押されたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.MouseUp">
      <summary>マウスボタンが離されたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Paint">
      <summary>SideButtonBaseをレンダリングした後に発生します。</summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.PropertyChanged">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />のプロパティが変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo">
      <summary>サイドボタンの基本クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.BackColor">
      <summary>サイドボタンの背景色を取得または設定します。</summary>
      <value>サイドボタンの背景色。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.ButtonWidth">
      <summary>サイドボタンの幅を取得または設定します。</summary>
      <value>サイドボタンの幅を示す <see cref="T:System.Int32" /> 値。</value>
      <remarks>このプロパティの値は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> の幅を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.Enabled">
      <summary>この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> が有効かどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="true" /> です。</value>
      <remarks>
        <b>Enabled</b> プロパティを使用すると、コントロールを実行時に有効または無効にできます。たとえば、アプリケーションの現在の状態には適用されないコントロールを無効にできます。また、コントロールを無効にしてその使用を制限することも可能です。たとえば、ボタンを無効にしてユーザーがクリックできないようにすることができます。無効なコントロールは選択できません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.FlatAppearance">
      <summary>チェック状態とマウス状態を示すために使用される境界線の外観と色を取得します。</summary>
      <value>
        <seealso cref="T:FlatButtonAppearance" /> 設定の１つ。</value>
      <remarks>
        <b>FlatAppearance</b>プロパティを使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" nolink="true" />が属するコントロールの<see cref="T:System.Windows.Forms.FlatStyle" />が<b>FlatStyle.Flat</b>のときの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />オブジェクトの外観をカスタマイズできます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.ForeColor">
      <summary>文字色を取得または設定します。</summary>
      <value>サイドボタンの前景色。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.Name">
      <summary>オブジェクトの名前を取得または設定します。</summary>
      <value>オブジェクトの名前を示す <see cref="T:System.String" /> 値。<br />既定値は <see cref="F:System.String.Empty" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.Position">
      <summary>サイドボタンの位置を取得または設定します。</summary>
      <value>サイドボタンの位置を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition" /> 列挙体。<br />既定値は <see cref="F:ButtonPosition.RightInside" /> です。</value>
      <remarks>
        <b>Position</b> プロパティを使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> オブジェクトの位置を変更できます。配置できる位置は、コンテナーコントロールの境界線の左または右の、境界線より内側または外側です。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.Tag">
      <summary>サイドボタンオブジェクトに関するデータを含むオブジェクトを取得または設定します。</summary>
      <value>サイドボタンオブジェクトに関するデータを含む<see cref="T:System.Object" />。デフォルト値は<see langword="null" />です。</value>
      <remarks>
        <para>
          <see cref="T:System.Object" />クラスから派生した任意の型をこのプロパティに割り当てることができます。TagプロパティがWindows Formデザイナを通じて設定される場合は、テキストのみを割り当てることができます。</para>
        <para> Tagプロパティの一般的な使い方は、サイドボタンオブジェクトに密接に関連するデータを保持することです。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.UseVisualStyleBackColor">
      <summary>フラットスタイルがシステムで、なおかつシステムテーマがアクティブなときに、ビジュアルスタイルの背景色を使用するかどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。フラットスタイルがシステムで、なおかつシステムテーマがアクティブなときに、ビジュアルスタイルの背景色を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>ビジュアルスタイルはコントロールの外観を指定するものです。たとえば、ビジュアルスタイルによってコントロールの色、サイズ、フォントを定義したり、作成するアプリケーションのインタフェースに合わせて視覚インタフェースを設定したりできます。また、すべての Windows ベースのアプリケーションにビジュアルスタイルを適用するためのメカニズムも提供します。<note>このプロパティの影響を受けるのは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" /> と <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" /> のみです。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBaseInfo.Visible">
      <summary>サイドボタンの表示方法を取得または設定します。</summary>
      <value>サイドボタンの表示設定を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonVisibility" /> 列挙体。<br />既定値は <see cref="F:ButtonVisibility.ShowAlways" /> です。</value>
      <remarks>
        <b>Visible</b> プロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> がいつ表示されるかを決定します。ボタンを常に表示するか、コンテナーコントロールがフォーカスを取得した場合にのみ表示するか、まったく表示しないかを選択できます。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection">
      <summary>サイドボタンのコレクションを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.Item(System.Int32)">
      <summary>コレクションの指定したインデックスにある <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> を取得または設定します。</summary>
      <param name="index">インデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <value>有効な各インデックスにある <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">indexパラメーターが、コレクションの有効なインデックスの範囲から外れています。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.Item(System.String)">
      <summary>指定した名前を持つ要素を取得または設定します。</summary>
      <value>指定した項目を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" />型の要素。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase)">
      <summary>指定した <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> をコレクションに追加します。</summary>
      <param name="value">追加する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />。</param>
      <returns>コレクションの挿入位置のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.AddRange(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[])">
      <summary>配列に含まれる項目を、コレクションの末尾に追加します。</summary>
      <param name="value">コレクションに追加するオブジェクトを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />型の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.AddRange(System.Collections.Generic.IList{GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase})">
      <summary>
        <b>
          <see cref="T:System.Collections.Generic.IList`1">IList</see>
        </b>
        <b>&lt;</b>
        <b>
          <see cref="T:GrapeCity.Win.Editors.SideButtonBase">SideButtonBase</see>
        </b>
        <b>&gt;</b>を実装するコレクションの <b><see cref="T:GrapeCity.Win.Editors.SideButtonBase">SideButtonBase</see></b>をこのコレクションに追加します。</summary>
      <param name="value">コレクションに追加するオブジェクトを含む<see cref="T:System.Collections.Generic.IList`1" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.Contains(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase)">
      <summary>指定した<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />がコレクションに含まれているかどうかを示す値を取得します。</summary>
      <param name="value">コレクション内で検索する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定されたオブジェクトはこのコレクションに含まれています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定されたオブジェクトはこのコレクションに含まれていません。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.ContainsKey(System.String)">
      <summary>指定したキーを持つ項目が <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.NamedObjectCollection`1" /> コレクションに含まれているかどうかを判断します。</summary>
      <param name="name">コレクション内で検索するキー。</param>
      <returns>指定した名前を持つ<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" />型の項目がコレクションに含まれている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase[],System.Int32)">
      <summary>コレクションのオブジェクトを、1次元<see cref="T:System.Array" />インスタンスの指定したインデックス以降にコピーします。</summary>
      <param name="array">設定先となる<b><see cref="T:GrapeCity.Win.Editors.SideButtonBase">SideButtonBase</see></b>配列。</param>
      <param name="index">コピー先配列におけるコピー開始位置となるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <exception cref="T:System.ArgumentNullException">arrayパラメーターがnullです。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">indexパラメーターが、コピー先配列の最小インデックス未満です。</exception>
      <exception cref="T:System.ArgumentException">コピー先配列が多次元です。または、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection" /> 内の要素の数が、インデックスパラメーターによって指定されたコピー先配列のインデックスから末尾までに格納できる数を超えています。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.Find(System.String)">
      <summary>指定した名前を使用して項目を検索します。</summary>
      <param name="name">コレクションから取得するオブジェクトの名前を示す<see cref="T:System.String" />値。</param>
      <returns>指定した名前を持つ、コレクション内の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase)">
      <summary>指定した <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> がコレクション内に存在する場合、そのコレクションでのインデックスを返します。</summary>
      <param name="value">コレクション内で検索する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />。</param>
      <returns>
        <para> オブジェクトがコレクションに含まれている場合は、そのインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。 </para>
        <para> オブジェクトがコレクションに含まれない場合は、<b>-1</b>。 </para>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.IndexOfKey(System.String)">
      <summary>指定したアイテムがコレクション内で最初に出現する位置のインデックスを取得します。</summary>
      <param name="name">検索する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> オブジェクトの名前。</param>
      <returns>指定した名前を持つ、コレクション内で最初に見つかった <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject" /> オブジェクトの０から始まるインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase)">
      <summary>指定した <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> をコレクションの指定したインデックスに挿入します。</summary>
      <param name="value">挿入する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />。</param>
      <param name="index">挿入位置を表す0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnClear">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnClearComplete">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.CollectionChanged" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> インスタンス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnInsert(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素を挿入する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">値を挿入する位置の０から始まるインデックス。</param>
      <param name="value">指定したインデックスにある要素の新しい値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">値を挿入する位置の０から始まるインデックス。</param>
      <param name="value">指定したインデックスにある要素の新しい値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnRemove(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスから要素を削除するときに、追加のカスタム処理を実行します。</summary>
      <param name="index">削除される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">指定したインデックスから削除する要素の値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">削除される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">指定したインデックスから削除する要素の値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに値を設定する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">更新される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="oldValue">更新前の項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="newValue">指定したインデックスにある要素の新しい値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">更新される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="oldValue">更新前の項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="newValue">指定したインデックスにある要素の新しい値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.OnValidate(System.Object)">
      <summary>項目が検証されるとき、追加処理を実行します。</summary>
      <param name="value">検証される項目を表す<b><see cref="T:System.Object">Object</see></b></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase)">
      <summary>指定した <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" /> をコレクションから削除します。</summary>
      <param name="value">コレクションから削除する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase" />。</param>
      <exception cref="T:System.ArgumentException">指定されたオブジェクトがコレクション内で見つかりません。</exception>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollectionInfo">
      <summary>サイドボタンのコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollectionInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonCollectionInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo">
      <summary>サイドボタンを実装します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Behavior">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo" />をクリックしたときの動作を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior" />列挙体。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" />は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo" />をクリックしたときにスピンアップ動作が実行されることを意味し、<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" />は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo" nolink="true" />をクリックしたときにスピンダウン動作が実行されることを意味します。</value>
      <remarks>
        <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" />に設定すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Text" />プロパティは"+"に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval" />プロパティは60に変更されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" />に設定すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Text" nolink="true" />プロパティは"-"に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval" nolink="true" />プロパティは60に変更されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.None" />に設定すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Text" nolink="true" />プロパティは<see cref="F:System.String.Empty" />に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval" nolink="true" />プロパティは0に変更されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.CheckOnClick">
      <summary>クリックされたときにボタンをチェックするかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。クリックされたときにボタンをチェックする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Checked">
      <summary>チェックボックスがチェックされた状態かどうかを示す値を取得または設定します。</summary>
      <value>チェックボックスがチェックされた状態かどうかを示す <see langword="bool" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.ContentAlignment">
      <summary>テキストに付随する画像の配置を取得または設定します（クラシックな外観）。</summary>
      <value>テキストに付随する画像の配置を示す <see cref="T:System.Drawing.ContentAlignment" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Delay">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの繰り返しが始まるまでの遅延時間（ミリ秒単位）を取得または設定します。</summary>
      <value>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの繰り返しが始まるまでの遅延時間（ミリ秒単位）を示す<see cref="T:System.Int32" />値。デフォルト値は250です。</value>
      <remarks>値は0以上にする必要があります。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.CheckOnClick" />プロパティが<see langword="true" />の場合、または<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval" />プロパティが0の場合、スピンアクションは停止します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値が0未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Image">
      <summary>ボタンに表示する画像を取得または設定します。</summary>
      <value>ボタンビューに表示される画像を示す <see cref="P:SideButton.Image" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの発生間隔を取得または設定します。</summary>
      <value>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの発生間隔を示す<see cref="T:System.Int32" />値。デフォルト値は0です。</value>
      <remarks>値は0以上にする必要があります。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.CheckOnClick" />プロパティが<see langword="true" />の場合、または<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval" />プロパティが0の場合、スピンアクションは停止します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値が0未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Text">
      <summary>ボタンに表示する文字列を取得または設定します。</summary>
      <value>ボタンビューに表示されるテキストを示す <see cref="T:System.String" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.TextAlignment">
      <summary>テキストを画像の右に表示するか、左に表示するかを取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.LeftRightAlignment" /> 列挙体。<b>Left</b> はテキストが画像の左側に配置されることを意味し、<b>Right</b> はテキストが画像の右側に配置されることを意味します。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Spin">
      <summary>スピン機能の設定を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Spin.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Spin" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.AllowSpin">
      <summary>スピン動作を許可するか、しないかを取得または設定します。</summary>
      <value>
        <see langword="bool" />値。スピン動作を実行できる場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Increment">
      <summary>スピンアクション時の値の変化量を取得または設定します。</summary>
      <value>スピン動作の増分オフセットを示す<b>int</b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.SpinOnKeys">
      <summary>ユーザーがキーを使用してスピン操作を実行できるかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。ユーザーがキーを使用してスピン操作を実行できる場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.SpinOnWheel">
      <summary>ユーザーがマウスホイールを使用してスピン操作を実行できるかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。ユーザーがマウスホイールを使用してスピン操作を実行できる場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Wrap">
      <summary>スピン範囲の上限または下限に達したときに折り返すかどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" />値。スピン動作が折り返す場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton">
      <summary>
        <b>SpinButton</b>クラスを表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.Delay">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinUp" />または<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinDown" />イベントの繰り返しが始まるまでの遅延時間（ミリ秒単位）を取得または設定します。</summary>
      <value>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinUp" />および<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinDown" />イベントの繰り返しが始まるまでの遅延時間（ミリ秒単位）を示す<see cref="T:System.Int32" />値。</value>
      <remarks>値は正数である必要があります。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値が 0 未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.Interval">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinUp" /> および <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinDown" /> イベントの発生間隔を取得または設定します。</summary>
      <value>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinUp" />および<see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinDown" />イベントの発生間隔を示す<see cref="T:System.Int32" />値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">指定された引数は、有効な値の範囲内にありません。有効な値の範囲は 1 以上です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.IsDefaultBehavior">
      <summary>このインスタンスがデフォルト動作かどうかを示す値を取得または設定します。</summary>
      <value>このボタンがデフォルトのドロップダウン動作を制御する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.Size">
      <summary>サイズボタンのサイズを取得します。</summary>
      <value>サイズを表す <see cref="T:System.Drawing.Size" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.UseVisualStyleBackColor">
      <summary>フラットスタイルがシステムで、なおかつシステムテーマがアクティブなときに、ビジュアルスタイルの背景色を使用するかどうかを取得または設定します。</summary>
      <value>
        <see langword="bool" />値。フラットスタイルがシステムで、なおかつシステムテーマがアクティブなときに、ビジュアルスタイルの背景色を使用する場合は<see langword="true" />。それ以外の場合はfalse。</value>
      <remarks>このプロパティは <seealso cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" /> に対して無効です。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinDown">
      <summary>スピンボタンの下向き矢印ボタンが押されたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.SpinButton.SpinUp">
      <summary>スピンボタンの上向き矢印ボタンが押されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButtonInfo">
      <summary>スピンボタンを実装します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SpinButtonInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SpinButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButtonInfo.Delay">
      <summary>遅延時間（ミリ秒単位）を取得または設定します。</summary>
      <value>遅延時間（ミリ秒単位）を示す <see cref="T:System.Int32" /> 値。</value>
      <remarks>値は正数である必要があります。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値が 0 未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButtonInfo.Interval">
      <summary>スピン間隔を取得または設定します。</summary>
      <value>スピン間隔を示す <see cref="T:System.Int32" /> 値。</value>
      <exception cref="T:System.ArgumentOutOfRangeException">指定された引数は、有効な値の範囲内にありません。有効な値の範囲は 1 以上です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SpinButtonInfo.IsDefaultBehavior">
      <summary>このインスタンスがデフォルト動作かどうかを示す値を取得または設定します。</summary>
      <value>このボタンがデフォルトのドロップダウン動作を制御する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBar">
      <summary>ステータスバーの設定を定義する<b>StatusBar</b>クラスを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBar.Text">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBar" />のテキストを示す値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBar" />のテキストを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBar.Visible">
      <summary>ステータスバーが表示されるかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBar" />が表示される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="false" />です。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo">
      <summary>ステータスバーの設定の定義に使用される<b>StatusBarInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo.Text">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBar" />のテキストを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBar" />のテキストを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo.Visible">
      <summary>ステータスバーが表示されるかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StatusBar" />が表示される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="false" />です。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StatusBarInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Style">
      <summary>カレンダーの表示スタイルを設定します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Style.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Style.#ctor(System.Drawing.Color,System.Drawing.Color)">
      <summary>指定した初期化プロパティを使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="backColor">背景色を表す<b><see cref="T:System.Drawing.Color">Color</see></b>値。</param>
      <param name="foreColor">文字色を表す<b><see cref="T:System.Drawing.Color">Color</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Style.#ctor(System.Drawing.Color,GrapeCity.Win.Spread.InputMan.CellType.Bevel,System.Drawing.Color,System.Windows.Forms.BorderStyle,System.Drawing.Font,GrapeCity.Win.Spread.InputMan.CellType.TextEffect,System.Drawing.Color,System.Drawing.ContentAlignment)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="backColor">背景色を表す<b><see cref="T:System.Drawing.Color">Color</see></b>値。</param>
      <param name="bevel">ベベル効果を示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.Bevel" /> 値。</param>
      <param name="borderColor">境界線の色を表す<b><see cref="T:System.Drawing.Color">Color</see></b>値。</param>
      <param name="borderStyle">罫線スタイルを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.BorderStyle" /> 値。</param>
      <param name="font">フォントを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.Font" /> 値。</param>
      <param name="textEffect">テキスト効果を示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.TextEffect" /> 値。</param>
      <param name="foreColor">文字色を表す<b><see cref="T:System.Drawing.Color">Color</see></b>値。</param>
      <param name="contentAlignment">内容の配置を示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.ContentAlignment" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.BackColor">
      <summary>背景色を取得または設定します。</summary>
      <value>背景色を示す <see cref="T:System.Drawing.Color" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.Bevel">
      <summary>3D効果のべべルを取得または設定します。</summary>
      <value>ベベル効果を示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.Bevel" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.BorderColor">
      <summary>境界線の色を取得または設定します。</summary>
      <value>境界線の色を表す<b><see cref="T:System.Drawing.Color">Color</see></b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.BorderStyle">
      <summary>コントロールの境界線の種類を取得または設定します。</summary>
      <value>罫線スタイルを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.BorderStyle" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.ContentAlignment">
      <summary>テキストの内容の配置を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.ContentAlignment" /> 値の１つ。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.Font">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> のフォントを取得または設定します。</summary>
      <value>フォントを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.Font" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.ForeColor">
      <summary>文字色を取得または設定します。</summary>
      <value>文字色を表す<b><see cref="T:System.Drawing.Color">Color</see></b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Style.TextEffect">
      <summary>文字の表示スタイルを取得または設定します。</summary>
      <value>テキスト効果を示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Style.TextEffect" /> 値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Style.Clone">
      <summary>この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> オブジェクトの同一コピーを作成します。</summary>
      <returns>このメソッドによって作成される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" />オブジェクトを返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Style.Equals(System.Object)">
      <summary>指定した<see cref="T:System.Object" />が現在の<see cref="T:System.Object" nolink="true" />と等しいかどうかを判断します。</summary>
      <param name="obj">現在の<see cref="T:System.Object" nolink="true" />と比較する<see cref="T:System.Object" />。</param>
      <returns>指定した<see cref="T:System.Object" />が現在の<see cref="T:System.Object" nolink="true" />と等しい場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="obj" />パラメーターが<see langword="null" />です。</exception>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Style.GetHashCode">
      <summary>オブジェクトのハッシュコードを返します。</summary>
      <returns>ハッシュコードを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.#ctor(System.String[],GrapeCity.Win.Spread.InputMan.CellType.Style[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="keys">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> に追加する Key の配列。</param>
      <param name="styles">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> に追加する Style の配列。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Item(System.Int32)">
      <summary>指定したインデックスにある <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> を取得します。</summary>
      <value>インデックスを示す <see cref="T:System.Int32" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Item(System.String)">
      <summary>指定したキーを持つ <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> を取得します。</summary>
      <value>キーを示す <see cref="T:System.String" /> 値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Add(System.String)">
      <summary>指定したキーを持つ新しい Style を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> に追加します。</summary>
      <param name="key">この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> のキー。</param>
      <returns>この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> でのインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Add(System.String,GrapeCity.Win.Spread.InputMan.CellType.Style)">
      <summary>指定したキーと値を持つ項目を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> に追加します。</summary>
      <param name="key">キー文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
      <param name="style">この項目（<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" />）の値。</param>
      <returns>この項目の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> でのインデックス。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.AddRange(System.String[],GrapeCity.Win.Spread.InputMan.CellType.Style[])">
      <summary>指定したキーの配列と <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> の配列を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> に追加します。</summary>
      <param name="keys">キー文字列を表す<b><see cref="T:System.String">String</see></b>配列。</param>
      <param name="styles">コレクションに追加する項目を表す<b><see cref="T:GrapeCity.Win.Editors.Style">Style</see></b>オブジェクト配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Clear">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> からすべての要素を削除します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.Style[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> の項目を、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> 型の互換性のある１次元配列の先頭インデックス以降にコピーします。</summary>
      <param name="array">コピー操作のコピー先として使用する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> 型の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.Style[],System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> の項目を、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> 型の互換性のある１次元配列の指定した０から始まるインデックス以降にコピーします。</summary>
      <param name="array">コピー操作のコピー先として使用する <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> 型の配列。</param>
      <param name="arrayIndex">コピー先配列上のコピー開始位置を示す0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Insert(System.Int32,System.String)">
      <summary>指定したキーを持つ新しい <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Style" /> を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> に挿入します。</summary>
      <param name="index">コレクション内の挿入位置を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="key">キー文字列を表す<b><see cref="T:System.String">String</see></b></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Insert(System.Int32,System.String,GrapeCity.Win.Spread.InputMan.CellType.Style)">
      <summary>指定したキーと値を持つ項目を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> に挿入します。</summary>
      <param name="index">コレクション内の挿入位置を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="key">キー文字列を表す<b><see cref="T:System.String">String</see></b></param>
      <param name="style">コレクションに追加する項目を表す<b><see cref="T:System.String,GrapeCity.Win.Editors.Style">Style</see></b>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> オブジェクトが変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="System.ComponentModel.CollectionChangeEventArgs">CollectionChangeEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.Remove(System.String)">
      <summary>指定したキーを持つ要素を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> から削除します。</summary>
      <param name="key">キー文字列を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection.RemoveAt(System.Int32)">
      <summary>指定したインデックスにある要素を <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.StyleCollection" /> から削除します。</summary>
      <param name="index">インデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem">
      <summary>
        <b>SubItem</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItem.#ctor(System.Object,System.Object,System.Drawing.ContentAlignment,System.Boolean,System.Boolean)">
      <summary>指定した値を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />オブジェクトの値を示す<b>object</b>。</param>
      <param name="tag">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />オブジェクトのタグ値を示す<b>object</b>。</param>
      <param name="contentAlignment">内容の配置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.ContentAlignment" />列挙体。</param>
      <param name="wordWrap">
        <see langword="bool" />値。ワードラップする場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</param>
      <param name="ellipsis">
        <see langword="bool" />値。内容を完全に表示できないときに自動的に省略記号を表示する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItem.#ctor(System.Object)">
      <summary>指定した値を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />オブジェクトの値を示す<b>object</b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItem.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.ContentAlignment">
      <summary>テキストの配置を表す値を取得または設定します。</summary>
      <value>テキストの配置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.ContentAlignment" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Ellipsis">
      <summary>テキストを完全に表示できないときに省略記号を表示するかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>テキストを完全に表示できないときに省略記号を表示する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Padding">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />の余白を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Padding" />値を取得または設定します。</summary>
      <value>余白を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Padding" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Tag">
      <summary>ユーザーが自由に設定可能な値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />のタグを表す<see cref="T:System.Object" />オブジェクト。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.Value">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />の値を表す値を取得または設定します。</summary>
      <value>値を示す<see cref="T:System.Object" />値。<br /> デフォルト値は<see langword="null" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItem.WordWrap">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />がワードラップされるかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />がワードラップされる場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItem.ResetContentAlignment">
      <summary>内容の配置をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItem.ResetEllipsis">
      <summary>省略記号をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItem.ResetPadding">
      <summary>パディングをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItem.ResetWordWrap">
      <summary>ワードラップをリセットします。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection">
      <summary>
        <b>SubItemCollection</b>クラスを定義します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Count">
      <summary>コレクションの項目数を表す値を取得します。</summary>
      <value>項目数を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.IsReadOnly">
      <summary>コレクションが読み取り専用かどうかを示す値を取得します。</summary>
      <value>
        <see cref="T:System.Collections.IList" />が読み取り専用の場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Item(System.Int32)">
      <summary>指定した位置にある項目を取得または設定します。</summary>
      <value>指定した位置を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Add(GrapeCity.Win.Spread.InputMan.CellType.SubItem)">
      <summary>コレクションに項目を追加します。</summary>
      <param name="item">コレクションに追加する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Add(System.Object)">
      <summary>コレクションに項目を追加します。</summary>
      <param name="item">コレクションに追加するObject。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.AddRange(GrapeCity.Win.Spread.InputMan.CellType.SubItem[])">
      <summary>指定したコレクションに含まれるSubItemをコレクションの最後に追加します。</summary>
      <param name="subItems">コレクションに追加された<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.AddRange(System.Object[])">
      <summary>指定したコレクションに含まれるSubItemをコレクションの最後に追加します。</summary>
      <param name="subItems">コレクションに追加された<b>object</b>の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Clear">
      <summary>コレクション内のすべての項目をクリアします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Contains(GrapeCity.Win.Spread.InputMan.CellType.SubItem)">
      <summary>コレクションに特定の項目が含まれるかどうかを判断します。</summary>
      <param name="item">コレクション内で検索する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />。</param>
      <returns>コレクション内で項目が見つかった場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.SubItem[],System.Int32)">
      <summary>
        <see cref="T:System.Collections.ICollection" />の要素を、<see cref="T:System.Array" />の特定の<see cref="T:System.Array" nolink="true" />インデックス以降にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" />の要素のコピー先となる1次元の<see cref="T:System.Array" />。<see cref="T:System.Array" nolink="true" />にはゼロから始まるインデックスが必要です。</param>
      <param name="arrayIndex">コピーを開始する、配列内のゼロから始まるインデックス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.GetEnumerator">
      <summary>列挙子を取得します。</summary>
      <returns>列挙子。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.SubItem)">
      <summary>項目のインデックスを取得します。</summary>
      <param name="item">インデックスを特定する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />オブジェクト。</param>
      <returns>コレクション内で項目が見つかった場合はそのインデックス。見つからなかった場合は-1。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.SubItem)">
      <summary>コレクションの指定した位置に項目を挿入します。</summary>
      <param name="index">値を挿入する位置の、ゼロから始まるインデックス。</param>
      <param name="item">コレクションに挿入する項目。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.Remove(GrapeCity.Win.Spread.InputMan.CellType.SubItem)">
      <summary>コレクションから特定の項目を削除します。</summary>
      <param name="item">削除される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.RemoveAt(System.Int32)">
      <summary>コレクションの特定の位置にある項目を削除します。</summary>
      <param name="index">削除する項目のインデックス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection.ToArray">
      <summary>コレクションのサブ項目を新しい<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />配列にコピーします。</summary>
      <returns>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollection" />のすべての項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />の配列。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo">
      <summary>
        <b>SubItemCollectionInfo</b>クラスを定義します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Count">
      <summary>コレクションの項目数を表す値を取得します。</summary>
      <value>項目数を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.IsReadOnly">
      <summary>コレクションが読み取り専用かどうかを取得します。</summary>
      <value>
        <see cref="T:System.Collections.IList" />が読み取り専用の場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Item(System.Int32)">
      <summary>指定した位置にある項目を取得または設定します。</summary>
      <value>指定した位置を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Add(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo)">
      <summary>コレクションに項目を追加します。</summary>
      <param name="item">コレクションに追加する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Add(System.Object)">
      <summary>コレクションに項目を追加します。</summary>
      <param name="item">コレクションに追加するObject。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.AddRange(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo[])">
      <summary>指定したコレクションに含まれるサブ項目をコレクションの最後に追加します。</summary>
      <param name="subItems">コレクションに追加された<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.AddRange(System.Object[])">
      <summary>指定したコレクションに含まれるサブ項目をコレクションの最後に追加します。</summary>
      <param name="subItems">コレクションに追加された<b>object</b>の配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Clear">
      <summary>コレクション内のすべての項目をクリアします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Contains(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo)">
      <summary>コレクションに特定の項目が含まれるかどうかを判断します。</summary>
      <param name="item">コレクション内で検索する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />。</param>
      <returns>コレクション内で項目が見つかった場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo[],System.Int32)">
      <summary>
        <see cref="T:System.Collections.ICollection" />の要素を、<see cref="T:System.Array" />の特定の<see cref="T:System.Array" nolink="true" />インデックス以降にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" />の要素のコピー先となる1次元の<see cref="T:System.Array" />。<see cref="T:System.Array" nolink="true" />にはゼロから始まるインデックスが必要です。</param>
      <param name="arrayIndex">コピーを開始する、配列内のゼロから始まるインデックス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.GetEnumerator">
      <summary>列挙子を取得します。</summary>
      <returns>列挙子。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.IndexOf(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo)">
      <summary>項目のインデックスを取得します。</summary>
      <param name="item">インデックスを取得する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />オブジェクト。</param>
      <returns>コレクション内で項目が見つかった場合はそのインデックス。見つからなかった場合は-1。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Insert(System.Int32,GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo)">
      <summary>コレクションの指定した位置に項目を挿入します。</summary>
      <param name="index">値を挿入する位置の、ゼロから始まるインデックス。</param>
      <param name="item">コレクションに挿入する項目。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.Remove(GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo)">
      <summary>コレクションから特定の項目を削除します。</summary>
      <param name="item">削除される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.RemoveAt(System.Int32)">
      <summary>コレクションの指定した位置にある項目を削除します。</summary>
      <param name="index">削除する項目のインデックス。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo.ToArray">
      <summary>コレクションのサブ項目を新しい<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />配列にコピーします。</summary>
      <returns>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemCollectionInfo" />のすべての項目を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />の配列。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo">
      <summary>
        <b>SubItemInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.#ctor(System.Object,System.Object,System.Drawing.ContentAlignment,System.Boolean,System.Boolean)">
      <summary>指定した値を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />オブジェクトの値を示す<b>object</b>。</param>
      <param name="tag">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />オブジェクトのタグ値を示す<b>object</b>。</param>
      <param name="contentAlignment">内容の配置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.ContentAlignment" />列挙体。</param>
      <param name="wordWrap">
        <see langword="bool" />値。ワードラップする場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</param>
      <param name="ellipsis">
        <see langword="bool" />値。内容が完全に表示されないときに自動的に省略記号を表示する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.#ctor(System.Object)">
      <summary>指定した値を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />オブジェクトの値を示す<b>object</b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.ContentAlignment">
      <summary>テキストの配置を取得または設定します。</summary>
      <value>テキストの配置を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.ContentAlignment" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Ellipsis">
      <summary>テキストが完全に表示されないときに省略記号を表示するかどうかを取得または設定します。</summary>
      <value>省略記号を表示する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Padding">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />の余白を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Padding" />値を取得または設定します。</summary>
      <value>余白を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Padding" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Tag">
      <summary>ユーザーが自由に設定可能な値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />オブジェクトのタグを表す<see cref="T:System.Object" />オブジェクト。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Value">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />オブジェクトの値を取得または設定します。</summary>
      <value>値を示す<see cref="T:System.Object" />値。<br /> デフォルト値は<see langword="null" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.WordWrap">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />オブジェクトがワードラップされるかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo" />オブジェクトがワードラップされる場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.ResetContentAlignment">
      <summary>内容の配置をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.ResetEllipsis">
      <summary>省略記号をリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.ResetPadding">
      <summary>パディングをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.ResetWordWrap">
      <summary>ワードラップをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubItemInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle">
      <summary>テキストの太字、下線、色などの属性を示すSubStyleクラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.#ctor(System.Drawing.Color,System.Drawing.Color)">
      <summary>指定した初期化プロパティを使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="backColor">
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.BackColor" /> プロパティの初期設定。</param>
      <param name="foreColor">
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.ForeColor" /> プロパティの初期設定。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.#ctor(System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean)">
      <summary>背景色、文字色、太字、下線を指定して<b><see cref="T:GrapeCity.Win.Editors.SubStyle">SubStyle</see></b> クラスの新しいインスタンスを初期化します。</summary>
      <param name="backColor">
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.BackColor" /> プロパティの初期設定。</param>
      <param name="foreColor">
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.ForeColor" /> プロパティの初期設定。</param>
      <param name="bold">
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.Bold" /> プロパティの初期設定。</param>
      <param name="underLine">
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.UnderLine" /> プロパティの初期設定。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.BackColor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> の背景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" />の背景色を示す<see cref="T:System.Drawing.Color" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.Bold">
      <summary>テキストが太字かどうかを取得または設定します。</summary>
      <value>テキストが太字かどうかを示す<see langword="bool" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.ForeColor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> の前景色を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" />の前景色を示す<see cref="T:System.Drawing.Color" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.UnderLine">
      <summary>テキストに下線スタイルが設定されているかどうかを取得または設定します。</summary>
      <value>テキストに下線スタイルが設定されているかどうかを示す<see langword="bool" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.Clone">
      <summary>この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> オブジェクトの同一コピーを作成します。</summary>
      <returns>このメソッドによって作成される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" />オブジェクトを返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.Equals(System.Object)">
      <summary>指定したオブジェクトがこのインスタンスと等しいかどうかを取得します。</summary>
      <param name="obj">比較対象となるオブジェクトを表す<b><see cref="T:System.Object">Object</see></b></param>
      <returns>指定したオブジェクトが現在のインスタンスと同じかどうかを示す<see langword="bool" />値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.GetHashCode">
      <summary>オブジェクトのハッシュコードを返します。</summary>
      <returns>このオブジェクトのハッシュコードを示す<see cref="T:System.Int32" />値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" /> のいずれかのプロパティが変更されたときに発生します。</summary>
      <param name="e">イベントデータを格納している<b><see cref="System.ComponentModel.PropertyChangedEventArgs">PropertyChangedEventArgs</see></b>。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection">
      <summary>
        <b>
          <see cref="T:GrapeCity.Win.Editors.SubStyle">SubStyle</see>
        </b>オブジェクトのコレクションを実装します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.#ctor">
      <summary>
        <b>
          <see cref="T:GrapeCity.Win.Editors.SubStyleCollection">SubStyleCollection</see>
        </b>クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.#ctor(System.String[],GrapeCity.Win.Spread.InputMan.CellType.SubStyle[])">
      <summary>
        <b>
          <see cref="T:GrapeCity.Win.Editors.SubStyleCollection">SubStyleCollection</see>
        </b>クラスの新しいインスタンスを初期化します。</summary>
      <param name="keys">キー文字列を表す<b><see cref="T:System.String">String</see></b>配列。</param>
      <param name="subStyles">コレクションに追加する項目を表す<b><see cref="T:GrapeCity.Win.Editors.SubStyle">SubStyle</see></b>オブジェクト配列。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Item(System.Int32)">
      <summary>インデックスを指定してコレクションの項目を取得します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Item(System.String)">
      <summary>キー文字列を指定してコレクションの項目を取得します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Add(System.String)">
      <summary>コレクションの末尾に、既定値の項目を指定のキー文字列で追加します。</summary>
      <param name="key">キー文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
      <returns>新しく追加された<b><see cref="T:GrapeCity.Win.Editors.SubStyle">SubStyle</see></b>オブジェクトの、 コレクション内のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Add(System.String,GrapeCity.Win.Spread.InputMan.CellType.SubStyle)">
      <summary>キー文字列と項目の組み合わせをコレクションに追加します。</summary>
      <param name="key">キー文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
      <param name="subStyle">この項目（<b>SubStyle</b>）の値。</param>
      <returns>新しく追加された<b><see cref="T:GrapeCity.Win.Editors.SubStyle">SubStyle</see></b>オブジェクトの、 コレクション内のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.AddRange(System.String[],GrapeCity.Win.Spread.InputMan.CellType.SubStyle[])">
      <summary>配列形式のキー文字列と項目をコレクションに追加します。</summary>
      <param name="keys">キー文字列を表す<b><see cref="T:System.String">String</see></b>配列。</param>
      <param name="subStyles">コレクションに追加する項目を表す<b><see cref="T:GrapeCity.Win.Editors.SubStyle">SubStyle</see></b>オブジェクト配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Clear">
      <summary>コレクション内のすべての項目を削除します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.SubStyle[])">
      <summary>指定の配列にコレクションの項目をコピーします。</summary>
      <param name="array">コピー先となる<b><see cref="T:GrapeCity.Win.Editors.SubStyle">SubStyle</see></b>オブジェクト配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.CopyTo(GrapeCity.Win.Spread.InputMan.CellType.SubStyle[],System.Int32)">
      <summary>指定配列の指定位置から、コレクションの項目をコピーします。</summary>
      <param name="array">コピー先となる<b><see cref="T:GrapeCity.Win.Editors.SubStyle">SubStyle</see></b>オブジェクト配列。</param>
      <param name="arrayIndex">コピー先配列上のコピー開始位置を示す0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Insert(System.Int32,System.String)">
      <summary>指定位置にキー文字列を指定して既定値の項目を挿入します。</summary>
      <param name="index">コレクション内の挿入位置を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="key">キー文字列を表す<b><see cref="T:System.String">String</see></b></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Insert(System.Int32,System.String,GrapeCity.Win.Spread.InputMan.CellType.SubStyle)">
      <summary>キー文字列と項目の組み合わせをコレクションの指定位置に挿入します。</summary>
      <param name="index">コレクション内の挿入位置を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="key">キー文字列を表す<b><see cref="T:System.String">String</see></b></param>
      <param name="subStyle">コレクションに追加する項目を表す<b><see cref="T:System.String,GrapeCity.Win.Editors.SubStyle">SubStyle</see></b>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <b>CollectionChanged</b> イベントを発生させます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="System.ComponentModel.CollectionChangeEventArgs">CollectionChangeEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.Remove(System.String)">
      <summary>コレクション内の指定のキー文字列に対応する項目を削除します。</summary>
      <param name="key">キー文字列を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SubStyleCollection.RemoveAt(System.Int32)">
      <summary>コレクションのインデックスで指定した項目を削除します。</summary>
      <param name="index">インデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton">
      <summary>記号ボタンクラスを表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Behavior">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />をクリックしたときの動作を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior" />列挙体。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" />は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" />をクリックしたときにスピンアップ動作が実行されることを意味し、<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" />は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton" nolink="true" />をクリックしたときにスピンダウン動作が実行されることを意味します。</value>
      <remarks>
        <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" />に設定すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Symbol" />プロパティは強制的に<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.Arrow" />に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.SymbolDirection" />プロパティは強制的に<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Up" />に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Interval" />プロパティは強制的に60に変更されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" />に設定すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Symbol" nolink="true" />プロパティは強制的に<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.Arrow" nolink="true" />に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.SymbolDirection" nolink="true" />プロパティは強制的に<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Down" />に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Interval" nolink="true" />プロパティは強制的に60に変更されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.None" />に設定すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Symbol" nolink="true" />プロパティは強制的に<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.None" />に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.SymbolDirection" nolink="true" />プロパティは強制的に<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Left" />に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Interval" nolink="true" />プロパティは強制的に0に変更されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Delay">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの繰り返しが始まるまでの遅延時間（ミリ秒単位）を取得または設定します。</summary>
      <value>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの繰り返しが始まるまでの遅延時間（ミリ秒単位）を示す<see cref="T:System.Int32" />値。デフォルト値は250です。</value>
      <remarks>値は0以上にする必要があります。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Interval" />プロパティが0の場合、スピンアクションは停止します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値が0未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Interval">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの発生間隔を取得または設定します。</summary>
      <value>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの発生間隔を示す<see cref="T:System.Int32" />値。デフォルト値は0です。</value>
      <remarks>値は0以上にする必要があります。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Interval" />プロパティが0の場合、スピンアクションは停止します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値が0未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.Symbol">
      <summary>表示するシンボルを取得または設定します。</summary>
      <value>描画される記号を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Symbols" /> オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.SymbolDirection">
      <summary>シンボルの表示方向を取得または設定します。</summary>
      <value>記号の方向を示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButton.SymbolDirection" />。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo">
      <summary>シンボルボタンを実装します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Behavior">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo" />をクリックしたときの動作を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior" />列挙体。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" />は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo" />をクリックしたときにスピンアップ動作が実行されることを意味し、<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" />は、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo" nolink="true" />をクリックしたときにスピンダウン動作が実行されることを意味します。</value>
      <remarks>
        <remarks>
          <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp" />に設定すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Symbol" />プロパティは<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.Arrow" />に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.SymbolDirection" />プロパティは<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Up" />に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Interval" />プロパティは60に変更されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" />に設定すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Symbol" nolink="true" />プロパティは<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.Arrow" nolink="true" />に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.SymbolDirection" nolink="true" />プロパティは<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Down" />に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Interval" nolink="true" />プロパティは60に変更されます。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown" nolink="true" />に設定すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Symbol" nolink="true" />プロパティは<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.None" />に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.SymbolDirection" nolink="true" />プロパティは<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Left" />に変更され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Interval" nolink="true" />プロパティは0に変更されます。 </remarks>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Delay">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの繰り返しが始まるまでの遅延時間（ミリ秒単位）を取得または設定します。</summary>
      <value>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの繰り返しが始まるまでの遅延時間（ミリ秒単位）を示す<see cref="T:System.Int32" />値。デフォルト値は250です。</value>
      <remarks>値は0以上にする必要があります。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.CheckOnClick" />プロパティが<see langword="true" />の場合、または<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval" />プロパティが0の場合、スピンアクションは停止します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値が0未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Interval">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの発生間隔を取得または設定します。</summary>
      <value>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBase.Click" />イベントの発生間隔を示す<see cref="T:System.Int32" />値。デフォルト値は0です。</value>
      <remarks>値は0以上にする必要があります。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.CheckOnClick" />プロパティが<see langword="true" />の場合、または<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.SideButtonInfo.Interval" />プロパティが0の場合、スピンアクションは停止します。</remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">値が0未満です。</exception>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.Symbol">
      <summary>表示するシンボルを取得または設定します。</summary>
      <value>描画される記号を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Symbols" /> オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.SymbolButtonInfo.SymbolDirection">
      <summary>シンボルの表示方向を取得または設定します。</summary>
      <value>記号の方向を示す <see cref="P:SymbolButton.SymbolDirection" />。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText">
      <summary>
        <b>TextBoxAlternateText</b>クラスを定義します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText.DisplayNull">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>DisplayNull</b> インスタンスを取得します。</summary>
      <value>
        <b>DisplayNull</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateText.Null">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>Null</b> インスタンスを取得します。</summary>
      <value>
        <b>Null</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateTextInfo">
      <summary>
        <b>TextBoxAlternateText</b>クラスを定義します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateTextInfo.DisplayNull">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>DisplayNull</b> インスタンスを取得します。</summary>
      <value>
        <b>DisplayNull</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TextBoxAlternateTextInfo.Null">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>Null</b> インスタンスを取得します。</summary>
      <value>
        <b>Null</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs">
      <summary>
        <b>TextChanging</b> イベントのイベントデータを格納します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs.#ctor(System.Boolean,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="cancel">変更アクションがキャンセルされるかどうかを示す<b>bool</b>値。</param>
      <param name="result">変更アクション後の結果を示す<b>string</b>値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs.Cancel">
      <summary>変更アクションがキャンセルされるかどうかを示す値を取得または設定します。</summary>
      <value>変更アクションがキャンセルされるかどうかを示す<b>bool</b>値。</value>
      <remarks>
        <b>Cancel</b>プロパティが<b>true</b>の場合、テキストは変更されません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventArgs.Result">
      <summary>テキストが変更された後の結果を示す値を取得します。</summary>
      <value>テキストが変更された後の結果を示す<b>string</b>値。</value>
      <remarks>
        <b>Result</b>は、変更された後のテキストを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText">
      <summary>
        <b>TimeSpanAlternateText</b>クラスを定義します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.DisplayNull">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>DisplayNull</b> インスタンスを取得します。</summary>
      <value>
        <b>DisplayNull</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.DisplayZero">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />型の<b>DisplayZero</b>インスタンスを取得します。</summary>
      <value>
        <b>DisplayZero</b>インスタンスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.Null">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>Null</b> インスタンスを取得します。</summary>
      <value>
        <b>Null</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateText.Zero">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />型の<b>Zero</b>インスタンスを取得します。</summary>
      <value>
        <b>Zero</b>インスタンスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo">
      <summary>
        <b>TimeSpanAlternateTextInfo</b>クラスを定義します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.DisplayNull">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>DisplayNull</b> インスタンスを取得します。</summary>
      <value>
        <b>DisplayNull</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.DisplayZero">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />型の<b>DisplayZero</b>インスタンスを取得します。</summary>
      <value>
        <b>DisplayEmptyEra</b>インスタンスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.Null">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 型の <b>Null</b> インスタンスを取得します。</summary>
      <value>
        <b>Null</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.Zero">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" />型の<b>Zero</b>インスタンスを取得します。</summary>
      <value>
        <b>EmptyEra</b> インスタンスを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AlternateText" /> 値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanAlternateTextInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanDisplayFieldCollectionInfo">
      <summary>
        <b>GcDateTimeCellType</b> の表示フィールドコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanDisplayFieldCollectionInfo.AddRange(System.String)">
      <summary>指定した書式文字列から作成された別の<see cref="T:IList&lt;TimeSpanDisplayFieldInfo&gt;" />の内容をコレクションの最後に追加します。</summary>
      <param name="format">指定した書式文字列を示す <b>string</b> 値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanDisplayFieldCollectionInfo.AddRange(System.String,System.Int32,System.Char,System.String,System.String,System.String,System.String)">
      <summary>指定した引数から作成された別の<see cref="T:IList&lt;TimeSpanDisplayFieldInfo&gt;" />の内容をコレクションの最後に追加します。</summary>
      <param name="pattern">書式のパターン文字列を示す<b>string</b>値。</param>
      <param name="decimalPlaces">GcTimeSpanセルに表示する小数点以下の桁数を示す<b>int</b>値。</param>
      <param name="decimalPoint">小数点を表す文字を示す<b>char</b>値。</param>
      <param name="positivePrefix">値が正のときに前に付加する文字列を示す<b>string</b>値。</param>
      <param name="positiveSuffix">値が正のときに後ろに付加する文字列を示す<b>string</b>値。</param>
      <param name="negativePrefix">値が負のときに前に付加する文字列を示す<b>string</b>値。</param>
      <param name="negativeSuffix">値が負のときに後ろに付加する文字列を示す<b>string</b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanDisplayFieldCollectionInfo.OnAddRange(System.Object[])">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素配列を挿入する前に、追加のカスタム処理を実行します。</summary>
      <param name="value">追加される<b><see cref="T:System.Object">Object</see></b>配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanDisplayFieldCollectionInfo.OnInsert(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素を挿入する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">値を挿入する位置の０から始まるインデックス。</param>
      <param name="value">インデックスにある要素の新しい値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanDisplayFieldCollectionInfo.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに値を設定する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">更新される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="oldValue">更新前の項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="newValue">指定したインデックスにある要素の新しい値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo">
      <summary>読み取り専用の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo" />オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.AddRange(System.String)">
      <summary>指定した書式文字列から作成された別の<see cref="T:IList&lt;TimeSpanField&gt;" />の内容をコレクションの最後に追加します。</summary>
      <param name="format">指定した書式文字列を示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.AddRange(System.String,System.Int32,System.Char,System.String,System.String,System.String,System.String)">
      <summary>指定した引数から作成された別の<see cref="T:IList&lt;TimeSpanField&gt;" />の内容をコレクションの最後に追加します。</summary>
      <param name="pattern">書式のパターン文字列を示す<see cref="T:System.String" />値。</param>
      <param name="decimalPlaces">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" />セルに表示する小数点以下の桁数を示す<see cref="T:System.Int32" />値。</param>
      <param name="decimalPoint">小数点を表す文字を示す<b>char</b>値。</param>
      <param name="positivePrefix">値が正のときに前に付加する文字列を示す<see cref="T:System.String" />値。</param>
      <param name="positiveSuffix">値が正のときに後ろに付加する文字列を示す<see cref="T:System.String" />値。</param>
      <param name="negativePrefix">値が正のときに前に付加する文字列を示す<see cref="T:System.String" />値。</param>
      <param name="negativeSuffix">値が正のときに後ろに付加する文字列を示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.OnAddRange(System.Object[])">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素配列を挿入する前に、追加のカスタム処理を実行します。</summary>
      <param name="value">追加される<b><see cref="T:System.Object">Object</see></b>配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.OnClear">
      <summary>項目をクリアする前にイベントリスナーをクリアします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.OnFieldPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.FieldPropertyChanged" />イベントを発生させます。</summary>
      <param name="e" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.OnInsert(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素を挿入する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">値を挿入する位置の０から始まるインデックス。</param>
      <param name="value">インデックスにある要素の新しい値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.OnRemoveComplete(System.Int32,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">削除される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">削除される項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TimeSpanFieldCollectionInfo.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに値を設定する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">更新される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="oldValue">更新前の項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="newValue">指定したインデックスにある要素の新しい値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar">
      <summary>タッチ操作によって表示される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" />を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.OnItemClicked(System.Windows.Forms.ToolStripItemClickedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.ToolStrip.ItemClicked" />イベントを発生させます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.Windows.Forms.ToolStripItemClickedEventArgs" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.Show(System.Drawing.Point)">
      <summary>ターゲットコントロールの位置を基準として<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" />を配置します。</summary>
      <param name="position">アタッチされたコントロールの左上隅の水平および垂直位置（ピクセル単位）。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.Show(System.Int32,System.Int32)">
      <summary>ターゲットコントロールの座標を基準として<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" />を配置します。</summary>
      <param name="x">アタッチされたコントロールに基づく水平座標（ピクセル単位）。</param>
      <param name="y">アタッチされたコントロールに基づく垂直座標（ピクセル単位）。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.Show(System.Drawing.Point,System.Windows.Forms.ToolStripDropDownDirection)">
      <summary>指定したコントロールの位置を基準として、ターゲットコントロールに対する指定した方向で<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" />を配置します。</summary>
      <param name="position">アタッチされたコントロールの左上隅の水平および垂直位置（ピクセル単位）。</param>
      <param name="direction">
        <see cref="T:System.Windows.Forms.ToolStripDropDownDirection" />値の1つ。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.Show(System.Windows.Forms.Control,System.Drawing.Point)">
      <summary>指定したコントロールの位置を基準として<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" />を配置します。</summary>
      <param name="control">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" />を配置する基準となるコントロール。</param>
      <param name="position">基準コントロールの左上隅の水平および垂直位置（ピクセル単位）。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.Show(System.Windows.Forms.Control,System.Int32,System.Int32)">
      <summary>指定したコントロールの位置を基準として<see cref="T:System.Windows.Forms.ToolBar" />を配置します。</summary>
      <param name="control">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" />を配置する基準となるコントロール。</param>
      <param name="x">基準コントロールに基づく水平座標（ピクセル単位）。</param>
      <param name="y">基準コントロールに基づく垂直座標（ピクセル単位）。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.ToolStripDropDownDirection)">
      <summary>指定した位置にある指定したコントロールを基準として、ターゲットコントロールに対する指定した方向で<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" />を配置します。</summary>
      <param name="control">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" />を配置する基準となるコントロール。</param>
      <param name="position">基準コントロールの左上隅の水平および垂直位置（ピクセル単位）。</param>
      <param name="direction">
        <see cref="T:System.Windows.Forms.ToolStripDropDownDirection" />値の1つ。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton">
      <summary>タッチデバイス用の<see cref="T:System.Windows.Forms.ToolStripButton" />を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton" />のインスタンスを作成します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton.#ctor(System.String,System.Drawing.Image)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton" />のインスタンスを作成します。</summary>
      <param name="text">ボタンのテキストを示します。</param>
      <param name="image">ボタンの画像を示します。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton.#ctor(GrapeCity.Win.Spread.InputMan.CellType.ITouchBarAction,System.String,System.Drawing.Image)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="action">クリックによって実行されるアクションを示します。</param>
      <param name="text">ボタンのテキストを示します。</param>
      <param name="image">ボタンの画像を示します。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton.Action">
      <summary>クリックによって実行されるアクションを取得します。</summary>
      <value>クリックによって実行される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ITouchBarAction" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton.Enabled">
      <summary>
        <see cref="T:System.Windows.Forms.ToolStripItem" />の親コントロールが有効かどうかを示す値を取得または設定します。</summary>
      <value>
        <see cref="T:System.Windows.Forms.ToolStripItem" />の親コントロールが有効な場合はtrue。それ以外の場合はfalse。デフォルト値はtrueです。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton.GetPreferredSize(System.Drawing.Size)">
      <summary>System.Windows.Forms.ToolStripButtonが収まる矩形領域のサイズを取得します。</summary>
      <param name="constrainingSize">System.Windows.Forms.ToolStripButtonの指定された領域。</param>
      <returns>矩形の幅と高さを表すSystem.Drawing.Size型オブジェクトの順序付きペア。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Weekdays">
      <summary>休業日設定（例：第２と第４の土曜日など）の対象となる曜日を指定します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Weekdays" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy)">
      <summary>指定した休日規則を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Weekdays" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="saturday">土曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />。</param>
      <param name="sunday">日曜日を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy[])">
      <summary>指定した休日規則を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Weekdays" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="daysOfWeek">週全体の休日規則を指定する<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />の配列。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.AllDaysOfWeek">
      <summary>すべての<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />設定を1つの配列で返します。</summary>
      <value>週の各曜日の休日規則を含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />の配列。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Friday">
      <summary>金曜日の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />を取得または設定します。</summary>
      <value>曜日の休日規則を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Item(System.DayOfWeek)">
      <summary>指定した曜日を使用して<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />オブジェクトを取得または設定します。</summary>
      <value>曜日の休日規則を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Monday">
      <summary>月曜日の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />を取得または設定します。</summary>
      <value>曜日の休日規則を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Saturday">
      <summary>土曜日の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />を取得または設定します。</summary>
      <value>曜日の休日規則を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Sunday">
      <summary>日曜日の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />を取得または設定します。</summary>
      <value>曜日の休日規則を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Thursday">
      <summary>木曜日の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />を取得または設定します。</summary>
      <value>曜日の休日規則を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Tuesday">
      <summary>火曜日の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />を取得または設定します。</summary>
      <value>曜日の休日規則を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Wednesday">
      <summary>水曜日の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />を取得または設定します。</summary>
      <value>曜日の休日規則を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />オブジェクト。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Weekdays.Clone">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Weekdays" /> オブジェクトのシャローコピーを作成します。</summary>
      <returns>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Weekdays" /> のシャローコピー。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle">
      <summary>曜日のスタイルを宣言します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle" /> のインスタンスを作成します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle,GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Weekdays" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="sunday">日曜日の表示スタイルを表す<b><see cref="T:GrapeCity.Win.Editors.DayOfWeekStyle">DayOfWeekStyle</see></b>オブジェクト。</param>
      <param name="monday">月曜日の表示スタイルを表す<b><see cref="T:GrapeCity.Win.Editors.DayOfWeekStyle">DayOfWeekStyle</see></b>オブジェクト。</param>
      <param name="tuesday">火曜日の表示スタイルを表す<b><see cref="T:GrapeCity.Win.Editors.DayOfWeekStyle">DayOfWeekStyle</see></b>オブジェクト。</param>
      <param name="wednesday">水曜日の表示スタイルを表す<b><see cref="T:GrapeCity.Win.Editors.DayOfWeekStyle">DayOfWeekStyle</see></b>オブジェクト。</param>
      <param name="thursday">木曜日の表示スタイルを表す<b><see cref="T:GrapeCity.Win.Editors.DayOfWeekStyle">DayOfWeekStyle</see></b>オブジェクト。</param>
      <param name="friday">金曜日の表示スタイルを表す<b><see cref="T:GrapeCity.Win.Editors.DayOfWeekStyle">DayOfWeekStyle</see></b>オブジェクト。</param>
      <param name="saturday">土曜日の表示スタイルを表す<b><see cref="T:GrapeCity.Win.Editors.DayOfWeekStyle">DayOfWeekStyle</see></b>オブジェクト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Friday">
      <summary>金曜日のスタイルを取得または設定します。</summary>
      <value>金曜日のスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Item(GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek)">
      <summary>指定したインデックスに従って<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" />を取得します。</summary>
      <value>指定したインデックスを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Monday">
      <summary>月曜日のスタイルを取得または設定します。</summary>
      <value>月曜日のスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Saturday">
      <summary>土曜日のスタイルを取得または設定します。</summary>
      <value>土曜日のスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Sunday">
      <summary>日曜日のスタイルを取得または設定します。</summary>
      <value>日曜日のスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Thursday">
      <summary>木曜日のスタイルを取得または設定します。</summary>
      <value>木曜日のスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Tuesday">
      <summary>火曜日のスタイルを取得または設定します。</summary>
      <value>火曜日のスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Wednesday">
      <summary>水曜日のスタイルを取得または設定します。</summary>
      <value>水曜日のスタイルを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Clone">
      <summary>この <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle" /> オブジェクトの同一コピーを作成します。</summary>
      <returns>このメソッドによって作成される<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle" />オブジェクトを返します。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.DayOfWeekStylePropertySubStylePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> オブジェクトの <b>SubStylePropertyChanged</b> イベントを処理します。</summary>
      <param name="sender">イベントの送信元を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="e">イベントデータを格納している<b><see cref="System.ComponentModel.PropertyChangedEventArgs">PropertyChangedEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.Dispose">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle" /> で使用されているリソースを解放します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.OnDayOfWeekStylePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" />オブジェクトのいずれかのプロパティが変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="T:System.EventArgs">EventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.OnDayOfWeekStylePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle" /> オブジェクトの <b>PropertyChanged</b> イベントを処理します。</summary>
      <param name="sender">イベントの送信元を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="e">イベントデータを格納している<b><see cref="System.ComponentModel.PropertyChangedEventArgs">PropertyChangedEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.OnDayOfWeekStyleSubStylePropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekStyle.SubStyle" />プロパティが変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="System.ComponentModel.PropertyChangedEventArgs">PropertyChangedEventArgs</see></b>。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdaysStyle" /> のいずれかのプロパティが変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを格納している<b><see cref="System.ComponentModel.PropertyChangedEventArgs">PropertyChangedEventArgs</see></b>。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat">
      <summary>YearMonthカレンダーの年および月の書式を表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat.#ctor">
      <summary>デフォルト値を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat" />クラスのインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat" />クラスのインスタンスを初期化します。</summary>
      <param name="yearFormat">年の書式を示す<see cref="T:System.String" />値。</param>
      <param name="monthFormat">月の書式を示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat.MonthFormat">
      <summary>月の書式を取得または設定します。</summary>
      <value>月の書式を示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat.YearFormat">
      <summary>年の書式を取得または設定します。</summary>
      <value>年の書式を示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat.Clone">
      <summary>オブジェクトの複製を返します。</summary>
      <returns>複製されたオブジェクトを表す<b><see cref="T:System.Object">Object</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>いずれかのプロパティが変更されたときに呼び出されます。</summary>
      <param name="e">イベントデータを含む<see cref="T:System.ComponentModel.PropertyChangedEventArgs" />値。</param>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.YearMonthFormat.PropertyChanged">
      <summary>オブジェクトのプロパティが変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel">
      <summary>このクラスは、矩形の 2D 境界線を記述するオブジェクトを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Bevel.#ctor(System.Drawing.Color,System.Int32,System.Int32,System.Int32)">
      <summary>指定した属性を使用して、新しい <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" /> インスタンスを初期化します。</summary>
      <param name="color">ベベルの背景を表す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Color" />。</param>
      <param name="width">ベベルの幅を示す <see cref="T:System.Int32" /> 値。</param>
      <param name="lightness">べベルの明るい部分の明るさを背景色に対する割合を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="darkness">べベルの影の部分の明るさを背景色に対する割合を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Color">
      <summary>背景色を取得または設定します。</summary>
      <value>ベベルの背景を表す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Color" />。<br />既定値は <see cref="P:System.Drawing.SystemColors.Control" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Darkness">
      <summary>ベベルの陰影色の計算に使用されるパーセントを取得または設定します。</summary>
      <value>陰影のパーセントを示す整数値（-100～100）。<br />デフォルト値は-25です。</value>
      <remarks>
        <para>このプロパティは、オブジェクトの色（<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Color" /> プロパティ）を使用してベベルの陰影色（パーセント単位）を計算します。</para>
        <para>０に設定した場合は、Color オブジェクトと同じ色が使用されます。正の値を設定すると Color より明るい色が使用され、負の値を設定すると Color より暗い色が使用されます。</para>
        <para>このプロパティを <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Lightness" /> プロパティと組み合わせて使用することで、ベベル色の明るさを細かく調整できます。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Default">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Color" /> 値が <see cref="P:System.Drawing.SystemColors.Control" /> に設定され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Width" /> 値が０、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Lightness" /> 値が 25、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Darkness" /> 値が -25 に設定された <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" /> オブジェクトを表します。</summary>
      <value>既定値のべベルを表す <b><see cref="T:GrapeCity.Win.Editors.Bevel">Bevel</see></b>オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Empty">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Color" /> 値が <see cref="F:System.Drawing.Color.Empty" /> に設定され、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Width" />、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Lightness" />、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Darkness" /> の値が０に設定された <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" /> オブジェクトを表します。</summary>
      <value>立体表示を行わないべベル設定を表す<b><see cref="T:GrapeCity.Win.Editors.Bevel">Bevel</see></b>オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Lightness">
      <summary>べベルの明るい部分の明るさを背景色に対する割合で設定します。</summary>
      <value>明るさのパーセントを示す整数値（-100 ～ 100）。<br />既定値は 25 です。</value>
      <remarks>
        <para>このプロパティは、オブジェクトの色（<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Color" /> プロパティ）を使用してベベルの明色（パーセント単位）を計算します。</para>
        <para>０に設定した場合は、Color オブジェクトと同じ色が使用されます。正の値を設定すると背景色より明るい色が使用され、負の値を設定すると背景色より暗い色が使用されます。</para>
        <para>このプロパティを <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Darkness" /> プロパティと組み合わせて使用することで、ベベル色の明るさを細かく調整できます。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Width">
      <summary>ベベルの幅を取得または設定します。</summary>
      <value>ベベルの幅を示す整数値。<br />デフォルト値は0です。</value>
      <remarks>
        <b>Width</b> プロパティに負の値を設定するとベベル効果が <b>Inset</b> になり、正の値を設定すると <b>Raised</b> になります。<b>Width</b> プロパティを０に設定すると、2D 効果が得られます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>オブジェクトの設定値に基づいて描画を実行します。</summary>
      <param name="graphics">描画に使用する<b><see cref="T:System.Drawing.Graphics">Graphics</see></b>オブジェクト。</param>
      <param name="rectangle">描画対象の矩形座標を表す<b><see cref="T:System.Drawing.Rectangle">Rectangle</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Bevel.Equals(System.Object)">
      <summary>指定したオブジェクトが現在のインスタンスと等しいかどうかを判断します。</summary>
      <param name="value">現在の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" /> と比較する <see cref="T:System.Object" />。</param>
      <returns>value が <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" /> のインスタンスで、このインスタンスの値と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Bevel.GetHashCode">
      <summary>オブジェクトのハッシュコードを返します。</summary>
      <returns>ハッシュコードを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Bevel.op_Equality(GrapeCity.Win.Spread.InputMan.CellType.Bevel,GrapeCity.Win.Spread.InputMan.CellType.Bevel)">
      <summary>指定した２つの <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" /> の値が等しいかどうかを判断します。</summary>
      <param name="value1">比較対照となる<b><see cref="T:GrapeCity.Win.Editors.Bevel">Bevel</see></b>オブジェクト。</param>
      <param name="value2">比較対照となる<b><see cref="T:GrapeCity.Win.Editors.Bevel">Bevel</see></b>オブジェクト。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>2つのオブジェクトは同一の設定内容です。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>2つのオブジェクトの設定内容は異なっています。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Bevel.op_Inequality(GrapeCity.Win.Spread.InputMan.CellType.Bevel,GrapeCity.Win.Spread.InputMan.CellType.Bevel)">
      <summary>2つのオブジェクトの設定内容が異なっているか、検証します。</summary>
      <param name="value1">最初の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" /> 値。</param>
      <param name="value2">２番目の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Bevel" /> 値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>2つのオブジェクトの設定内容は異なっています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>2つのオブジェクトは同一の設定内容です。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy">
      <summary>特定の週の曜日を休業日に設定するときに使用します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.#ctor(GrapeCity.Win.Spread.InputMan.CellType.WeekFlags,GrapeCity.Win.Spread.InputMan.CellType.HolidayOverride)">
      <summary>指定した <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.WeekFlags" /> と振替休日設定を使用して、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="weekFlags">休日として扱う週を表す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.WeekFlags" /> フラグ値。</param>
      <param name="overrideHoliday">すでに休日に設定されている日に休日が重なったときに、その休日を翌日に振り替える場合は<see langword="true" />。何もしない場合は<see langword="false" />。</param>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.Empty">
      <summary>プロパティが初期化されていない <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" /> 構造体を表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.IsEmpty">
      <summary>この<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy" />のすべてのプロパティが初期化されていないかどうかを示す値を取得します。</summary>
      <value>このプロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.WeekFlags" /> プロパティが <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.None" /> に設定されていて、なおかつ <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.Override" /> プロパティが <see langword="false" /> の場合は <see langword="true" /> を返し、それ以外の場合は <see langword="false" /> を返します。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.Override">
      <summary>休日が日曜日と重なった場合に翌日に振り替えるかどうかを取得または設定します。</summary>
      <value>休日を振り替える場合は<see langword="true" />。それ以外の場合は<see langword="false" />。デフォルト値は<see langword="false" />です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.WeekFlags">
      <summary>曜日の週ごとの休日情報を含む<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.WeekFlags" />列挙体を取得または設定します。</summary>
      <value>曜日の週ごとの休日情報を含む<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.WeekFlags" />列挙体。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekHolidayPolicy.IsHoliday(System.DateTime)">
      <summary>指定日が休業曜日に設定されているか、いないかを返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定日は休業曜日に設定されています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定日は休業曜日に設定されていません。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.IHoliday">
      <summary>休日設定の取得に必要なメソッドを定義します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.IHoliday.IsYearly">
      <summary>休日が毎年適用されるか、されないかを取得します。</summary>
      <value>この休日が毎年適用される場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.IHoliday.Name">
      <summary>休日の名称を取得または設定します。</summary>
      <value>休日の名称を表す<b><see cref="T:System.String">String</see></b>値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.IHoliday.IsHoliday(System.DateTime)">
      <summary>指定の日付がオブジェクトに関連付けられているかどうかを返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>指定された日付がオブジェクトに関連付けられています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>指定された日付はオブジェクトに関連付けられていません。</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.IHoliday.TypeOfDay(System.DateTime)">
      <summary>指定の日付の種類を返します。</summary>
      <param name="date">日付を示す<see cref="T:System.DateTime" />値。</param>
      <returns>日のタイプを表す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DayType" /> 列挙体。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.INamedObject">
      <summary>名前を持つオブジェクトを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.INamedObject.Name">
      <summary>オブジェクトの名前を取得または設定します。</summary>
      <value>オブジェクトの名前を示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ITouchBarAction">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarButton" />のクリックによって実行される操作。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ITouchBarAction.CanExecute(System.Object)">
      <summary>現在の状態でこのアクションを実行できるかどうかを判断するメソッドを定義します。</summary>
      <param name="target">このアクションを実行するターゲット<see cref="T:System.Object" />。</param>
      <returns>このアクションを実行できる場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.ITouchBarAction.Execute(System.Object)">
      <summary>指定したオブジェクトを実行します。</summary>
      <param name="target">このアクションを実行するターゲット<see cref="T:System.Object" />。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AllowSelection">
      <summary>選択できる日付のタイプを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSelection.Anyday">
      <summary>任意の日付を選択できることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSelection.Workday">
      <summary>営業日のみを選択できることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSelection.Holiday">
      <summary>休日と週末のみを選択できることを指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace">
      <summary>テキストで許可されるスペースの種類を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.None">
      <summary>スペース文字は許可されません。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.Narrow">
      <summary>半角スペース文字だけが許可されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.Wide">
      <summary>全角スペース文字だけが許可されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AllowSpace.Both">
      <summary>全角スペース文字と半角スペース文字の両方が許可されます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField" />に表示するパターンを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern.AmPmDesignator">
      <summary>
        <b>AMDesignator</b>あるいは<b>PMDesignator</b>に指定された文字列をすべて使用します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern.AbbreviatedAmPmDesignator">
      <summary>
        <b>AMDesignator</b>あるいは<b>PMDesignator</b>に指定された文字列の最初の1文字を使用します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment">
      <summary>中心要素に付加される要素を中心要素に対してどのように配置および位置揃えするかを指定します。</summary>
      <remarks>これは画像とテキストなどの2つの要素の間で相対的な位置揃えが必要なときに使用されます。要素が画像とテキストの場合は通常、テキストが中心要素、画像が付加要素になります。</remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.Left">
      <summary>付加要素が中心要素の左に配置されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.LeftTop">
      <summary>付加要素が中心要素の左に配置され、2つの要素の上端の垂直座標が同じになります。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.LeftMiddle">
      <summary>付加要素が中心要素の左に配置され、2つの要素の中心点の垂直座標が同じになります。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.LeftBottom">
      <summary>付加要素が中心要素の左に配置され、2つの要素の下端の垂直座標が同じになります。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.Top">
      <summary>付加要素が中心要素の上に配置されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.TopLeft">
      <summary>付加要素が中心要素の上に配置され、2つの要素の左端の水平座標が同じになります。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.TopCenter">
      <summary>付加要素が中心要素の上に配置され、2つの要素の中心点の水平座標が同じになります。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.TopRight">
      <summary>付加要素が中心要素の上に配置され、2つの要素の右端の水平座標が同じになります。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.Right">
      <summary>付加要素が中心要素の右に配置されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.RightTop">
      <summary>付加要素が中心要素の右に配置され、2つの要素の上端の垂直座標が同じになります。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.RightMiddle">
      <summary>付加要素が中心要素の右に配置され、2つの要素の中心点の垂直座標が同じになります。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.RightBottom">
      <summary>付加要素が中心要素の右に配置され、2つの要素の下端の垂直座標が同じになります。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.Bottom">
      <summary>付加要素が中心要素の下に配置されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.BottomLeft">
      <summary>付加要素が中心要素の下に配置され、2つの要素の左端の水平座標が同じになります。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.BottomCenter">
      <summary>付加要素が中心要素の下に配置され、2つの要素の中心点の水平座標が同じになります。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AttachAlignment.BottomRight">
      <summary>付加要素が中心要素の下に配置され、2つの要素の右端の水平座標が同じになります。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode">
      <summary>オートコンプリートの文字列マッチングモードを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.MatchStartWith">
      <summary>候補リスト内を大文字／小文字の区別なし、かつ文字種の区別ありの前方一致で検索します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.MatchAll">
      <summary>候補リスト内を大文字／小文字の区別なし、かつ文字種の区別ありの部分一致で検索します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.AmbiguousMatchStartWith">
      <summary>候補リスト内を大文字／小文字の区別なし、かつ文字種の区別なしの前方一致で検索します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.AmbiguousMatchAll">
      <summary>候補リスト内を大文字／小文字の区別なし、かつ文字種の区別なしの部分一致で検索します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.ExactMatchStartWith">
      <summary>候補リスト内を大文字／小文字の区別あり、かつ文字種の区別ありの前方一致で検索します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoCompleteMatchingMode.ExactMatchAll">
      <summary>候補リスト内を大文字／小文字の区別あり、かつ文字種の区別ありの部分一致で検索します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.AutoHideTouchKeyboard">
      <summary>ユーザーがドロップダウンウィンドウを開いたときのタッチキーボードの非表示動作オプションを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoHideTouchKeyboard.None">
      <summary>タッチキーボードを非表示にしません。ドロップダウンとタッチキーボードの両方が表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoHideTouchKeyboard.AutoHide">
      <summary>ドロップダウンウィンドウが表示されるとタッチキーボードは非表示になります。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.AutoHideTouchKeyboard.HideAndReshow">
      <summary>ドロップダウンウィンドウが表示されるとタッチキーボードは非表示になり、ドロップダウンウィンドウが閉じると再び表示されます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition">
      <summary>サイドボタンの位置を指定します。</summary>
      <remarks>この列挙体を使用して、両方のサイドボタンがコントロールの境界線の内側または外側にあるときのサイドボタンの位置を設定します。左または右の位置が列挙体で定義されています。</remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition.LeftInside">
      <summary>コントロールの内部左端に配置されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition.LeftOutside">
      <summary>サイドボタンは境界線外側の左側にあります。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition.RightInside">
      <summary>サイドボタンは境界線内側の右側にあります。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonPosition.RightOutside">
      <summary>サイドボタンは境界線外側の右側にあります。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ButtonVisibility">
      <summary>サイドボタンの表示方法を指定します。</summary>
      <remarks>この列挙体のメンバを使用して、スピンおよびドロップダウンボタンがいつ表示されるかを設定できます。</remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonVisibility.NotShown">
      <summary>表示されません。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonVisibility.ShowAlways">
      <summary>常に表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ButtonVisibility.ShowOnFocus">
      <summary>サイドボタンは、ボタンのコンテナーがフォーカスを取得したときに表示されます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CalendarNavigators">
      <summary>コントロールに表示されるナビゲータバーのタイプを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarNavigators.None">
      <summary>ナビゲータバーが表示されないことを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarNavigators.Buttons">
      <summary>ボタンスタイルのナビゲータバーが表示されることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarNavigators.ScrollBar">
      <summary>スクロールバースタイルのナビゲータバーが表示されることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarNavigators.Outlook">
      <summary>Outlookスタイルのナビゲータバーが表示されることを指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CalendarType">
      <summary>カレンダーの形式を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarType.MonthDay">
      <summary>月と日を含むカレンダーを表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarType.YearMonth">
      <summary>年と月を含むカレンダーを表示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CalendarYear">
      <summary>カレンダーの<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarType.YearMonth" />表示タイプを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarYear.Normal">
      <summary>カレンダーを暦年度の形式で表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CalendarYear.Fiscal">
      <summary>カレンダーを会計年度の形式で表示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxState">
      <summary>キャラクターボックスの状態を示す列挙体。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxState.Normal">
      <summary>キャラクターボックスが通常の状態にあることを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxState.Selected">
      <summary>キャラクターボックスが選択されていることを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxState.Inactive">
      <summary>キャラクターボックスがアクティブでないことを示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.CharBox" />のスタイルを表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.Normal">
      <summary>完全なキャラクターボックスが表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.BottomHalf">
      <summary>キャラクターボックスの下半分のみが表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.BottomQuarter">
      <summary>キャラクターボックスの下四分の一のみが表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.TopHalf">
      <summary>キャラクターボックスの上半分のみが表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.TopQuarter">
      <summary>キャラクターボックスの上四分の一のみが表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharBoxStyle.LeftRightSide">
      <summary>ボックスの左側と右側のみが表示されます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcCharMask" />の入力方向を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection.LeftToRight">
      <summary>入力方向が左から右であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CharMaskInputDirection.RightToLeft">
      <summary>入力方向が右から左であることを示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ClipContent">
      <summary>クリップボード内のリテラルをどのように扱うかを指定します。</summary>
      <remarks>テキストを挿入または置き換えるとき、リテラルを含めるか除外するかを指定できます。</remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.IncludeLiterals">
      <summary>リテラルを含めることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ClipContent.ExcludeLiterals">
      <summary>リテラルを除外することを指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode">
      <summary>CrLf文字の処理方法を表すCrLfモードを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode.NoControl">
      <summary>文字列をコピー、切り取り、または貼り付けるときにすべてのCrLf文字を受け入れます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode.Filter">
      <summary>文字列をコピー、切り取り、または貼り付けるときにすべてのCrLf文字を削除します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.CrLfMode.Cut">
      <summary>文字列をコピー、切り取り、または貼り付けるときに最初のCrLf文字以降の文字列を切り捨てます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType">
      <summary>データの表示モードを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType.Text">
      <summary>項目をテキストとして表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DataDisplayType.Image">
      <summary>項目を画像として表示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateDropDownType">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" />のドロップダウン要素のタイプを表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DateDropDownType.Calendar">
      <summary>ドロップダウンカレンダーをドロップダウンウィンドウに表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DateDropDownType.Picker">
      <summary>ドロップダウンピッカーをドロップダウンウィンドウに表示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DateSpinMode">
      <summary>スピンの動作モードを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DateSpinMode.Field">
      <summary>フィールドを使用してスピンすることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DateSpinMode.Value">
      <summary>指定したフィールドの値を使用してスピンすることを指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek">
      <summary>曜日を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.NotSet">
      <summary>曜日が定義されていないことを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.Sunday">
      <summary>日曜日</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.Monday">
      <summary>月曜日</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.Tuesday">
      <summary>火曜日</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.Wednesday">
      <summary>水曜日</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.Thursday">
      <summary>木曜日</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.Friday">
      <summary>金曜日</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeek.Saturday">
      <summary>土曜日</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags">
      <summary>曜日のフラグを表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.NotSet">
      <summary>曜日は設定されていません。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.Sunday">
      <summary>日曜日</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.Monday">
      <summary>月曜日</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.Tuesday">
      <summary>火曜日</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.Wednesday">
      <summary>水曜日</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.Thursday">
      <summary>木曜日</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.Friday">
      <summary>金曜日</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.Saturday">
      <summary>土曜日</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekFlags.All">
      <summary>すべての曜日に設定を適用します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags">
      <summary>月の曜日フラグを表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.NotSet">
      <summary>月の曜日は設定されていません。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.First">
      <summary>第1週目に設定を適用します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.Second">
      <summary>第2週目に設定を適用します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.Third">
      <summary>第3週目に設定を適用します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.Fourth">
      <summary>第4週目に設定を適用します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.Fifth">
      <summary>第5週目に設定を適用します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.Last">
      <summary>最後の週に設定を適用します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayOfWeekInMonthFlags.All">
      <summary>月のすべての指定曜日。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DayType">
      <summary>日のタイプ（営業日や休日など）を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Normal">
      <summary>休日ではない通常の日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.Holiday">
      <summary>毎年繰り返される休日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.ForcedWorkday">
      <summary>本来休日である特定の日に設定された営業日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.ForcedHoliday">
      <summary>特定の日に適用される休日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.OverriddenHoliday">
      <summary>休日が週末に重なったために自動的に翌日に振り替えられた休日を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DayType.DayOfWeekHoliday">
      <summary>月、週、曜日を指定して設定された休日であることを示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat">
      <summary>サポートされている書式を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat.DBNum1_G">
      <summary>簡体字漢字の数字と単位。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat.DBNum2_G">
      <summary>繁体字漢字の数字と単位。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat.DBNum3_G">
      <summary>アラビア数字と簡体字漢字の単位。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat.DBNum4_G">
      <summary>簡体字漢字の数字と単位。10進数と単位の漢字での表示をサポートします。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalMode">
      <summary>数値の小数部の処理モードを表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalMode.Filter">
      <summary>小数点が削除されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalMode.Cut">
      <summary>小数部を切り捨てて、整数部の値のみを保持します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DisplayAlignment">
      <summary>テキストの均等割り付けの形式を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DisplayAlignment.None">
      <summary>水平方向の配置効果を適用しないことを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DisplayAlignment.Distributed">
      <summary>文字を均等に割り付けることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DisplayAlignment.DistributedWithWhiteSpace">
      <summary>空白を空けて文字を均等に割り付けることを指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation">
      <summary>ドロップダウンウィンドウ開閉の際のアニメーションの様式を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.None">
      <summary>アニメーションなしを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.Scroll">
      <summary>スクロールアニメーションを行います。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.Slide">
      <summary>スライドアニメーションを行います。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.Fade">
      <summary>フェードアニメーションを行います。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.Center">
      <summary>ウィンドウの中心を基点に拡大あるいは縮小するアニメーションを行います。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.Extend">
      <summary>ウィンドウの一角を基点とし、拡大・縮小するアニメーションを行います。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownAnimation.Drag">
      <summary>ウィンドウの一角を基点とし、ウィンドウを引出あるいは収納するアニメーションを行います。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection">
      <summary>ドロップダウンウィンドウの表示方向を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.AboveLeft">
      <summary>左上に表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.AboveRight">
      <summary>右上に表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.BelowLeft">
      <summary>左下に表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.BelowRight">
      <summary>右下に表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.Left">
      <summary>左に表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.Right">
      <summary>右に表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.Default">
      <summary>入れ子になったドロップダウンコントロールを考慮し、<see cref="T:System.Windows.Forms.RightToLeft" /> の設定に応じて、<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.Left" /> または <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DropDownDirection.Right" /> を指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.EditMode">
      <summary>編集モードを指定します。</summary>
      <remarks>この列挙体のメンバを使用して、エディタの挿入または上書きモードを制御します。</remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditMode.Insert">
      <summary>
        <b>挿入</b>モードを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditMode.Overwrite">
      <summary>
        <b>上書き</b>モードを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditMode.FixedInsert">
      <summary>固定<b>挿入</b>モードを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditMode.FixedOverwrite">
      <summary>固定<b>上書き</b>モードを示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.EditorBaseFocusCursorPosition">
      <summary>編集コントロールがフォーカスを受け取るときのポインタの位置を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditorBaseFocusCursorPosition.Inherit">
      <summary>位置はエディタのタイプと選択ポリシーによって決定されることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditorBaseFocusCursorPosition.MouseLocation">
      <summary>テキストを選択せずに、ポインタをポインタデバイスの位置に配置します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditorBaseFocusCursorPosition.FirstInputPosition">
      <summary>テキストを選択せずに、ポインタをコントロール内の最初の入力位置に配置します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditorBaseFocusCursorPosition.End">
      <summary>テキストを選択せずに、ポインタをコントロールのテキストの末尾に配置します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EditorBaseFocusCursorPosition.SelectAll">
      <summary>ポインタをコントロールのテキストの先頭に配置します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode">
      <summary>省略記号モードを定義する列挙体を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode.None">
      <summary>省略記号によるトリミングをしないことを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode.EllipsisEnd">
      <summary>文字列の末尾を文字単位でトリミングすることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EllipsisMode.EllipsisPath">
      <summary>文字列の中央部分を文字単位でトリミングすることを指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.EmptyRows">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> に空白週の行がどのように表示されるかを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EmptyRows.StartEmpty">
      <summary>空白行が先頭に表示されることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EmptyRows.AllAtEnd">
      <summary>すべての空白行が末尾に表示されることを指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.EraPattern">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField" />に表示するパターンを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EraPattern.EraName">
      <summary>完全な年号名を表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EraPattern.AbbreviatedEraName">
      <summary>年号の短縮名を表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.EraPattern.Symbol">
      <summary>記号を表示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys">
      <summary>コントロールがフォーカスを失う原因となったキーを指定します。</summary>
      <remarks>この列挙体変数は、フォーカスを失う原因となったキー、複合キー、またはショートカットキーを示します。</remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.Tab">
      <summary>
        <b>［Tab］</b>キーの押下</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.ShiftTab">
      <summary>
        <b>［Shift］</b>＋<b>［Tab］</b>キーの押下</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.NextControl">
      <summary>
        <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut.NextControl" /> キーアクションに設定されたショートカットキーを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.PreviousControl">
      <summary>
        <see cref="M:GrapeCity.Win.Spread.InputMan.CellType.GcShortcut.PreviousControl" /> キーアクションに設定されたショートカットキーを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.Right">
      <summary>
        <b>［→］</b>キーの押下</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.Left">
      <summary>
        <b>［←］</b>キーの押下</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.CtrlRight">
      <summary>
        <b>［Ctrl］</b>+<b>［→］</b>キーの押下</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.CtrlLeft">
      <summary>
        <b>［Ctrl］</b>+<b>［←］</b>キーの押下</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitKeys.CharInput">
      <summary>フィールドの最後の文字が入力されたことを示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ExitOnLeftRightKey">
      <summary>［←］キーまたは［→］キーのアクションを指定します。</summary>
      <remarks>キャレットが左端または右端にあるときに［←］キーまたは［→］キーを押すと、フォーカスが失われます。</remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitOnLeftRightKey.None">
      <summary>アクションなしを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitOnLeftRightKey.Left">
      <summary>コントロールの最初の文字の位置で［←］キーまたは［Ctrl］+［←］キーを押したときに前のコントロールに移動することを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitOnLeftRightKey.Right">
      <summary>コントロールの最後の文字の位置で［→］キーまたは［Ctrl］+［→］キーを押したときに次のコントロールに移動することを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ExitOnLeftRightKey.Both">
      <summary>コントロールの最初/最後の文字の位置で［←］/［→］キーまたは［Ctrl］+［←］/［Ctrl］+［→］キーを押したときに前/次のコントロールに移動することを指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditMode">
      <summary>フィールド編集モードを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditMode.LeftSide">
      <summary>各フィールドの左側から入力することを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditMode.RightSide">
      <summary>各フィールドの右側から入力することを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditMode.Unfixed">
      <summary>フィールドに空のプロンプト文字を表示しないことを指定します。ただし、フィールドの幅は固定されます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorFocusCursorPosition">
      <summary>編集コントロールがフォーカスを受け取るときのポインタの位置を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorFocusCursorPosition.Inherit">
      <summary>位置はエディタのタイプと選択ポリシーによって決定されることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorFocusCursorPosition.MouseLocation">
      <summary>テキストを選択せずに、ポインタをポインタデバイスの位置に配置します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorFocusCursorPosition.SelectFieldOfMouseLocation">
      <summary>ポインタをポインタデバイスの位置に配置し、入力フィールドを選択します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorFocusCursorPosition.FirstInputPosition">
      <summary>テキストを選択せずに、ポインタをコントロール内の最初の入力位置に配置します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorFocusCursorPosition.End">
      <summary>テキストを選択せずに、ポインタをコントロールのテキストの末尾に配置します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FieldsEditorFocusCursorPosition.SelectAll">
      <summary>ポインタをコントロールのテキストの先頭に配置します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FilterMatchingSource">
      <summary>フィルタの実行時にマッチングするソースを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FilterMatchingSource.AllSubItems">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.ListItem.SubItems" />に含まれるすべての<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubItem" />をフィルタ文字列とマッチングします。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FilterMatchingSource.ControlText">
      <summary>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcComboBox.Text" />をフィルタ文字列とマッチングします。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx">
      <summary>コントロールの外観を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Flat">
      <summary>コントロールがフラットな外観で表示されることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Popup">
      <summary>コントロールがフラットな外観で表示され、マウスポインタを合わせると3Dの外観になることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Standard">
      <summary>コントロールが3Dで表示されることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.System">
      <summary>コントロールの外観がユーザーのオペレーティングシステムによって決定されることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.ActiveFlat">
      <summary>コントロールがアクティブなフラットスタイルを使用することを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Professional">
      <summary>コントロールがOffice XPの外観スタイルを使用することを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Office2007Blue">
      <summary>コントロールがOffice 2007の青の外観スタイルを使用することを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Office2007Black">
      <summary>コントロールがOffice 2007の黒の外観スタイルを使用することを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FlatStyleEx.Office2007Silver">
      <summary>コントロールがOffice 2007の銀色の外観スタイルを使用することを指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.FocusRectangle">
      <summary>フォーカス枠の外観を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FocusRectangle.Normal">
      <summary>選択インジケーターをフォーカス矩形として表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FocusRectangle.Box">
      <summary>選択インジケーターをボックスとして表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FocusRectangle.ThreeD">
      <summary>選択インジケーターを3D（反転）として表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.FocusRectangle.FlatButton">
      <summary>フォーカスのある項目にマウスを合わせたときに選択インジケーターを3Dとして表示し、それ以外のときはフラットで表示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditorValue">
      <summary>GcComboBoxCellTypeの選択項目のデータモデルに何が書き出されるかを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditorValue.Text">
      <summary>[0] GcComboBoxの選択されているテキストをモデルに書き込みます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditorValue.Index">
      <summary>[1] GcComboBoxの選択されているインデックスをモデルに書き込みます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GcComboBoxEditorValue.Value">
      <summary>[2] GcComboBoxの選択されている値をモデルに書き込みます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection">
      <summary>グラデーション効果の方向を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection.NotSet">
      <summary>デフォルト方向。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection.Forward">
      <summary>順方向</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection.Backward">
      <summary>逆方向</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection.Center">
      <summary>中心方向</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientDirection.Side">
      <summary>側方方向</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle">
      <summary>グラデーション効果のスタイルを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.Horizontal">
      <summary>水平スタイル。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.Vertical">
      <summary>垂直スタイル。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.DiagonalUp">
      <summary>diagonalUpスタイル。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.DiagonalDown">
      <summary>diagonalDownスタイル。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.CornerUp">
      <summary>cornerUpスタイル。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.CornerDown">
      <summary>cornerDownスタイル。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.Circular">
      <summary>円スタイル。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.Rectangular">
      <summary>四角形スタイル。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.GradientStyle.Elliptical">
      <summary>楕円スタイル。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.HighlightText">
      <summary>コントロールが選択されたときにどのように強調表示するかを指定します。</summary>
      <remarks>フォーカスを受け取った後のエディタの状態は、何も強調表示されない、特定のフィールドが強調表示される、すべてのテキストが強調表示される、のいずれかになります。</remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.None">
      <summary>強調表示しないことを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.Field">
      <summary>指定されたフィールドを強調表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.HighlightText.All">
      <summary>すべてのテキストを強調表示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.HolidayOverride">
      <summary>休日がすでに休日として指定されている日に重なった場合にその休日をどのように処理するかを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.HolidayOverride.None">
      <summary>休日が日曜日と重なっても翌日に振り替えません。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.HolidayOverride.NextDay">
      <summary>休日が日曜日と重なった場合は、翌日を休日とします。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.HolidayOverride.NextWorkDay">
      <summary>休日が日曜日と重なった場合は、次の営業日を休日とします。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Hour12Mode">
      <summary>12時間モードのタイプを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Hour12Mode.Hour12As0">
      <summary>12時間モードの範囲は00:00:00～11:59:59です。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Hour12Mode.Hour0As12">
      <summary>12時間モードの範囲は01:00:00～12:59:59です。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.InputStatus">
      <summary>フィールドのステータスを表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.InputStatus.Empty">
      <summary>入力は一切行われていません。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.InputStatus.Part">
      <summary>入力途中であり、まだ入力が完了していません。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.InputStatus.Full">
      <summary>入力が完了しました。</summary>
      <remarks>Fullのフィールドステータスは、フィールドが入力を受け入れられないことを意味するとは限りません。フィールドのステータスがFullであっても、まだその最大限度には達しておらず、入力を受け入れられる場合があります。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups">
      <summary>キーグループを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups.NumKeys">
      <summary>数値入力キーを表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups.MemoryKeys">
      <summary>メモリ操作キーを表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups.MathKeys">
      <summary>演算操作キーを表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups.ResetKeys">
      <summary>リセットキーを表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups.EditKeys">
      <summary>編集用のキーを表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups.Output">
      <summary>出力用のキーを表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.KeyGroups.Indicator">
      <summary>インジケーターキーを表します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.LengthUnit">
      <summary>文字数のカウント方法を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LengthUnit.Char">
      <summary>文字列の長さを計算するときの計算単位が.NET文字であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LengthUnit.Byte">
      <summary>文字列の長さを計算するときの計算単位がバイトであることを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LengthUnit.TextElement">
      <summary>文字列の長さを計算するときの計算単位がTextElmentであることを示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.LineStyle">
      <summary>罫線のスタイルを設定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.None">
      <summary>線がないことを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Dotted">
      <summary>点で構成された線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Dashed">
      <summary>ダッシュで構成された線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.DashDotDot">
      <summary>ダッシュ、点、点の繰り返しパターンで構成された線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.DashDot">
      <summary>ダッシュ、点の繰り返しパターンで構成された線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Hair">
      <summary>Dashedよりも間隔が50パーセント狭い破線スタイルの線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Single">
      <summary>単線</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Double">
      <summary>1ピクセル幅の2本の実線の間に1ピクセル幅の空白線が挟まれた、3ピクセル幅の線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Thick">
      <summary>3ピクセル幅の実線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Inset">
      <summary>くぼんだ線を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.LineStyle.Raised">
      <summary>浮き上がった線を指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior">
      <summary>入力中に無効なデータがあるときに<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime.Value">GcDateTime.Value</see>、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcNumber.Value">GcNubmer.Value</see>、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan.Value">GcTimeSpan.Value</see>、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcDate.Value">GcDate.Value</see>、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.GcTime.Value">GcTime.Value</see>の各プロパティをどのように処理するかを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.AdjustToMaxMin">
      <summary>最小値から最大値までの有効な範囲に値を調整します。</summary>
      <remarks>値が最小値より小さい場合は、最小値に調整します。値が最大値より大きい場合は、最大値に調整します。</remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.Clear">
      <summary>値を<see langword="null" />にクリアします。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.Restore">
      <summary>バックアップ値を指定したプロパティに復元します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.CancelInput">
      <summary>最後の入力を取り消して元のテキストを保持します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MaxMinBehavior.Keep">
      <summary>最後の入力を残して元のテキストを保持します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags">
      <summary>休日等の設定を適用する月を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.NotSet">
      <summary>月の値は設定されていません。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.January">
      <summary>1月を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.February">
      <summary>2月を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.March">
      <summary>3月を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.April">
      <summary>4月を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.May">
      <summary>5月を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.June">
      <summary>6月を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.July">
      <summary>7月を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.August">
      <summary>8月を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.September">
      <summary>9月を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.October">
      <summary>10月を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.November">
      <summary>11月を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.December">
      <summary>12月を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthFlags.All">
      <summary>すべての月を表します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern">
      <summary>表示するパターンを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern.MonthName">
      <summary>完全な月名を表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern.AbbreviatedMonthName">
      <summary>月の短縮名を表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern.Number">
      <summary>数字を表示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Months">
      <summary>月を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.Default">
      <summary>月が定義されていないことを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.January">
      <summary>1月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.February">
      <summary>2月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.March">
      <summary>3月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.April">
      <summary>4月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.May">
      <summary>5月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.June">
      <summary>6月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.July">
      <summary>7月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.August">
      <summary>8月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.September">
      <summary>9月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.October">
      <summary>10月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.November">
      <summary>11月を示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Months.December">
      <summary>12月を示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NavigatorOrientation">
      <summary>ナビゲータを表示する位置を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.NavigatorOrientation.Left">
      <summary>カレンダーの左側にナビゲーションバーを配置することを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.NavigatorOrientation.Top">
      <summary>カレンダーの上部にナビゲーションバーを配置することを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.NavigatorOrientation.Right">
      <summary>カレンダーの右側にナビゲーションバーを配置することを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.NavigatorOrientation.Bottom">
      <summary>カレンダーの下部にナビゲーションバーを配置することを指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.NumberSpinMode">
      <summary>数値スピンモードを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.NumberSpinMode.Field">
      <summary>フィールドによってスピンします。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.NumberSpinMode.Value">
      <summary>指定したフィールドの値によってスピンします。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.NumberSpinMode.Digits">
      <summary>桁によってスピンします。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode">
      <summary>パスワード保護エディタで入力したパスワードを可視化するモードを表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode.None">
      <summary>入力したパスワードを可視化しません。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode.ShowEyeButton">
      <summary>目のボタンを表示し、これをクリックしたときに入力したパスワードを可視化します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PasswordRevelationMode.ShowLastTypedChar">
      <summary>最後に入力した文字を短時間だけ表示した後、パスワード文字で隠します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.PickDays">
      <summary>使用する<b>PickDays</b>のタイプを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PickDays.NormalDay">
      <summary>現在の月の日のみを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PickDays.TrailingDay">
      <summary>ビュー内の隣接日を含めることを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PickDays.MinMaxDay">
      <summary>最小または最大の日を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PickerDisplayOptions.Both">
      <summary>両方</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PickerDisplayOptions.DatePicker">
      <summary>日付ピッカー</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.PickerDisplayOptions.TimePicker">
      <summary>時刻ピッカー</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ReflectTitle">
      <summary>曜日タイトルに曜日の<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SubStyle" />を適用する方法を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ReflectTitle.None">
      <summary>タイトルに反映しないことを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ReflectTitle.BackColor">
      <summary>曜日タイトルに背景色を反映させます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ReflectTitle.ForeColor">
      <summary>曜日タイトルにテキストの色を反映させます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ReflectTitle.Both">
      <summary>曜日タイトルにテキストの色と背景色の両方を反映させます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.RoundPattern">
      <summary>指定した数値の端数処理を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.RoundPattern.Ceiling">
      <summary>数値が他の2つの数値の間にあるとき、指定した数値以上の最小の整数に切り上げます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.RoundPattern.Floor">
      <summary>数値が他の2つの数値の間にあるとき、指定した数値以下の最大の整数に切り捨てます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.RoundPattern.MidpointRoundAwayFromZero">
      <summary>数値が他の2つの数値の間にあるとき、ゼロから遠い方の最も近い数値に丸めます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.RoundPattern.MidpointRoundToEven">
      <summary>数値が他の2つの数値の間にあるとき、最も近い偶数に丸めます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode">
      <summary>スクロールバーの表示方法を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Fixed">
      <summary>スクロールバーが常に表示されることを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollBarMode.Automatic">
      <summary>内容が範囲を超えたときにスクロールバーが表示されることを指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment">
      <summary>スクロールチップをドロップダウンカレンダーのどこに配置するかを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment.Default">
      <summary>スクロールチップは、スクロールボックスの位置に合わせて自動的に配置されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment.TopLeft">
      <summary>スクロールチップは、ナビゲータが左右のどちらかにあればコントロールの上部に、ナビゲータが上下のどちらかにあればコントロールの 左側に、それぞれナビゲータと隣接するように表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment.BottomRight">
      <summary>スクロールチップは、ナビゲータが左右のどちらかにあればコントロールの下部に、ナビゲータが上下のどちらかにあればコントロールの 右側に、それぞれナビゲータと隣接するように表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ScrollTipAlignment.Center">
      <summary>スクロールチップは、ナビゲータの中央に隣接するように表示されます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownPicker" />の選択レンダリングモードを表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode.Border">
      <summary>選択された行の周囲に境界線を表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode.Fill">
      <summary>選択された行の背景を塗りつぶします。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SelectionRenderMode.BorderWithFill">
      <summary>選択された行の背景を塗りつぶし、その周囲に境界線を表示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape">
      <summary>区切り記号の形状を示す列挙体を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape.Circle">
      <summary>区切り記号が円であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SeparatorShape.Rectangle">
      <summary>区切り記号が四角形であることを示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals">
      <summary>ユーザー入力時にリテラルをどのように表示するかを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.Always">
      <summary>リテラル文字列が常に表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.PostDisplay">
      <summary>次のフィールドに最初の文字が入力された瞬間に、リテラル文字列が挿入されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ShowLiterals.PreDisplay">
      <summary>１つ前のフィールドに最後の文字が入力された瞬間に、リテラル文字が追加されます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />をクリックしたときに使用される動作を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.None">
      <summary>動作を指定しません。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinUp">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />はスピンアップ動作を実行します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SideButtonBehavior.SpinDown">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.SideButton" />はスピンダウン動作を実行します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SignState">
      <summary>符号のタイプを表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.None">
      <summary>符号がないことを表します（たとえば、value == <see langword="null" />）。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.Positive">
      <summary>値が正であることを表します（たとえば、value = +0）。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.Negative">
      <summary>値が負であることを表します（たとえば、value = -0）。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection">
      <summary>記号の表示方向を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Left">
      <summary>左方向を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Up">
      <summary>上方向を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Right">
      <summary>右方向を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.SymbolDirection.Down">
      <summary>下方向を指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Symbols">
      <summary>便利な記号を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.None">
      <summary>（なし）</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.Arrow">
      <summary>矢印を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ArrowUnderline">
      <summary>下線が付いた矢印を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ArrowDoubleUnderline">
      <summary>二重の下線が付いた矢印を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ArrowThickUnderline">
      <summary>太い下線が付いた矢印を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ArrowOverline">
      <summary>上線が付いた矢印を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ArrowDoubleOverline">
      <summary>二重の上線が付いた矢印を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ArrowThickOverline">
      <summary>太い上線が付いた矢印を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.DoubleArrow">
      <summary>二重の矢印を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.Dot">
      <summary>点を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ZoomIn">
      <summary>ズームイン記号を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Symbols.ZoomOut">
      <summary>ズームアウト記号を指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TabAction">
      <summary>
        <b>［Tab］</b>キーをコントロール間またはフィールド間のどちらのフォーカス移動に使用するかを取得または設定します。</summary>
      <remarks>［Tab］キーは、コントロール間またはフィールド間でフォーカスを移動します。</remarks>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Control">
      <summary>
        <b>［Tab］</b>キーまたは<b>［Shift］+［Tab］</b>キーは、フォーカスを前後のコントロールに移動します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TabAction.Field">
      <summary>コントロールのフィールド間でカーソル位置を移動します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode">
      <summary>タブ文字の処理方法を表すタブ文字モードを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode.NoControl">
      <summary>文字列をコピー、切り取り、または貼り付けるときにすべてのタブ文字を受け入れます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode.Filter">
      <summary>文字列をコピー、切り取り、または貼り付けるときにすべてのタブ文字を除去します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TabCharMode.Cut">
      <summary>文字列をコピー、切り取り、または貼り付けるときに最初のタブ文字以降の文字列を切り捨てます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Templates">
      <summary>テンプレートのスタイルを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Templates.Outlook">
      <summary>Outlookスタイルを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Templates.MonthCalendar">
      <summary>MonthCalendarスタイルを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.Templates.System">
      <summary>Systemスタイルを指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle">
      <summary>何が表示されるかを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.TextOnly">
      <summary>テキストのみが表示され、画像領域は空白になります。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.ImageOnly">
      <summary>画像のみが表示されます。この場合は編集できません。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextBoxStyle.Both">
      <summary>画像とテキストの両方が表示されます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TextEffect">
      <summary>グラフィック面でのテキストの描画効果（フラットや3Dなど）を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextEffect.Flat">
      <summary>3D効果なしでテキストを描画します（デフォルト）。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextEffect.Inset">
      <summary>キャプションテキストは、強くくぼんで表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextEffect.Raised">
      <summary>キャプションテキストは、強く浮き出して表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextEffect.InsetLite">
      <summary>キャプションテキストは、くぼんで表示されます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TextEffect.RaisedLite">
      <summary>キャプションテキストは、浮き出して表示されます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions">
      <summary>ターゲットコントロールをタッチ/タップしたときの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" />の表示方法を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions.None">
      <summary>タッチデバイスによって<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" />は表示されません。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions.PressAndHold">
      <summary>長押ししたときに<see cref="P:System.Windows.Forms.Control.ContextMenu" />または<see cref="P:System.Windows.Forms.Control.ContextMenuStrip" />の代わりに<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" />を表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions.TapSelection">
      <summary>ターゲットコントロールの選択領域をタップしたときに<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" />を表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBarDisplayOptions.TapGripper">
      <summary>グリッパーをタップしたときに<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.TouchToolBar" />を表示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateMode">
      <summary>入力の検証タイプを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateMode.ValidateNone">
      <summary>検証モードなし。各フィールドが個別に動作します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateMode.Validate">
      <summary>通常検証モード。各フィールドが個別にチェックされます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx">
      <summary>入力検証タイプを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateNone">
      <summary>検証モードなしを指定します。各フィールドが個別に動作します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.Validate">
      <summary>通常検証モードを指定します。各フィールドが個別にチェックされます。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValidateModeEx.ValidateEx">
      <summary>拡張検証モードを指定します。必要に応じて調整します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl">
      <summary>値の符号を決定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.NoControl">
      <summary>値の符号を制御しないことを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Positive">
      <summary>値を正に維持することを示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.ValueSignControl.Negative">
      <summary>値を負に維持することを示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.VerticalFlags">
      <summary>垂直線の描画する部分を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.VerticalFlags.HeaderOnly">
      <summary>ヘッダ領域のみを描画します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.VerticalFlags.DayOnly">
      <summary>日領域のみを描画します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.VerticalFlags.Both">
      <summary>線全体を描画します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern">
      <summary>表示するパターンを定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern.WeekdayName">
      <summary>完全な曜日名を表示します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern.AbbreviatedWeekdayName">
      <summary>曜日の短縮名を表示します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags">
      <summary>月に含まれる週を定義します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.None">
      <summary>週なしを指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.FirstWeek">
      <summary>月の最初の週を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.SecondWeek">
      <summary>月の2番目の週を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.ThirdWeek">
      <summary>月の3番目の週を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.FourthWeek">
      <summary>月の4番目の週を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.FifthWeek">
      <summary>月の5番目の週を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.LastWeek">
      <summary>月の最後の週を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WeekFlags.All">
      <summary>月のすべての週を指定します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.WrapMode">
      <summary>行の折り返し方法を指定します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WrapMode.NoWrap">
      <summary>折り返しません。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WrapMode.WordWrap">
      <summary>単語単位で行を折り返します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.WrapMode.CharWrap">
      <summary>文字単位で行を折り返します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType">
      <summary>年の桁の種類を表します。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType.FourDigitYear">
      <summary>
        <b>FourDigitYear</b>モードの範囲は0000～9999です。</summary>
    </member>
    <member name="F:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType.TwoDigitYear">
      <summary>
        <b>TwoDigitYear</b>モードの範囲は00～99です。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ClickDateEventHandler">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar" /> の <see cref="E:GrapeCity.Win.Spread.InputMan.CellType.DropDownCalendar.ClickDate" /> イベントを処理するメソッドを表します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventHandler">
      <summary>
        <see cref="E:GrapeCity.Win.Editors.EditBase.KeyExit" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントの送信元を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="e">イベントデータを含む<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.KeyExitEventArgs" />。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.ScrolledEventHandler">
      <summary>
        <see cref="E:GrapeCity.Win.Editors.DropDownCalendar.Scrolled" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントの送信元を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="e">イベントデータを含む <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.ScrolledEventArgs" />。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.TextChangingEventHandler">
      <summary>
        <b>TextChanging</b>イベントを処理するメソッドを表します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateADDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの AD 表示フィールドを定義する <b>DateADDisplayField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateADDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateADDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateADDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の AD 表示フィールドの定義に使用される <b>DateADDisplayFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateADDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateADDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの AmPm 表示フィールドを定義する <b>DateAmPmDisplayField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">AMPM パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern,System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">AMPM パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> 値。</param>
      <param name="amDesignator">
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.AMDesignator" /> を示す <see cref="T:System.String" /> 値。</param>
      <param name="pmDesignator">
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.PMDesignator" /> を示す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.AMDesignator">
      <summary>午前を表す文字列を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.AMDesignator" /> を示す <see cref="T:System.String" /> 値。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> に入力フォーカスがなく、なおかつ値が正午より前のときの表示テキストを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.PMDesignator">
      <summary>午後を表す文字列を取得または設定します。</summary>
      <value>
        <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.PMDesignator" /> を示す <see cref="T:System.String" /> 値。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> に入力フォーカスがなく、なおかつ値が正午より後のときの表示テキストを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.Pattern">
      <summary>午前または午後の表示形式を取得または設定します。</summary>
      <value>パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> 値。既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern.AmPmDesignator" /> です。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.AMDesignator" /> および <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayField.PMDesignator" /> の表示パターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の AmPm 表示フィールドの定義に使用される <b>DateAmPmDisplayFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">AMPM パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern,System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">AMPM パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> 値。</param>
      <param name="amDesignator">
        <see cref="P:DateAmPmDisplayFieldInfo.AMDesignator" /> を示す <see cref="T:System.String" /> 値。</param>
      <param name="pmDesignator">
        <see cref="P:DateAmPmDisplayFieldInfo.PMDesignator" /> を示す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo.AMDesignator">
      <summary>AM 指定子を取得または設定します。</summary>
      <value>
        <see cref="P:DateAmPmDisplayFieldInfo.AMDesignator" /> を示す <see cref="T:System.String" /> 値。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> に入力フォーカスがなく、なおかつ値が正午より前のときの表示テキストを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo.PMDesignator">
      <summary>PM 指定子を取得または設定します。</summary>
      <value>
        <see cref="P:DateAmPmDisplayFieldInfo.PMDesignator" /> を示す <see cref="T:System.String" /> 値。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> に入力フォーカスがなく、なおかつ値が正午より後のときの表示テキストを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmDisplayFieldInfo.Pattern">
      <summary>AmPm パターンの表示方法を示す値を取得または設定します。</summary>
      <value>パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> 値。既定値は <see cref="F:AmPmPattern.AmPmDesignator" /> です。</value>
      <remarks>このプロパティは、<see cref="P:DateAmPmDisplayFieldInfo.AMDesignator" /> および <see cref="P:DateAmPmDisplayFieldInfo.PMDesignator" /> の表示パターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの AmPm フィールドを定義する <b>DateAmPmField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">AMPM パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern,System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">AMPM パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> 値。</param>
      <param name="amDesignator">午前を表す文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
      <param name="pmDesignator">午後を表す文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.AMDesignator">
      <summary>午前を表す文字列を取得または設定します。</summary>
      <value>午前を表す文字列を表す<b><see cref="T:System.String">String</see></b>値。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> に入力フォーカスがあり、なおかつ値が正午より前のときのテキストを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.PMDesignator">
      <summary>午後を表す文字列を取得または設定します。</summary>
      <value>午後を表す文字列を表す<b><see cref="T:System.String">String</see></b>値。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> に入力フォーカスがあり、なおかつ値が正午より後のときのテキストを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.Pattern">
      <summary>午前または午後の入力形式を取得または設定します。</summary>
      <value>パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> 値。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern.AmPmDesignator" /> です。</value>
      <remarks>このプロパティは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.AMDesignator" /> および <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.PMDesignator" /> のパターンを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.Text">
      <summary>フィールドのテキストを取得または設定します。</summary>
      <value>フィールドのテキストを示す<b>string</b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmField.Value">
      <summary>フィールドの値を取得または設定します。</summary>
      <value>このフィールドの値を示すnull可能な<b>int</b>値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の AmPm フィールドの定義に使用される <b>DateAmPmFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">AMPM パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern,System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">AMPM パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> 値。</param>
      <param name="amDesignator">AM 指定子を示す <see cref="T:System.String" /> 値。</param>
      <param name="pmDesignator">PM 指定子を示す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo.AMDesignator">
      <summary>AM 指定子を取得または設定します。</summary>
      <value>AM 指定子を示す <see cref="T:System.String" /> 値。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> に入力フォーカスがあり、なおかつ値が正午より前のときのテキストを取得します</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo.PMDesignator">
      <summary>PM 指定子を取得または設定します。</summary>
      <value>PM 指定子を示す <see cref="T:System.String" /> 値。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> に入力フォーカスがあり、なおかつ値が正午より後のときのテキストを取得します</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateAmPmFieldInfo.Pattern">
      <summary>フィールドのパターンを示す値を取得または設定します。</summary>
      <value>パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.AmPmPattern" /> 値。<br />既定値は <see cref="F:AmPmPattern.AmPmDesignator" /> です。</value>
      <remarks>このプロパティは、<see cref="P:DateAmPmFieldInfo.AMDesignator" /> および <see cref="P:DateAmPmFieldInfoPMDesignator" /> のパターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの日表示フィールドを定義する <b>DateDayDisplayField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayField.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>日の数値が1から9のとき、十の位に0を表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>日の数値が1から9のとき、十の位に0を表示しません。</description>
          </item>
        </list>
      </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayField.ShowLeadingZero">
      <summary>日の数値が1から9のとき、十の位に0を表示するか、しないかを取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>十の位に0を表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>十の位に0を表示しません。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の日表示フィールドの定義に使用される <b>DateDayDisplayFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">フィールドの長さが固定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayDisplayFieldInfo.ShowLeadingZero">
      <summary>先行ゼロを表示するかどうかを示す値を取得または設定します。</summary>
      <value>先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの日フィールドを定義する <b>DateDayField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の日フィールドを定義する <b>DateDayFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" />コントロールの表示フィールドを定義する<b>DateDisplayField</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />の表示フィールドの定義に使用される<b>DateDisplayFieldInfo</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの年号表示フィールドを定義する <b>DateEraDisplayField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.EraPattern)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">年号表示フィールドのパターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EraPattern" /> 列挙体。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayField.Pattern">
      <summary>年号の表示形式を取得または設定します。</summary>
      <value>パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EraPattern" /> 列挙体。既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EraPattern.EraName" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> に入力フォーカスがないときの <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayField" /> の表示パターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の年号表示フィールドの定義に使用される <b>DateEraDisplayFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.EraPattern)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">年号表示フィールドのパターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EraPattern" /> 列挙体。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayFieldInfo.Pattern">
      <summary>フィールドの年号パターンを取得または設定します。</summary>
      <value>パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EraPattern" /> 列挙体。既定値は <see cref="F:EraPattern.EraName" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> に入力フォーカスがないときの <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraDisplayFieldInfo" /> の表示パターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの年号フィールドを定義する <b>DateEraField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.EraPattern)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField" /> のパターン。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.AutoDropDown">
      <summary>このフィールドにフォーカスが移動したときに自動的にドロップダウンするかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>年号を選択するドロップダウンを表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>年号を選択するドロップダウンを表示しません。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField" /> が入力フォーカスを取得したときにドロップダウンウィンドウを自動的にドロップダウンするかどうかを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.DropDownEnabled">
      <summary>ドロップダウン機能がアクティブかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>ドロップダウンを使用します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>ドロップダウンを使用しません。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>
        <para> フィールドがアクティブになったときにドロップダウンを表示するには、 <b><see cref="P:GrapeCity.Win.Editors.Fields.DateEraField.AutoDropDown">AutoDropDown</see></b> プロパティを <b>True</b>に設定します。 </para>
        <para>
          <b>
            <see cref="P:GrapeCity.Win.Editors.Fields.DateEraField.AutoDropDown">AutoDropDown</see>
          </b> プロパティが <b>False</b>に設定されているときにドロップダウンを表示するには、<b>[ Ctrl + ↓]</b>キーを押します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.DroppedDown">
      <summary>ドロップダウンウィンドウが表示されているかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>ドロップダウンは表示されています。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>ドロップダウンは表示されていません。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>このプロパティは、ドロップダウンウィンドウがドロップダウンされているかどうかを判断します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.Pattern">
      <summary>年号の入力形式を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField" /> のパターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EraPattern" /> 値。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.EraPattern.EraName" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField" /> のパターンを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.Text">
      <summary>フィールドのテキストを取得または設定します。</summary>
      <value>フィールドのテキストを示す<b>string</b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraField.Value">
      <summary>フィールドの値を取得または設定します。</summary>
      <value>このフィールドの値を示すnull可能な<b>int</b>値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の年号フィールドの定義に使用される <b>DateEraFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.EraPattern)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo" /> のパターン。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo.AutoDropDown">
      <summary>このフィールドがフォーカスを取得したときに自動的にドロップダウンするかどうかを示す <see langword="bool" /> 値を取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。このフィールドがフォーカスを取得したときに自動的にドロップダウンする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo" /> が入力フォーカスを取得したときにドロップダウンウィンドウを自動的にドロップダウンするかどうかを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo.DropDownEnabled">
      <summary>ドロップダウン機能がアクティブかどうかを示す <see langword="bool" /> 値を取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。ドロップダウン機能がアクティブであることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、ドロップダウンウィンドウがドロップダウンできるかどうかを示します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo.Pattern">
      <summary>年号の入力形式を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo" /> のパターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.EraPattern" /> 値。<br />既定値は <see cref="F:EraPattern.EraName" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraFieldInfo" /> のパターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの和暦年表示フィールドを定義する <b>DateEraYearDisplayField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">和暦の年が1から9のとき、数値の十の位に0を表示するか、しないかを取得または設定します。 <list type="table"><listheader><term>値</term><description>説明</description></listheader><item><term><b>True</b></term><description>数値の十の位に0を表示します。</description></item><item><term><b>False</b></term><description>数値の十の位に0を表示しません。</description></item></list></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField.#ctor(System.Boolean,System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>和暦の年が1から9のとき、数値の十の位に0を表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>和暦の年が1から9のとき、数値の十の位に0を表示しません。</description>
          </item>
        </list>
      </param>
      <param name="showTraditionalFirstYear">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>和暦の「<b>1</b>年」を、「<b>元</b>年」と表記します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>和暦の「<b>1</b>年」を、「<b>1</b>年」と表記します。</description>
          </item>
        </list>
      </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField.ShowLeadingZero">
      <summary>和暦の年が1から9のとき、数値の十の位に0を表示するか、しないかを取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>数値の十の位に0を表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>数値の十の位に0を表示しません。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayField.ShowTraditionalFirstYear">
      <summary>和暦の「<b>1</b>年」を、「<b>元</b>年」と表示するか、しないかを取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>「<b>元</b>年」と表記します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>「<b>1</b>年」と表記します。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>このプロパティは、和暦の1年を「元年」と表示するかどうかを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の和暦年表示フィールドの定義に使用される <b>DateEraYearDisplayFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="true" /> に設定した場合、先行ゼロを表示します。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo.#ctor(System.Boolean,System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="true" /> に設定した場合、フィールドに先行ゼロが表示されます。</param>
      <param name="showTraditionalFirstYear">
        <see langword="bool" /> 値。<see langword="true" /> に設定した場合、和暦の１年を「元年」と表示します。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo.ShowLeadingZero">
      <summary>先行ゼロを表示するかどうかを示す値を取得または設定します。</summary>
      <value>先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearDisplayFieldInfo.ShowTraditionalFirstYear">
      <summary>和暦の１年を「元年」と表示するかどうかを示す値を取得または設定します。</summary>
      <value>和暦の１年を「元年」と表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、和暦年が１年のときに「元年」と表示するかどうかを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの和暦年フィールドを定義する <b>DateEraYearField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の和暦年フィールドの定義に使用される <b>DateEraYearFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateEraYearFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" />コントロールの基本入力フィールドを定義する<b>DateField</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>このクラスは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールが受け入れ可能なフィールド型の基本クラスを表します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />の基本入力フィールドの定義に使用される<b>DateFieldInfo</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>このクラスは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> が受け入れ可能なフィールド型の基本クラスを表します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの時表示フィールドを定義する <b>DateHourDisplayField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="true" /> に設定した場合、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField" /> に先行ゼロが表示されます。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField.#ctor(System.Boolean,System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="true" /> に設定した場合、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField" /> に先行ゼロが表示されます。</param>
      <param name="midnightAs24">
        <see langword="true" /> に設定した場合、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField" /> で午前０時が 24 時と表示されます。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField.MidnightAs24">
      <summary>午前0時のとき、時を表す数値を「24」と表示するか、「0」と表示するかを取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>午前0時のとき、時を表す数値を「24」と表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>午前0時のとき、時を表す数値を「0」と表示します。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>このプロパティは、午前0時を「24」時と「0」時のどちらで表示するかを示します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayField.ShowLeadingZero">
      <summary>和暦の年が1から9のとき、数値の十の位に0を表示するか、しないかを取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>数値の十の位に0を表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>数値の十の位に0を表示しません。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の時表示フィールドの定義に使用される <b>DateHourDisplayFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="true" /> に設定した場合、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo" /> に先行ゼロが表示されます。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo.#ctor(System.Boolean,System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="true" /> に設定した場合、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo" /> に先行ゼロが表示されます。</param>
      <param name="midnightAs24">
        <see langword="true" /> に設定した場合、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo" /> で午前０時が 24 時と表示されます。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo.MidnightAs24">
      <summary>午前０時が 24 時と表示されるかどうかを示す値を取得または設定します。</summary>
      <value>午前０時が 24 時と表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、午前０時が 24 時と０時のどちらで表示されるかを示します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourDisplayFieldInfo.ShowLeadingZero">
      <summary>先行ゼロを表示するかどうかを示す値を取得または設定します。</summary>
      <value>先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの時フィールドを定義する <b>DateHourField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourField.MidnightAs24">
      <summary>午前0時を表す数値として「24」と「0」のいずれを使用するかを取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>数値「24」を使用します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>数値「0」を使用します。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>このプロパティは、午前0時を「24」時と「0」時のどちらで表示するかを示します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の時フィールドの定義に使用される <b>DateHourFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateHourFieldInfo.MidnightAs24">
      <summary>午前０時を 24 時として指定するかどうかを示す値を取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。午前０時を 24 時として指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、午前０時が 24 時と０時のどちらで表示されるかを示します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" />コントロールの入力表示フィールドを定義する<b>DateInputDisplayField</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputDisplayField.PromptChar">
      <summary>フィールドに何も入力されていないときに表示するプロンプト文字を取得または設定します。</summary>
      <value>プロンプト文字を表す<b><see cref="T:System.Char">Char</see></b>値。</value>
      <remarks>このプロパティは、表示フィールドの空のビットへの入力を促すために使用される<see cref="T:System.Char" />を取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />の入力表示フィールドの定義に使用される<b>DateInputDisplayFieldInfo</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputDisplayFieldInfo.PromptChar">
      <summary>フィールドのプロンプト文字を取得または設定します。</summary>
      <value>表示フィールドのプレイスホルダー文字として使用される <see cref="T:System.Char" /> 値。</value>
      <remarks>このプロパティは、表示フィールドのプロンプト文字として使用される <see cref="T:System.Char" /> を取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" />コントロールの入力フィールドを定義する<b>DateInputField</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField.PromptChar">
      <summary>フィールドに何も入力されていないときに表示するプロンプト文字を取得または設定します。</summary>
      <value>プロンプト文字を表す<b><see cref="T:System.Char">Char</see></b>値。</value>
      <remarks>このプロパティは、フィールドの空のビットへの入力を促すために使用される<see cref="T:System.Char" />を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField.SpinIncrement">
      <summary>スピン動作による数値の変化量を取得または設定します。</summary>
      <value>変化量を表す<b><see cref="T:System.Int32">Int32</see></b>値。</value>
      <remarks>
        <note>
          <b>
            <see cref="P:GrapeCity.Win.Editors.Fields.DateInputField.SpinIncrement">SpinIncrement</see>
          </b> プロパティの値は、 既定値では<b><see cref="T:GrapeCity.Win.Editors.GcDate">GcDate</see></b>コントロールの <b><see cref="P:GrapeCity.Win.Editors.GcDate.Spin">Spin</see></b>. <b><see cref="P:GrapeCity.Win.Editors.Spin.Increment">Increment</see></b> プロパティの値を継承します。 フィールドの<b><see cref="P:GrapeCity.Win.Editors.Fields.DateInputField.SpinIncrement">SpinIncrement</see></b> プロパティが 明示的に変更されると、この継承関係は失われ、フィールドのプロパティがコントロールのプロパティより優先されます。 </note>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField.Value">
      <summary>フィールドの値を取得または設定します。</summary>
      <value>このフィールドの値を示す<b>int</b>値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField.SpinDown">
      <summary>スピンダウン動作を実行します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField.SpinDown(System.Int32)">
      <summary>変化量を指定してスピンダウン動作を実行します。</summary>
      <param name="increment">変化量を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField.SpinUp">
      <summary>スピンアップ動作を実行します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputField.SpinUp(System.Int32)">
      <summary>変化量を指定してスピンアップ動作を実行します。</summary>
      <param name="increment">変化量を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" />の入力フィールドの定義に使用される<b>DateInputFieldInfo</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputFieldInfo.PromptChar">
      <summary>フィールドのプロンプト文字を取得または設定します。</summary>
      <value>データの入力時にフィールドのプレイスホルダー文字として使用される <see cref="T:System.Char" /> 値。</value>
      <remarks>このプロパティは、フィールドのプロンプト文字として使用される <see cref="T:System.Char" /> を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateInputFieldInfo.SpinIncrement">
      <summary>スピン動作による数値の変化量を取得または設定します。</summary>
      <value>スピン増分量を示す <see cref="T:System.Int32" /> 値。</value>
      <remarks>値が設定されていないときの既定値は、オーナーの Spin.Increment 値です。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールのリテラル表示フィールドを定義する <b>DateLiteralDisplayField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayField.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="literalText">リテラル文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayField.Text">
      <summary>リテラル文字列を取得または設定します。</summary>
      <value>リテラル文字列を表す<b><see cref="T:System.String">String</see></b>値。 既定値は<b>String.Empty</b>です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> に入力フォーカスがないときに表示されるリテラルテキストを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> のリテラル表示フィールドの定義に使用される <b>DateLiteralDisplayFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayFieldInfo.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="literalText">リテラル表示フィールドのリテラルテキストを示す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralDisplayFieldInfo.Text">
      <summary>リテラル文字列を取得または設定します。</summary>
      <value>表示フィールドのリテラルテキストを示す <see cref="T:System.String" /> 値。<br />既定値はスペース文字です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> に入力フォーカスがないときに表示されるリテラルテキストを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールのリテラルフィールドを定義する <b>DateLiteralField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralField.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="literalText">リテラル文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralField.Text">
      <summary>リテラル文字列を取得または設定します。</summary>
      <value>リテラル文字列を表す<b><see cref="T:System.String">String</see></b>値。 既定値は<b>String.Empty</b>です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> に入力フォーカスがあるときに表示されるリテラルテキストを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> のリテラルフィールドの定義に使用される <b>DateLiteralFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralFieldInfo.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="literalText">リテラルテキストを示す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateLiteralFieldInfo.Text">
      <summary>リテラル文字列を取得または設定します。</summary>
      <value>フィールドのリテラルテキストを示す <see cref="T:System.String" /> 値。<br />既定値は <see cref="F:System.String.Empty" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> に入力フォーカスがあるときに表示されるリテラルテキストを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの分表示フィールドを定義する <b>DateMinuteDisplayField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField" /> に先行ゼロが表示されるかどうかを示す <see langword="bool" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField.ShowLeadingZero">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayField" /> に先行ゼロが表示されるかどうかを示す値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>数値の十の位に0を表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>数値の十の位に0を表示しません。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の分表示フィールドの定義に使用される <b>DateMinuteDisplayFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo" /> に先行ゼロが表示されるかどうかを示す <see langword="bool" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo.ShowLeadingZero">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteDisplayFieldInfo" /> に先行ゼロが表示されるかどうかを示す値を取得または設定します。</summary>
      <value>先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの分フィールドを定義する <b>DateMinuteField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の分フィールドの定義に使用される <b>DateMinuteFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMinuteFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの月表示フィールドを定義する <b>DateMonthDisplayField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>月の数値が1から9のとき、十の位に0を表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>月の数値が1から9のとき、十の位に0を表示しません。</description>
          </item>
        </list>
      </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.MonthPattern)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>月の数値が1から9のとき、十の位に0を表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>月の数値が1から9のとき、十の位に0を表示しません。</description>
          </item>
        </list>
      </param>
      <param name="pattern">月の値の表示方法を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> 列挙体。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField.Pattern">
      <summary>月の表示形式を取得または設定します。</summary>
      <value>月を表示するパターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> 列挙値。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern.Number" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> に入力フォーカスがないときの <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField" /> の表示パターンを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField.ShowLeadingZero">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayField" /> に先行ゼロが表示されるかどうかを示す値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>数値の十の位に0を表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>数値の十の位に0を表示しません。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の月表示フィールドの定義に使用される <b>DateMonthDisplayFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="bool" /> 値。フィールドの長さが固定されている場合は <see langword="true" />。それ以外の場合、長さは可変です。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.MonthPattern)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="bool" /> 値。フィールドの長さが固定されている場合は <see langword="true" />。それ以外の場合、長さは可変です。</param>
      <param name="pattern">月の値の表示方法を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> 列挙体。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo.Pattern">
      <summary>フィールドの月パターンを取得または設定します。</summary>
      <value>月の表示に使用されるパターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> 列挙体。<br />既定値は <see cref="F:MonthPattern.Number" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> に入力フォーカスがないときの <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo" /> の表示パターンを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo.ShowLeadingZero">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthDisplayFieldInfo" /> に先行ゼロが表示されるかどうかを示す値を取得または設定します。</summary>
      <value>先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの月フィールドを定義する <b>DateMonthField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.MonthPattern)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField" /> のパターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField.AutoDropDown">
      <summary>このフィールドにフォーカスが移動したときに自動的にドロップダウンするかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。このフィールドにフォーカスが移動したときに自動的にドロップダウンする場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField" /> が入力フォーカスを取得したときにドロップダウンウィンドウを自動的にドロップダウンするかどうかを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField.DropDownEnabled">
      <summary>ドロップダウン機能がアクティブかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。ドロップダウン機能がアクティブな場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>
        <para> フィールドがアクティブになったときにドロップダウンを表示するには、 <b><see cref="P:GrapeCity.Win.Editors.Fields.DateEraField.AutoDropDown">AutoDropDown</see></b> プロパティを <b>True</b>に設定します。 </para>
        <para>
          <b>
            <see cref="P:GrapeCity.Win.Editors.Fields.DateEraField.AutoDropDown">AutoDropDown</see>
          </b> プロパティが <b>False</b>に設定されているときにドロップダウンを表示するには、<b>[ Ctrl + ↓]</b>キーを押します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField.DroppedDown">
      <summary>ドロップダウンウィンドウが表示されているかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <see langword="bool" />値。ドロップダウンウィンドウが表示されている場合は<see langword="true" />。それ以外の場合は<see langword="false" />。</value>
      <remarks>このプロパティは、ドロップダウンウィンドウがドロップダウンされているかどうかを判断します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField.Pattern">
      <summary>年号の入力形式を取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField" /> のパターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> 値。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern.Number" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthField" /> のパターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の月フィールドの定義に使用される <b>DateMonthFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.MonthPattern)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo" /> のパターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo.AutoDropDown">
      <summary>このフィールドがフォーカスを取得したときに自動的にドロップダウンするかどうかを示す <see langword="bool" /> 値を取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。このフィールドがフォーカスを取得したときに自動的にドロップダウンする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo" /> が入力フォーカスを取得したときにドロップダウンウィンドウを自動的にドロップダウンするかどうかを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo.DropDownEnabled">
      <summary>ドロップダウン機能がアクティブかどうかを示す <see langword="bool" /> 値を取得または設定します。</summary>
      <value>
        <see langword="bool" /> 値。ドロップダウン機能がアクティブであることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
      <remarks>このプロパティは、ドロップダウンウィンドウがドロップダウンできるかどうかを示します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo.Pattern">
      <summary>フィールドのパターンを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo" /> のパターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.MonthPattern" /> 値。<br />既定値は <see cref="F:MonthPattern.Number" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateMonthFieldInfo" /> のパターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの秒表示フィールドを定義する <b>DateSecondDisplayField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayField.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>秒の数値が0から9のとき、十の位に0を表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>秒の数値が0から9のとき、十の位に0を表示しません。</description>
          </item>
        </list>
      </param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayField.ShowLeadingZero">
      <summary>和暦の年が1から9のとき、数値の十の位に0を表示するか、しないかを取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>十の位に0を表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>十の位に0を表示しません。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の秒表示フィールドの定義に使用される <b>DateSecondDisplayFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <see langword="bool" /> 値。フィールドの長さが固定されている場合は <see langword="true" />。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondDisplayFieldInfo.ShowLeadingZero">
      <summary>先行ゼロを表示するかどうかを示す値を取得または設定します。</summary>
      <value>先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの秒フィールドを定義する <b>DateSecondField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の秒フィールドの定義に使用される <b>DateSecondFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSecondFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの 12 時間制の時表示フィールドを定義する <b>DateShortHourDisplayField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>時の数値が0から9のとき、十の位に0を表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>時の数値が0から9のとき、十の位に0を表示しません。</description>
          </item>
        </list>
      </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.Hour12Mode)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>時の数値が0から9のとき、十の位に0を表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>時の数値が0から9のとき、十の位に0を表示しません。</description>
          </item>
        </list>
      </param>
      <param name="hour12Mode">12 時間制の時刻の表現を示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField.Hour12Mode" /> 列挙体。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField.Hour12Mode">
      <summary>午前0時あるいは午後0時における時の表示形式を取得または設定します。</summary>
      <value>12 時間制の時刻の表現を示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField.Hour12Mode" /> 列挙体。既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Hour12Mode.Hour0As12" /> です。</value>
      <remarks>このプロパティは、12時間制の時フィールドの表示モードを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayField.ShowLeadingZero">
      <summary>和暦の年が1から9のとき、数値の十の位に0を表示するか、しないかを取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>十の位に0を表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>十の位に0を表示しません。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の 12 時間制の時表示フィールドの定義に使用される <b>DateShortHourDisplayFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">フィールドの長さが固定されているかどうかを示す <see langword="bool" /> 値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.Hour12Mode)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">フィールドの長さが固定されているかどうかを示す <see langword="bool" /> 値。</param>
      <param name="hour12Mode">12 時間制の時刻の表し方を示す <see cref="P:DateShortHourDisplayFieldInfo.Hour12Mode" /> 列挙体。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo.Hour12Mode">
      <summary>０時が 12 時と表示されるかどうかを示す値を取得または設定します。</summary>
      <value>12 時間制の時刻の表し方を示す <see cref="P:DateShortHourDisplayFieldInfo.Hour12Mode" /> 列挙体。既定値は <see cref="F:Hour12Mode.Hour0As12" /> です。</value>
      <remarks>このプロパティは、12 時間制の時の表示モードを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourDisplayFieldInfo.ShowLeadingZero">
      <summary>先行ゼロを表示するかどうかを示す値を取得または設定します。</summary>
      <value>先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<sbr />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの 12 時間制の時フィールドを定義する <b>DateShortHourField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourField.Hour12Mode">
      <summary>午前0時あるいは午後0時を表す文字列の形式を取得または設定します。</summary>
      <value>12 時間制モードのタイプを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourField.Hour12Mode" /> 列挙体。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.Hour12Mode.Hour0As12" /> です。</value>
      <remarks>このプロパティは、12時間制の時フィールドの表示モードを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の 12 時間制の時フィールドの定義に使用される <b>DateShortHourFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateShortHourFieldInfo.Hour12Mode">
      <summary>０時を 12 時と表示するかどうかを示す値を取得または設定します。</summary>
      <value>12 時間制モードのタイプを示す <see cref="P:DateShortHourFieldInfo.Hour12Mode" /> 列挙体。<br />既定値は <see cref="F:Hour12Mode.Hour0As12" /> です。</value>
      <remarks>このプロパティは、12 時間制の時の表示モードを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールのシステム書式表示フィールドを定義する <b>DateSystemFormatDisplayField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayField.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">書式指定子を表す<b><see cref="T:System.String">String</see></b>値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayField.Pattern">
      <summary>日付の表記方法を定める書式指定子を取得または設定します。</summary>
      <value>書式指定子を表す<b><see cref="T:System.String">String</see></b>値。 既定値は<b>G</b>です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayField" /> のパターンを取得します。この <b>Pattern</b> プロパティを使用して <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> の <see cref="T:System.DateTime" /> 値が <see cref="T:System.String" /> に変換され、それがこのフィールドの表示テキストになります。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> のシステム書式表示フィールドの定義に使用される <b>DateSystemFormatDisplayFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayFieldInfo.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">フィールドのパターンを示す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayFieldInfo.Pattern">
      <summary>日付の表記方法を定める書式指定子を取得または設定します。</summary>
      <value>フィールドのパターンを示す <see cref="T:System.String" /> 値。<br />既定値は G です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateSystemFormatDisplayFieldInfo" /> のパターンを取得します。この <b>Pattern</b> プロパティを使用して <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の <see cref="T:System.DateTime" /> 値が <see cref="T:System.String" /> に変換され、それがこのフィールドの表示テキストになります。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeDisplayFieldCollection">
      <summary>
        <b>GcDateTime</b> コントロールの表示フィールドコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeDisplayFieldCollection.AddRange(System.String)">
      <summary>指定した書式文字列から作成された別の<see cref="T:IList&lt;DateDisplayField&gt;" />の内容をコレクションの最後に追加します。</summary>
      <param name="format">書式文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeFieldCollection">
      <summary>読み取り専用の <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateField" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeFieldCollection.AddRange(System.String)">
      <summary>指定した書式文字列から作成された別の<see cref="T:System.Collections.Generic.IList`1" />の内容をコレクションの最後に追加します。</summary>
      <param name="format">書式文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateTimeFieldCollection.OnValidateNewItems(System.Object,System.Object[])">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="oldItem">項目を設定するときの古い項目を示す<b>object</b>。</param>
      <param name="newItems">新しい項目を示す<b>object</b>の配列。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの曜日表示フィールドを定義する <b>DateWeekdayDisplayField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">曜日パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayField.Pattern">
      <summary>曜日の表示形式を取得または設定します。</summary>
      <value>曜日パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern" /> 値。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern.WeekdayName" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayField" /> のパターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の曜日表示フィールドの定義に使用される <b>DateWeekdayDisplayFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">曜日パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayFieldInfo.Pattern">
      <summary>フィールドの曜日パターンを示す値を取得または設定します。</summary>
      <value>曜日パターンを示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.WeekdayPattern" /> 値。<br />既定値は <see cref="F:WeekdayPattern.WeekdayName" /> です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateWeekdayDisplayFieldInfo" /> のパターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの年表示フィールドを定義する <b>DateYearDisplayField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description> 西暦年の数値が<b><see cref="P:GrapeCity.Win.Editors.Fields.DateYearDisplayField.YearDigit">YearDigit</see></b> プロパティで 定めた桁数をすべて埋めないとき、上位の桁に0を表示します。 </description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description> 西暦年の数値が<b><see cref="P:GrapeCity.Win.Editors.Fields.DateYearDisplayField.YearDigit">YearDigit</see></b> プロパティで 定めた桁数をすべて埋めないとき、上位の桁に0を表示しません。 </description>
          </item>
        </list>
      </param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.YearDigitType)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description> 西暦年の数値が<b><see cref="P:GrapeCity.Win.Editors.Fields.DateYearDisplayField.YearDigit">YearDigit</see></b> プロパティで 定めた桁数をすべて埋めないとき、上位の桁に0を表示します。 </description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description> 西暦年の数値が<b><see cref="P:GrapeCity.Win.Editors.Fields.DateYearDisplayField.YearDigit">YearDigit</see></b> プロパティで 定めた桁数をすべて埋めないとき、上位の桁に0を表示しません。 </description>
          </item>
        </list>
      </param>
      <param name="yearDigit">年の桁の種類を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField.ShowLeadingZero">
      <summary>和暦の年が1から9のとき、数値の十の位に0を表示するか、しないかを取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>数値の十の位に0を表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>数値の十の位に0を表示しません。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayField.YearDigit">
      <summary>西暦年の表示形式を取得または設定します。</summary>
      <value>年の桁の種類を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> 列挙体。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType.FourDigitYear" /> です。</value>
      <remarks>このプロパティは、年の値の表示モードを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の年表示フィールドの定義に使用される <b>DateYearDisplayFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">表示フィールドの桁が固定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo.#ctor(System.Boolean,GrapeCity.Win.Spread.InputMan.CellType.YearDigitType)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="showLeadingZero">表示フィールドの桁が固定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="yearDigit">年の桁の種類を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo.ShowLeadingZero">
      <summary>先行ゼロを表示するかどうかを示す値を取得または設定します。</summary>
      <value>先行ゼロを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。<br />既定値は <see langword="false" /> です。</value>
      <remarks>このプロパティは、先行ゼロを表示するかどうかを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearDisplayFieldInfo.YearDigit">
      <summary>西暦年の表示形式を取得または設定します。</summary>
      <value>年の桁の種類を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> 列挙体。<br />既定値は <see cref="F:YearDigitType.FourDigitYear" /> です。</value>
      <remarks>このプロパティは、年の値の表示モードを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTime" /> コントロールの年フィールドを定義する <b>DateYearField</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.YearDigitType)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearField" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="yearDigit">年の桁を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearField.TwoDigitYearMax">
      <summary>西暦２桁入力時の有効期間（100年間）の最後の年を取得または設定します。</summary>
      <value>有効期間（100年間）の最後の年を表す<b><see cref="T:System.Nullable`1">Nullable</see></b><b>&lt;</b><b><see cref="T:System.Int32">Int32</see></b><b>&gt;</b>値。</value>
      <remarks>
        <para>
          <b>
            <see cref="P:GrapeCity.Win.Editors.Fields.DateYearField.TwoDigitYearMax">TwoDigitYearMax</see>
          </b> プロパティを <b>Nothing</b>に設定すると、システムの既定値が設定されます。システムの既定値はコントロールパネル「地域と言語のオプション」 から参照または設定できます。 </para>
        <para> たとえば、<b><see cref="P:GrapeCity.Win.Editors.Fields.DateYearField.TwoDigitYearMax">TwoDigitYearMax</see></b> プロパティに "2029"を設定した場合、２桁の入力数値は、1930年～2029年の間の年を表すものと解釈されます。 つまり、年フィールドに"29"が入力された場合は"2029年"、"30"が入力された場合は"1930年"と解釈されます。 </para>
        <para>
          <b>
            <see cref="P:GrapeCity.Win.Editors.Fields.DateYearField.TwoDigitYearMax">TwoDigitYearMax</see>
          </b> プロパティを有効にする には、<b><see cref="P:GrapeCity.Win.Editors.Fields.DateYearField.YearDigit">YearDigit</see></b> プロパティを <b>TwoDigitYear</b>に設定する必要があります。 </para>
        <para>
          <note>
            <b>
              <see cref="P:GrapeCity.Win.Editors.Fields.DateYearField.TwoDigitYearMax">TwoDigitYearMax</see>
            </b> プロパティを99に設定した場合、フィールドに0を入力することはできません。この場合に有効となる入力値は1から99までです。 </note>
        </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearField.YearDigit">
      <summary>西暦年の表示形式を取得または設定します。</summary>
      <value>年の桁を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> 列挙体。<br />既定値は <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType.FourDigitYear" /> です。</value>
      <remarks>このプロパティは、年の値の表示モードを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcDateTimeCellType" /> の年フィールドの定義に使用される <b>DateYearFieldInfo</b> クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.YearDigitType)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="yearDigit">年の桁を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearFieldInfo.TwoDigitYearMax">
      <summary>２桁モードの最大年を取得または設定します。</summary>
      <value>２桁年で表せる 100 年範囲の最後の年を示す整数値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DateYearFieldInfo.YearDigit">
      <summary>西暦年の表示形式を取得または設定します。</summary>
      <value>年の桁を示す <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.YearDigitType" /> 列挙体。<br />既定値は <see cref="F:YearDigitType.FourDigitYear" /> です。</value>
      <remarks>このプロパティは、年の値の表示モードを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField">
      <summary>表示フィールドの基本を定義する<b>DisplayField</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.BackColor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" /> の背景色を取得または設定します。</summary>
      <value>背景色を表す<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [Transparent]</b>です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Font">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" /> のフォントを取得または設定します。</summary>
      <value>フォントを表す<b><see cref="T:System.Drawing.Font">Font</see></b>オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.ForeColor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" /> の前景色を取得または設定します。</summary>
      <value>前景色を表す<b><see cref="T:System.Drawing.Color">Color</see></b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Margin">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" /> の周囲のスペースを取得または設定します。</summary>
      <value>フィールドの周囲のスペースを表す<see cref="T:System.Windows.Forms.Padding" />。<br />デフォルト値は"0,0,0,0"です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Name">
      <summary>オブジェクトの名前を取得または設定します。</summary>
      <value>オブジェクトの名前を示す<b>string</b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Padding">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" /> 内のパディングを取得または設定します。</summary>
      <value>フィールドの内部スペース特性を表す<see cref="T:System.Windows.Forms.Padding" />。<br />デフォルト値は"0,0,0,0"です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Size">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" /> のサイズを取得します。</summary>
      <value>フィールドのサイズを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Size" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Text">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" /> に関連付けられたテキストを取得します。</summary>
      <value>テキストを表す<b><see cref="T:System.String">String</see></b>値。 既定値は<b>String.Empty</b>です。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.PointContainerToField(System.Drawing.Point)">
      <summary>指定したコンテナーのポイントを計算して <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" /> 座標を算出します。</summary>
      <param name="point">コンテナー座標で表された、変換する<see cref="T:System.Drawing.Point" />。</param>
      <returns>変換後の<see cref="T:System.Drawing.Point" nolink="true" />（point）をフィールド座標で表す<see cref="T:System.Drawing.Point" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.PointFieldToContainer(System.Drawing.Point)">
      <summary>指定した <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField" /> のポイントを計算してコンテナー座標を算出します。</summary>
      <param name="point">フィールド座標で表された、変換する<see cref="T:System.Drawing.Point" />。</param>
      <returns>変換後の<see cref="T:System.Drawing.Point" nolink="true" />（point）をコンテナー座標で表す<see cref="T:System.Drawing.Point" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.ResetFont">
      <summary>
        <b>
          <see cref="P:GrapeCity.Win.Editors.Fields.DisplayField.Font">Font</see>
        </b> プロパティを既定値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.ResetForeColor">
      <summary>
        <b>
          <see cref="P:GrapeCity.Win.Editors.Fields.DisplayField.ForeColor">ForeColor</see>
        </b> プロパティを既定値にリセットします。</summary>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayField.Paint">
      <summary>フィールドが再描画されるときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnAddRange(System.Object[])">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素配列を挿入する前に、追加のカスタム処理を実行します。</summary>
      <param name="value">追加される<b><see cref="T:System.Object">Object</see></b>配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnAddRangeComplete(System.Object[])">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素配列を挿入した後に、追加のカスタム処理を実行します。</summary>
      <param name="value">追加された<b><see cref="T:System.Object">Object</see></b>配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnClearComplete">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnInsert(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素を挿入する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">挿入位置を表す0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">挿入する項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnInsertComplete(System.Int32,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">挿入位置を表す0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">挿入する項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnRemoveComplete(System.Int32,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">削除される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">削除される項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに値を設定する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">更新される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="oldValue">更新前の項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="newValue">挿入する項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">更新される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="oldValue">更新前の項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="newValue">挿入する項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldCollection`1.OnValidateNewItems(System.Object,System.Object[])">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="oldItem">項目を設定するときの古い項目を示す<b>object</b>。</param>
      <param name="newItems">新しい項目を示す<b>object</b>の配列。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo">
      <summary>表示フィールドの基本の定義に使用される<b>DisplayFieldInfo</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo.BackColor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo" /> オブジェクトの背景色を取得または設定します。</summary>
      <value>フィールドの背景色を示す <see cref="T:System.Drawing.Color" /> 値。<br />既定値は <see cref="P:System.Drawing.Color.Transparent" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo.Font">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo" /> オブジェクトのフォントを取得または設定します。</summary>
      <value>フィールドの <b>Font</b> を示す <see cref="T:System.Drawing.Font" /> オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo.ForeColor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo" /> オブジェクトの前景色を取得または設定します。</summary>
      <value>フィールドの前景色を示す <see cref="T:System.Drawing.Color" /> 値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo.Margin">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo" /> オブジェクトの周囲のスペースを取得または設定します。</summary>
      <value>フィールドの周囲のスペースを表す<see cref="T:System.Windows.Forms.Padding" />。<br />デフォルト値は"0,0,0,0"です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo.Name">
      <summary>オブジェクトの名前を取得または設定します。</summary>
      <value>オブジェクトの名前を示す <see cref="T:System.String" /> 値。<br />既定値は <see cref="F:System.String.Empty" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo.Padding">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.DisplayFieldInfo" /> 内のパディングを取得または設定します。</summary>
      <value>フィールドの内部スペース特性を表す<see cref="T:System.Windows.Forms.Padding" />。<br />デフォルト値は"0,0,0,0"です。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field">
      <summary>基本フィールドを定義する<b>FieldInfo</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>このクラスは、単一セグメントの表示機能を実装します。また、いくつかの入力動作もユーザーに公開されます。これはユーザー向けの最終インタフェースです。フィールドが作成されると、そのフィールドのセグメントと値モジュールが作成され、続いてセグメントと値モジュールの構成が行われます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.BackColor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> の背景色を取得または設定します。</summary>
      <value>背景色を表す<b><see cref="T:System.Drawing.Color">Color</see></b>値。 既定値は<b>Color [Transparent]</b>です。</value>
      <remarks>
        <b>BackColor</b> プロパティを使用してコントロールの背景色を変更し、コントロールをフォームの色彩設計に合わせることができます。<para />コントロール内のテキストの色を変更するには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.ForeColor" /> プロパティを使用します。コントロールの <b>BackColor</b> プロパティを設定するときは、コントロールのテキストが見えなくなるような色を選ばないでください。たとえば、<b>BackColor</b> プロパティと <b>ForeColor</b> プロパティを両方とも <b>Color.Black</b> に設定した場合、コントロール内のテキストは見えなくなります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Focused">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> に入力フォーカスがあるかどうかを示す値を取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> に入力フォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Font">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> のフォントを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> の Font を示す <see cref="T:System.Drawing.Font" /> オブジェクト。</value>
      <remarks>
        <para>
          <b>Font</b>プロパティはアンビエントプロパティです。アンビエントプロパティとは、明示的に設定しない場合に親コントロールから取得されるコントロールプロパティです。たとえば<see cref="T:System.Windows.Forms.Button" />は、デフォルトでは親の<see cref="T:System.Windows.Forms.Form" />と同じ<see cref="P:System.Windows.Forms.Control.BackColor" />を持ちます。</para>
        <para />
        <para>
          <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.ForeColor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> の前景色を取得または設定します。</summary>
      <value>前景色を表す<b><see cref="T:System.Drawing.Color">Color</see></b>値。</value>
      <remarks>
        <b>ForeColor</b> プロパティを使用してコントロール内のテキストの色を変更し、フォーム上の他のコントロールのテキストに合わせることができます。また、このプロパティを使用して、無効な値を含む特定のコントロールを強調表示することもできます。<para />コントロールの背景色を変更するには、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.BackColor" /> プロパティを使用します。コントロールの ForeColor プロパティを設定するときは、コントロールのテキストが見えなくなるような色を選ばないでください。たとえば、<b>ForeColor</b> プロパティと <b>BackColor</b> プロパティを両方とも <b>Color.Black</b> に設定した場合、テキストボックス内のテキストは見えなくなります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.InputStatus">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> の現在の入力ステータスを取得します。</summary>
      <value>フィールドが完全に入力されているか、空か、部分的に入力されているかを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.InputStatus" /> 列挙体。</value>
      <remarks>このメソッドは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> の入力ステータスを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Margin">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> の周囲のスペースを取得または設定します。</summary>
      <value>フィールドの間隔を表す<see cref="T:System.Windows.Forms.Padding" />。<br />デフォルト値は"0,0,0,0"です。</value>
      <remarks>このプロパティは、隣接するフィールドの間隔を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Name">
      <summary>オブジェクトの名前を取得または設定します。</summary>
      <value>オブジェクトの名前を示す<b>string</b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Padding">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> 内のパディングを取得または設定します。</summary>
      <value>フィールドの内部スペース特性を表す<see cref="T:System.Windows.Forms.Padding" />。<br />デフォルト値は"0,0,0,0"です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> の入力領域と Field の境界との間隔を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.SelectionLength">
      <summary>選択されているテキストの文字数を取得します。</summary>
      <value>文字数を表す<b><see cref="T:System.Int32">Int32</see></b>値。 既定値は<b>0</b>です。</value>
      <remarks>このプロパティを使用すると、選択されたテキストに対して操作を実行する前に、コントロールで文字が選択されているかどうかを判断できます。<b>SelectionLength</b> プロパティの値がコントロールのテキストの文字数を超える値に設定されている場合、<b>SelectionLength</b> プロパティの値は、コントロール内のテキスト全体の長さから <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.SelectionStart" /> プロパティの値を引いた数に設定されます（<b>SelectionStart</b> プロパティに値が指定されている場合）。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.SelectionStart">
      <summary>選択するテキストの開始点を取得します。</summary>
      <value>開始点を表す<b><see cref="T:System.Int32">Int32</see></b>値。 既定値は<b>0</b>です。</value>
      <remarks>コントロールでテキストが選択されていない場合、このプロパティは新しいテキストの挿入位置を示します。このプロパティがコントロール内のテキストの長さを超えた位置に設定されている場合、開始位置は最後の文字の後ろになります。コントロールでテキストが選択されているときにこのプロパティを変更すると、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.SelectionLength" />プロパティの値が小さくなる場合があります。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.SelectionStart" />プロパティで示された位置より後ろにあるコントロール内の残りのテキストが<b>SelectionLength</b>プロパティの値より小さい場合、<b>SelectionLength</b>プロパティの値は自動的に小さくなります。<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.SelectionStart" nolink="true" />プロパティの値によって、<b>SelectionLength</b>プロパティの値が大きくなることはありません。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Size">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> のサイズを取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> のサイズを示す <see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Size" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Text">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> のテキストを取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> のテキストを示す <see cref="T:System.String" /> 値。<br />既定値は <see cref="F:System.String.Empty" /> です。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.CharPositionToX(System.Int32)">
      <summary>文字が表示されている水平座標値を取得します。</summary>
      <param name="charPosition">水平座標値を取得する文字のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <returns>水平座標値を表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
      <remarks>このメソッドは、文字位置の値を、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> の左端からの水平方向のオフセット位置を示す <see cref="T:System.Int32" /> 値（ピクセル単位）に変換します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.PointContainerToField(System.Drawing.Point)">
      <summary>フィールドが配置されているコンテナの座標系をフィールドの座標系に変換します。</summary>
      <param name="point">コンテナー座標で表された、変換する<see cref="T:System.Drawing.Point" />。</param>
      <returns>変換後の<see cref="T:System.Drawing.Point" nolink="true" />（p）をフィールド座標で表す<see cref="T:System.Drawing.Point" />。</returns>
      <remarks>このメソッドは、コンテナー座標系の座標をフィールド座標系の新しい座標に変換します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.PointFieldToContainer(System.Drawing.Point)">
      <summary>フィールドの座標系をフィールドが配置されているコンテナの座標系に変換します。</summary>
      <param name="point">フィールド座標で表された、変換する<see cref="T:System.Drawing.Point" />。</param>
      <returns>変換後の<see cref="T:System.Drawing.Point" nolink="true" />（p）をコンテナー座標で表す<see cref="T:System.Drawing.Point" />。</returns>
      <remarks>このメソッドは、フィールド座標系の座標をコンテナー座標系の新しい座標に変換します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.ResetFont">
      <summary>
        <b>
          <see cref="P:GrapeCity.Win.Editors.Fields.DisplayField.Font">Font</see>
        </b> プロパティを既定値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.ResetForeColor">
      <summary>
        <b>
          <see cref="P:GrapeCity.Win.Editors.Fields.DisplayField.ForeColor">ForeColor</see>
        </b> プロパティを既定値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.XToCharPosition(System.Int32)">
      <summary>指定された水平座標値に位置する文字のインデックスを取得します。</summary>
      <param name="xPosition">水平座標値を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <returns>水平座標値を取得する文字のインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</returns>
      <remarks>このメソッドは、フィールドの左端を基準とするx座標上の位置を示す<see cref="T:System.Int32" />値を、位置を示す文字値に変換します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Enter">
      <summary>フィールドが入力フォーカスを取得したときに発生します。</summary>
      <remarks>このイベントは、入力フォーカスが <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> に移動したときに発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Leave">
      <summary>フィールドが入力フォーカスを喪失したときに発生します。</summary>
      <remarks>このイベントは、入力フォーカスが <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> から離れたときに発生します。</remarks>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field.Paint">
      <summary>フィールドが再描画されるときに発生します。</summary>
      <remarks>このイベントは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> が更新されたときに発生します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnAddRange(System.Object[])">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素配列を挿入する前に、追加のカスタム処理を実行します。</summary>
      <param name="value">追加される<b><see cref="T:System.Object">Object</see></b>配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnAddRangeComplete(System.Object[])">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素配列を挿入した後に、追加のカスタム処理を実行します。</summary>
      <param name="value">追加された<b><see cref="T:System.Object">Object</see></b>配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnClearComplete">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnInsert(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに新しい要素を挿入する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">挿入位置を表す0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">挿入する項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnInsertComplete(System.Int32,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">挿入位置を表す0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">挿入する項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnRemoveComplete(System.Int32,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">削除される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">削除される項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase" />インスタンスに値を設定する前に、追加のカスタム処理を実行します。</summary>
      <param name="index">更新される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="oldValue">更新前の項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="newValue">指定したインデックスにある要素の新しい値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">更新される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="oldValue">更新前の項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
      <param name="newValue">挿入する項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnValidate(System.Object)">
      <summary>項目が検証されるとき、追加処理を実行します。</summary>
      <param name="value">検証される項目を表す<b><see cref="T:System.Object">Object</see></b></param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldCollection`1.OnValidateNewItems(System.Object,System.Object[])">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="oldItem">項目を設定するときの古い項目を示す<b>object</b>。</param>
      <param name="newItems">新しい項目を示す<b>object</b>の配列。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo">
      <summary>基本フィールドの定義に使用される<b>FieldInfo</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>このクラスは、単一セグメントの表示機能を実装しています。いくつかの入力動作もユーザーに公開されます。これがユーザー向けの最終インタフェースです。フィールドが作成されるとき、１つのセグメントとその値モジュールが作成されます。そして、そのセグメントと値モジュールに対して設定処理が実行されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.BackColor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> オブジェクトの背景色を取得または設定します。</summary>
      <value>フィールドの背景色を示す <see cref="T:System.Drawing.Color" /> 値。<br />既定値は <see cref="P:System.Drawing.Color.Transparent" /> です。</value>
      <remarks>
        <b>BackColor</b> プロパティを使用してコントロールの背景色を変更し、コントロールをフォームの色彩設計に合わせることができます。<para />コントロール内のテキストの色を変更するには、<see cref="P:FieldInfo.ForeColor" /> プロパティを使用します。コントロールの <b>BackColor</b> プロパティを設定するときは、コントロールのテキストが見えなくなるような色を選ばないでください。たとえば、<b>BackColor</b> プロパティと <b>ForeColor</b> プロパティを両方とも <b>Color.Black</b> に設定した場合、コントロール内のテキストは見えなくなります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.Font">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> オブジェクトのフォントを取得または設定します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> オブジェクトのフォントを示す <see cref="T:System.Drawing.Font" /> オブジェクト。</value>
      <remarks>
        <para>
          <b>Font</b>プロパティはアンビエントプロパティです。アンビエントプロパティとは、明示的に設定しない場合に親コントロールから取得されるコントロールプロパティです。たとえば<see cref="T:System.Windows.Forms.Button" />は、デフォルトでは親の<see cref="T:System.Windows.Forms.Form" />と同じ<see cref="P:System.Windows.Forms.Control.BackColor" />を持ちます。</para>
        <para />
        <para>
          <b>Font</b>は不変（つまり、ユーザーがそのプロパティをまったく調整できない）なので、<b>Font</b>プロパティには新しい<b>Font</b>を割り当てることしかできません。ただし、既存のフォントを新しいフォントのベースにすることは可能です。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.ForeColor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> オブジェクトの前景色を取得または設定します。</summary>
      <value>フィールドの前景色を示す <see cref="T:System.Drawing.Color" /> 値。</value>
      <remarks>
        <b>ForeColor</b> プロパティを使用してコントロール内のテキストの色を変更し、フォーム上の他のコントロールのテキストに合わせることができます。また、このプロパティを使用して、無効な値を含む特定のコントロールを強調表示することもできます。<para />コントロールの背景色を変更するには、<see cref="P:FieldInfo.BackColor" /> プロパティを使用します。コントロールの ForeColor プロパティを設定するときは、コントロールのテキストが見えなくなるような色を選ばないでください。たとえば、<b>ForeColor</b> プロパティと <b>BackColor</b> プロパティを両方とも <b>Color.Black</b> に設定した場合、テキストボックス内のテキストは見えなくなります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.Margin">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> オブジェクトの周囲のスペースを取得または設定します。</summary>
      <value>フィールドの間隔を表す<see cref="T:System.Windows.Forms.Padding" />。<br />デフォルト値は"0,0,0,0"です。</value>
      <remarks>このプロパティは、あるフィールドとその隣接フィールドとの間隔を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.Name">
      <summary>オブジェクトの名前を取得または設定します。</summary>
      <value>オブジェクトの名前を示す <see cref="T:System.String" /> 値。<br />既定値は <see cref="F:System.String.Empty" /> です。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.Padding">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> オブジェクト内のパディングを取得または設定します。</summary>
      <value>フィールドの内部スペース特性を表す<see cref="T:System.Windows.Forms.Padding" />。<br />デフォルト値は"0,0,0,0"です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo" /> の入力領域と境界との間隔を決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.FieldInfo.Text">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> のテキストを取得します。</summary>
      <value>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.Field" /> のテキストを示す <see cref="T:System.String" /> 値。<br />既定値は <see cref="F:System.String.Empty" /> です。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType" />コントロールのパターンフィールドを定義する<b>MaskEnumerationFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.#ctor(System.String[])">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="items">項目を示す<see cref="T:System.String" />配列。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.AutoConvert">
      <summary>フィールドが自動変換されるかどうかを示す値を取得または設定します。</summary>
      <value>自動変換される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
      <remarks>
        <b>AutoConvert</b>プロパティを<see langword="true" />に設定すると、変換可能なすべての文字が入力マスクに従って自動的に変換されます。たとえば、入力マスクを"A"に設定した場合、小文字を入力すると自動的に大文字に変換されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.AutoDropDown">
      <summary>このフィールドにフォーカスが移動したときに自動的にドロップダウンするかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>年号を選択するドロップダウンを表示します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>年号を選択するドロップダウンを表示しません。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationField" />が入力フォーカスを取得したときにドロップダウンウィンドウを自動的にドロップダウンするかどうかを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.DropDownEnabled">
      <summary>ドロップダウン機能がアクティブかどうかを示す<see langword="bool" />値を取得または設定します。</summary>
      <value>
        <list type="table">
          <listheader>
            <term>値</term>
            <description>説明</description>
          </listheader>
          <item>
            <term>
              <b>True</b>
            </term>
            <description>ドロップダウンを使用します。</description>
          </item>
          <item>
            <term>
              <b>False</b>
            </term>
            <description>ドロップダウンを使用しません。</description>
          </item>
        </list> 既定値は<b>False</b>です。</value>
      <remarks>
        <para> フィールドがアクティブになったときにドロップダウンを表示するには、 <b><see cref="P:GrapeCity.Win.Editors.Fields.DateEraField.AutoDropDown">AutoDropDown</see></b> プロパティを <b>True</b>に設定します。 </para>
        <para>
          <b>
            <see cref="P:GrapeCity.Win.Editors.Fields.DateEraField.AutoDropDown">AutoDropDown</see>
          </b> プロパティが <b>False</b>に設定されているときにドロップダウンを表示するには、<b>[ Ctrl + ↓]</b>キーを押します。 </para>
      </remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.Items">
      <summary>フィールドのサポート項目を取得または設定します。</summary>
      <value>項目を示す<see cref="T:System.String" />配列値。</value>
      <remarks>このプロパティは、<see cref="T:System.String" />項目に関するコレクションを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.PromptChar">
      <summary>フィールドに何も入力されていないときに表示するプロンプト文字を取得または設定します。</summary>
      <value>プロンプト文字を表す<b><see cref="T:System.Char">Char</see></b>値。</value>
      <remarks>このプロパティは、フィールドの空のビットへの入力を促すために使用される<see cref="T:System.Char" />を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.SpinIncrement">
      <summary>スピン動作による数値の変化量を取得または設定します。</summary>
      <value>変化量を表す<b><see cref="T:System.Int32">Int32</see></b>値。</value>
      <remarks>値が設定されていないときのデフォルト値は、オーナーの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Increment" />値です。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.Focus">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo" />に入力フォーカスを設定します。</summary>
      <returns>入力フォーカス要求が成功した場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.ValidateItem(System.String)">
      <summary>MaskEnumarationFieldInfoの項目を検証します。</summary>
      <param name="item" />
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskEnumerationFieldInfo.ValidateItems(System.String[])">
      <summary>MaskEnumarationFieldInfoの項目を検証します。</summary>
      <param name="items" />
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMask" />コントロールのフィールドを定義する<b>MaskField</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>これは<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMask" />コントロールのすべてのフィールドの基本クラスです。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldCollection">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskField" />オブジェクトの読み取り専用のコレクションを表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldCollection.AddRange(System.String)">
      <summary>指定した書式文字列から作成された別の<see cref="T:IList&lt;MaskField&gt;" />の内容をコレクションの最後に追加します。</summary>
      <param name="format">書式文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType" />の基本入力フィールドの定義に使用される<b>MaskFieldInfo</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>このクラスは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType" />が受け入れ可能なフィールド型の基本クラスを表します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo.#ctor">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskFieldInfo.PropertyChanged">
      <summary>プロパティが変更されたときにイベントを発生させます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType" />コントロールのパターンフィールドを定義する<b>MaskLiteralFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="literalText">リテラルを示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo.Text">
      <summary>リテラル文字列を取得または設定します。</summary>
      <value>フィールドのリテラルテキストを示す<see cref="T:System.String" />値。<br /> デフォルト値は空白文字です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo" />のテキストを取得します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskLiteralFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMaskCellType" />コントロールのパターンフィールドを定義する<b>MaskPatternFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">パターンを示す<see cref="T:System.String" />値。</param>
      <param name="minLength">最小の長さを示す<see cref="T:System.Int32" />値。</param>
      <param name="maxLength">最大の長さを示す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.AutoConvert">
      <summary>フィールドが自動変換されるかどうかを示す値を取得または設定します。</summary>
      <value>自動変換される場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</value>
      <remarks>
        <b>AutoConvert</b>プロパティを<see langword="true" />に設定すると、変換可能なすべての文字が入力マスクに従って自動的に変換されます。たとえば、入力マスクを"A"に設定した場合、小文字を入力すると自動的に大文字に変換されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.MaxLength">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo" />の最大の長さを取得または設定します。</summary>
      <value>最大の長さを示す<see cref="T:System.Int32" />値。<br /> デフォルト値は<see cref="F:System.UInt16.MaxValue" />です。</value>
      <remarks>このプロパティは、入力文字列の最大の長さを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.MinLength">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo" />の最小の長さを取得または設定します。</summary>
      <value>最小の長さを示す<see cref="T:System.Int32" />値。<br /> デフォルト値は1です。</value>
      <remarks>このプロパティは、入力文字列の最小の長さを決定します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.PasswordChar">
      <summary>パスワード文字を取得または設定します。</summary>
      <value>パスワードの文字を示す<see cref="T:System.Char" />値。<br /> デフォルト値は"\0"です。</value>
      <remarks>
        <b>PasswordChar</b>を使用して、ダイアログボックスにパスワードフィールドを作成できます。任意の半角文字を使用できますが、Windowsベースのアプリケーションではアスタリスク（*）（Chr(42)）を使うのが一般的です。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.Pattern">
      <summary>フィールドのパターンを取得します。</summary>
      <value>パターンを示す<see cref="T:System.String" />値。<br /> デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcMask" />に入力フォーカスがないときの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternField" />のパターンを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.PromptChar">
      <summary>フィールドに何も入力されていないときに表示するプロンプト文字を取得または設定します。</summary>
      <value>プロンプト文字を表す<b><see cref="T:System.Char">Char</see></b>値。</value>
      <remarks>このプロパティは、フィールドの空のビットへの入力を促すために使用される<see cref="T:System.Char" />を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.Text">
      <summary>フィールドのテキストを取得または設定します。</summary>
      <value>フィールドのテキストを示す<b>string</b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.UseSystemPasswordChar">
      <summary>システムパスワード文字を使用するかどうかを示す値を取得または設定します。</summary>
      <value>システムパスワード文字を使用する場合は<see langword="true" />、それ以外の場合は<see langword="false" />。<br /> デフォルト値は<see langword="false" />です。</value>
      <remarks>
        <b>UseSystemPasswordChar</b>プロパティは<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.PasswordChar" />プロパティよりも優先されます。<b>UseSystemPasswordChar</b>が<see langword="true" />に設定されている場合は常にデフォルトのシステムパスワード文字が使用され、<b>PasswordChar</b>に設定された文字は無視されます。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.Focus">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternField" />に入力フォーカスを設定します。</summary>
      <returns>入力フォーカス要求が成功した場合は<see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.MaskPatternFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの一般的な書式の表示フィールドを定義する<b>NumberDecimalGeneralFormatDisplayField</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">パターンを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat" />値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField.Pattern">
      <summary>年号の入力形式を取得または設定します。</summary>
      <value>フィールドのパターンを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat" />列挙体。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat.DBNum1_G" />です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />に入力フォーカスがないときの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField" />の表示パターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />の一般的な書式の表示フィールドの定義に使用される<b>NumberDecimalGeneralFormatDisplayFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayFieldInfo.#ctor(GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">パターンを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat" />値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayFieldInfo.Pattern">
      <summary>年号の入力形式を取得または設定します。</summary>
      <value>フィールドのパターンを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat" />列挙体。<br />デフォルト値は<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.DecimalGeneralFormat.DBNum1_G" />です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />に入力フォーカスがないときの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayField" />の表示パターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの小数部の表示フィールドを定義する<b>NumberDecimalPartDisplayField</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayField.MaxDigits">
      <summary>フィールドの最大桁数を取得または設定します。</summary>
      <value>最大桁数を示す<see cref="T:System.Int32" />値。<br />デフォルト値は28です。</value>
      <remarks>このプロパティは、最大の桁数を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayField.MinDigits">
      <summary>フィールドの最小桁数を取得または設定します。</summary>
      <value>最小桁数を示す<see cref="T:System.Int32" />値。<br />デフォルト値は0です。</value>
      <remarks>このプロパティは、最小の桁数を取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />コントロールの小数部の表示フィールドを定義する<b>NumberDecimalPartDisplayField</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayFieldInfo.MaxDigits">
      <summary>フィールドの最大桁数を取得または設定します。</summary>
      <value>最大桁数を示す<see cref="T:System.Int32" />値。<br />デフォルト値は28です。</value>
      <remarks>このプロパティは、最大の桁数を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartDisplayFieldInfo.MinDigits">
      <summary>フィールドの最小桁数を取得または設定します。</summary>
      <value>最小桁数を示す<see cref="T:System.Int32" />値。<br />デフォルト値は0です。</value>
      <remarks>このプロパティは、最小の桁数を取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの小数部フィールドを定義する<b>NumberDecimalPartField</b>クラスを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.MaxDigits">
      <summary>フィールドの任意の桁数を取得または設定します。</summary>
      <value>フィールドの任意の桁数を示す<see cref="T:System.Int32" />値。</value>
      <remarks>このプロパティは、最大の桁数を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.MinDigits">
      <summary>フィールドの必須の桁数を取得または設定します。</summary>
      <value>フィールドの必須の桁数を示す<see cref="T:System.Int32" />値。<br />デフォルト値は0です。</value>
      <remarks>このプロパティは、最小の桁数を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.SpinIncrement">
      <summary>スピン動作による数値の変化量を取得または設定します。</summary>
      <value>変化量を表す<b><see cref="T:System.Int32">Int32</see></b>値。</value>
      <remarks>値が設定されていないときのデフォルト値は、オーナーの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Increment" />値です。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.Value">
      <summary>小数部の値を取得または設定します。</summary>
      <value>小数部を示す<see cref="T:System.Nullable`1" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.SpinDown">
      <summary>スピンダウン動作を実行します。</summary>
      <remarks>このメソッドは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.Value" />を現在の値より小さい次の値に減分します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.SpinDown(System.Int32)">
      <summary>指定したincrementパラメーターを使用してスピンダウンを実行します。</summary>
      <param name="increment">変化量を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <remarks>このメソッドは、指定された変化量に従って、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.Value" />を現在の値より小さい次の値に減分します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.SpinUp">
      <summary>スピンアップ動作を実行します。</summary>
      <remarks>このメソッドは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.Value" />を現在の値より大きい前の値に増分します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.SpinUp(System.Int32)">
      <summary>指定したincrementパラメーターを使用してスピンアップを実行します。</summary>
      <param name="increment">変化量を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <remarks>このメソッドは、指定された変化量に従って、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField.Value" />を現在の値より大きい前の値に増分します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />コントロールの小数部フィールドを定義する<b>NumberDecimalPartFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartFieldInfo.MaxDigits">
      <summary>フィールドの任意の桁数を取得または設定します。</summary>
      <value>フィールドの任意の桁数を示す<see cref="T:System.Int32" />値。</value>
      <remarks>このプロパティは、最大の桁数を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartFieldInfo.MinDigits">
      <summary>フィールドの必須の桁数を取得または設定します。</summary>
      <value>フィールドの必須の桁数を示す<see cref="T:System.Int32" />値。<br />デフォルト値は0です。</value>
      <remarks>このプロパティは、最小の桁数を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartFieldInfo.SpinIncrement">
      <summary>スピン動作による数値の変化量を取得または設定します。</summary>
      <value>変化量を表す<b><see cref="T:System.Int32">Int32</see></b>値。</value>
      <remarks>値が設定されていないときのデフォルト値は、オーナーの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Increment" />値です。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの小数点記号の表示フィールドを定義する<b>NumberDecimalSeparatorDisplayField</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayField.DecimalSeparator">
      <summary>表示用数値の小数点記号として使用する文字を取得または設定します。</summary>
      <value>表示用数値の小数点記号として使用する文字。</value>
      <remarks>このプロパティは、小数点記号を取得します。デフォルト値はシステム情報によって異なります。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />コントロールの小数点記号の表示フィールドを定義する<b>NumberDecimalSeparatorDisplayFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorDisplayFieldInfo.DecimalSeparator">
      <summary>表示用数値の小数点記号として使用する文字を取得または設定します。</summary>
      <value>表示用数値の小数点記号として使用する文字。</value>
      <remarks>このプロパティは、小数点記号を取得します。デフォルト値はシステム情報によって異なります。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの小数点記号フィールドを定義する<b>NumberDecimalSeparatorField</b>クラスを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorField.DecimalSeparator">
      <summary>数値の小数点記号として使用する文字を取得または設定します。</summary>
      <value>数値の小数点記号として使用する文字。<see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />のデフォルト値は'.'です。</value>
      <remarks>このプロパティは、小数点記号を取得します。デフォルト値はシステム情報によって異なります。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />コントロールの小数点記号フィールドを定義する<b>NumberDecimalSeparatorFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorFieldInfo.DecimalSeparator">
      <summary>数値の小数点記号として使用する文字を取得または設定します。</summary>
      <value>数値の小数点記号として使用する文字。<see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />のデフォルト値は'.'です。</value>
      <remarks>このプロパティは、小数点記号を取得します。デフォルト値はシステム情報によって異なります。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの表示フィールドを定義する<b>NumberDisplayField</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldCollection">
      <summary>
        <b>GcNumber</b>コントロールの表示フィールドコレクションを表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldCollection.AddRange(System.String)">
      <summary>指定した書式文字列から作成された別の<see cref="T:IList&lt;NumberDisplayField&gt;" />の内容をコレクションの最後に追加します。</summary>
      <param name="format">書式文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldCollection.AddRange(System.String,System.String,System.String,System.String,System.String)">
      <summary>指定した引数から作成された別の<see cref="T:IList&lt;NumberDisplayField&gt;" />の内容をコレクションの最後に追加します。</summary>
      <param name="pattern">パターンを示す<b>string</b>値。</param>
      <param name="positivePrefix">値が正のときに前に付加する文字列を示す<b>string</b>値。</param>
      <param name="positiveSuffix">値が正のときに後ろに付加する文字列を示す<b>string</b>値。</param>
      <param name="negativePrefix">値が負のときに前に付加する文字列を示す<b>string</b>値。</param>
      <param name="negativeSuffix">値が負のときに後ろに付加する文字列を示す<b>string</b>値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />の表示フィールドの定義に使用される<b>NumberDisplayFieldInfo</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールのフィールドを定義する<b>NumberField</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>これは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールのすべてのフィールドの基本クラスです。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberField.Name">
      <summary>オブジェクトの名前を取得または設定します。</summary>
      <value>オブジェクトの名前を示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />の基本入力フィールドの定義に使用される<b>NumberFieldInfo</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>このクラスは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />が受け入れ可能なフィールド型の基本クラスを表します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFieldInfo.Name">
      <summary>オブジェクトの名前を取得または設定します。</summary>
      <value>オブジェクトの名前を示す <see cref="T:System.String" /> 値。<br />既定値は <see cref="F:System.String.Empty" /> です。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields" />オブジェクトの読み取り専用のコレクションを表します。このクラスは継承できません。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.Count">
      <summary>
        <see cref="T:System.Collections.ICollection" />に含まれる要素の数を取得します。</summary>
      <value>項目数を表す<b><see cref="T:System.Int32">Int32</see></b>値。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.DecimalPart">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの小数部フィールドを取得します。</summary>
      <value>小数部フィールドを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalPartField" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.DecimalSeparator">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの小数点記号フィールドを取得します。</summary>
      <value>小数点記号フィールドを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalSeparatorField" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.IntegerPart">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの整数部フィールドを取得します。</summary>
      <value>整数部フィールドを示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.Item(System.Int32)">
      <summary>指定したインデックスにある<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberField" />を取得します。</summary>
      <value>このコレクションの指定したインデックスにある<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberField" />。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.SignPrefix">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの符号接頭辞フィールドを取得します。</summary>
      <value>符号接頭辞を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignField" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.SignSuffix">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの符号接尾辞フィールドを取得します。</summary>
      <value>符号接尾辞を示す<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignField" />オブジェクト。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.GetEnumerator">
      <summary>コレクションを列挙する列挙子を返します。</summary>
      <returns>コレクションの列挙に使用できる<see cref="T:System.Collections.IEnumerator" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.SetFields(System.String)">
      <summary>書式を解析して各フィールドの設定を同期します。</summary>
      <param name="format">フィールドの書式を示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberFields.SetFields(System.String,System.String,System.String,System.String,System.String)">
      <summary>パターンを解析して各フィールドの設定を同期します。</summary>
      <param name="pattern">フィールドのパターンを示す<see cref="T:System.String" />値。</param>
      <param name="positivePrefix">正の接頭辞の文字列を示す<see cref="T:System.String" />値。</param>
      <param name="positiveSuffix">正の接尾辞の文字列を示す<see cref="T:System.String" />値。</param>
      <param name="negativePrefix">負の接頭辞の文字列を示す<see cref="T:System.String" />値。</param>
      <param name="negativeSuffix">負の接尾辞の文字列を示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの整数部の表示フィールドを定義する<b>NumberIntegerPartDisplayField</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayField.GroupSeparator">
      <summary>フィールドの桁区切り記号を取得または設定します。</summary>
      <value>桁区切り記号を示す<see cref="T:System.Char" />値。</value>
      <remarks>このプロパティは、桁区切り記号を取得します。デフォルト値はシステム情報によって異なります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayField.GroupSizes">
      <summary>数値の小数点から左に向かう各桁グループの桁数を取得または設定します。</summary>
      <value>数値の小数点から左に向かう各桁グループの桁数。InvariantInfoのデフォルト値は、3に設定された1つの要素のみを含む1次元配列です。</value>
      <remarks>1次元配列の各要素は1～9の整数にする必要があります。最後の要素は0にすることができます。配列の最初の要素は、NumberDecimalSeparatorのすぐ左にある最下位桁グループの桁数を定義します。それ以降の各要素は、前の要素の1つ左の桁グループを参照します。配列の最後の要素が0でない場合、残りの桁は配列の最後の要素に基づいてグループ化されます。最後の要素が0の場合、残りの要素はグループ化されません。<note> たとえば、配列の要素が{3, 4, 5}である場合は、"55,55555,55555,55555,4444,333.00"のように桁がグループ化されます。配列の要素が{3, 4, 0}である場合は、"55555555555555555,4444,333.00"のように桁がグループ化されます。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayField.MinDigits">
      <summary>フィールドの最小桁数を取得または設定します。</summary>
      <value>最小桁数を示す<see cref="T:System.Int32" />値。<br />デフォルト値は1です。</value>
      <remarks>このプロパティは、最小の桁数を取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />コントロールの整数部の表示フィールドを定義する<b>NumberIntegerPartDisplayFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayFieldInfo.GroupSeparator">
      <summary>フィールドの桁区切り記号を取得または設定します。</summary>
      <value>桁区切り記号を示す<see cref="T:System.Char" />値。</value>
      <remarks>このプロパティは、桁区切り記号を取得します。デフォルト値はシステム情報によって異なります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayFieldInfo.GroupSizes">
      <summary>数値の小数点から左に向かう各桁グループの桁数を取得または設定します。</summary>
      <value>数値の小数点から左に向かう各桁グループの桁数。InvariantInfoのデフォルト値は、3に設定された1つの要素のみを含む1次元配列です。</value>
      <remarks>1次元配列の各要素は1～9の整数にする必要があります。最後の要素は0にすることができます。配列の最初の要素は、NumberDecimalSeparatorのすぐ左にある最下位桁グループの桁数を定義します。それ以降の各要素は、前の要素の1つ左の桁グループを参照します。配列の最後の要素が0でない場合、残りの桁は配列の最後の要素に基づいてグループ化されます。最後の要素が0の場合、残りの要素はグループ化されません。<note> たとえば、配列の要素が{3, 4, 5}である場合は、"55,55555,55555,55555,4444,333.00"のように桁がグループ化されます。配列の要素が{3, 4, 0}である場合は、"55555555555555555,4444,333.00"のように桁がグループ化されます。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartDisplayFieldInfo.MinDigits">
      <summary>フィールドの最小桁数を取得または設定します。</summary>
      <value>最小桁数を示す<see cref="T:System.Int32" />値。<br />デフォルト値は1です。</value>
      <remarks>このプロパティは、最小の桁数を取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの整数部フィールドを定義する<b>NumberIntegerPartField</b>クラスを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.GroupSeparator">
      <summary>数値の小数点から左に向かう桁グループを区切る文字を取得または設定します。</summary>
      <value>数値の小数点から左に向かう桁グループを区切る文字。InvariantInfoのデフォルト値は","です。</value>
      <remarks>このプロパティの初期値は、コントロールパネルの［地域と言語のオプション］（または、［地域のオプション］または［地域の設定］）の設定から取得されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.GroupSizes">
      <summary>数値の小数点から左に向かう各桁グループの桁数を取得または設定します。</summary>
      <value>数値の小数点から左に向かう各桁グループの桁数。InvariantInfoのデフォルト値は、3に設定された1つの要素のみを含む1次元配列です。</value>
      <remarks>1次元配列の各要素は1～9の整数にする必要があります。最後の要素は0にすることができます。配列の最初の要素は、NumberDecimalSeparatorのすぐ左にある最下位桁グループの桁数を定義します。それ以降の各要素は、前の要素の1つ左の桁グループを参照します。配列の最後の要素が0でない場合、残りの桁は配列の最後の要素に基づいてグループ化されます。最後の要素が0の場合、残りの要素はグループ化されません。<note> たとえば、配列の要素が{3, 4, 5}である場合は、"55,55555,55555,55555,4444,333.00"のように桁がグループ化されます。配列の要素が{3, 4, 0}である場合は、"55555555555555555,4444,333.00"のように桁がグループ化されます。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.MaxDigits">
      <summary>フィールドの任意の桁数を取得または設定します。</summary>
      <value>フィールドの任意の桁数を示す<see cref="T:System.Int32" />値。</value>
      <remarks>このプロパティは、最大の桁数を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.MinDigits">
      <summary>フィールドの必須の桁数を取得または設定します。</summary>
      <value>フィールドの必須の桁数を示す<see cref="T:System.Int32" />値。<br />デフォルト値は0です。</value>
      <remarks>このプロパティは、最小の桁数を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.SpinIncrement">
      <summary>フィールドのスピンの増分量を取得または設定します。</summary>
      <value>変化量を表す<b><see cref="T:System.Int32">Int32</see></b>値。</value>
      <remarks>値が設定されていないときのデフォルト値は、オーナーの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Increment" />値です。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.Value">
      <summary>整数部の値を取得または設定します。</summary>
      <value>整数部の値を示すnull許容の<b>decimal</b>値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.SpinDown">
      <summary>スピンダウン動作を実行します。</summary>
      <remarks>このメソッドは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.Value" />を現在の値より小さい次の値に減分します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.SpinDown(System.Int32)">
      <summary>指定したincrementパラメーターを使用してスピンダウンを実行します。</summary>
      <param name="increment">変化量を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <remarks>このメソッドは、指定された変化量に従って、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.Value" />を現在の値より小さい次の値に減分します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.SpinUp">
      <summary>スピンアップ動作を実行します。</summary>
      <remarks>このメソッドは、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.Value" />を現在の値より大きい前の値に増分します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.SpinUp(System.Int32)">
      <summary>指定したincrementパラメーターを使用してスピンアップを実行します。</summary>
      <param name="increment">変化量を表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <remarks>このメソッドは、指定された変化量に従って、<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartField.Value" />を現在の値より大きい前の値に増分します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />コントロールの整数部フィールドを定義する<b>NumberIntegerPartFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartFieldInfo.GroupSeparator">
      <summary>数値の小数点から左に向かう桁グループを区切る文字を取得または設定します。</summary>
      <value>数値の小数点から左に向かう桁グループを区切る文字。InvariantInfoのデフォルト値は","です。</value>
      <remarks>このプロパティの初期値は、コントロールパネルの［地域と言語のオプション］（または、［地域のオプション］または［地域の設定］）の設定から取得されます。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartFieldInfo.GroupSizes">
      <summary>数値の小数点から左に向かう各桁グループの桁数を取得または設定します。</summary>
      <value>数値の小数点から左に向かう各桁グループの桁数。InvariantInfoのデフォルト値は、3に設定された1つの要素のみを含む1次元配列です。</value>
      <remarks>1次元配列の各要素は1～9の整数にする必要があります。最後の要素は0にすることができます。配列の最初の要素は、NumberDecimalSeparatorのすぐ左にある最下位桁グループの桁数を定義します。それ以降の各要素は、前の要素の1つ左の桁グループを参照します。配列の最後の要素が0でない場合、残りの桁は配列の最後の要素に基づいてグループ化されます。最後の要素が0の場合、残りの要素はグループ化されません。<note> たとえば、配列の要素が{3, 4, 5}である場合は、"55,55555,55555,55555,4444,333.00"のように桁がグループ化されます。配列の要素が{3, 4, 0}である場合は、"55555555555555555,4444,333.00"のように桁がグループ化されます。 </note></remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartFieldInfo.MaxDigits">
      <summary>フィールドの任意の桁数を取得または設定します。</summary>
      <value>フィールドの任意の桁数を示す<see cref="T:System.Int32" />値。</value>
      <remarks>このプロパティは、最大の桁数を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartFieldInfo.MinDigits">
      <summary>フィールドの必須の桁数を取得または設定します。</summary>
      <value>フィールドの必須の桁数を示す<see cref="T:System.Int32" />値。<br />デフォルト値は0です。</value>
      <remarks>このプロパティは、最小の桁数を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberIntegerPartFieldInfo.SpinIncrement">
      <summary>フィールドのスピンの増分量を取得または設定します。</summary>
      <value>変化量を表す<b><see cref="T:System.Int32">Int32</see></b>値。</value>
      <remarks>値が設定されていないときのデフォルト値は、オーナーの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Increment" />値です。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールのリテラルの表示フィールドを定義する<b>NumberLiteralDisplayField</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="literalText">リテラル文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField.Text">
      <summary>リテラル文字列を取得または設定します。</summary>
      <value>フィールドのリテラルテキストを示す<see cref="T:System.String" />値。<br />デフォルト値は空白文字です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField" />のテキストを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />のリテラル表示フィールドの定義に使用される<b>NumberLiteralDisplayFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayFieldInfo.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="literalText">リテラル表示フィールドのリテラルテキストを示す <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayFieldInfo.Text">
      <summary>リテラル文字列を取得または設定します。</summary>
      <value>表示フィールドのリテラルテキストを示す <see cref="T:System.String" /> 値。<br />既定値はスペース文字です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberLiteralDisplayField" />のテキストを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの金額パターンの表示フィールドを定義する<b>NumberMoneyPatternDisplayField</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">金額パターンを解析するためのパターンを示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField.DecimalSeparator">
      <summary>フィールドの小数点記号を取得または設定します。</summary>
      <value>小数点記号を示す<see cref="T:System.Char" />値。</value>
      <remarks>このプロパティは、小数点記号を取得します。デフォルト値はシステム情報によって異なります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField.GroupSeparator">
      <summary>フィールドの桁区切り記号を取得または設定します。</summary>
      <value>桁区切り記号を示す<see cref="T:System.Char" />値。</value>
      <remarks>このプロパティは、桁区切り記号を取得します。デフォルト値はシステム情報によって異なります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField.Pattern">
      <summary>年号の入力形式を取得または設定します。</summary>
      <value>フィールドのパターンを示す<see cref="T:System.String" />値。<br />デフォルト値は###[####:万]です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />に入力フォーカスがないときの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField" />の表示パターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />の金額パターンの表示フィールドの定義に使用される<b>NumberMoneyPatternDisplayFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern">金額パターンを解析するためのパターンを示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo.DecimalSeparator">
      <summary>フィールドの小数点記号を取得または設定します。</summary>
      <value>小数点記号を示す<see cref="T:System.Char" />値。</value>
      <remarks>このプロパティは、小数点記号を取得します。デフォルト値はシステム情報によって異なります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo.GroupSeparator">
      <summary>フィールドの桁区切り記号を取得または設定します。</summary>
      <value>桁区切り記号を示す<see cref="T:System.Char" />値。</value>
      <remarks>このプロパティは、桁区切り記号を取得します。デフォルト値はシステム情報によって異なります。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayFieldInfo.Pattern">
      <summary>年号の入力形式を取得または設定します。</summary>
      <value>フィールドのパターンを示す<see cref="T:System.String" />値。<br />デフォルト値は###[####:万]です。</value>
      <remarks>このプロパティは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />に入力フォーカスがないときの<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberMoneyPatternDisplayField" />の表示パターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの符号の表示フィールドを定義する<b>NumberSignDisplayField</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="positivePattern">正のパターンを示す<see cref="T:System.String" />値。</param>
      <param name="negativePattern">負のパターンを示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField.NegativePattern">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField" />の負のパターンを取得または設定します。</summary>
      <value>負のパターンを示す<see cref="T:System.String" />値。</value>
      <remarks>このプロパティは、値が負のときのパターンを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField.PositivePattern">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField" />の正のパターンを取得または設定します。</summary>
      <value>正のパターンを示す<see cref="T:System.String" />値。<br />デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>このプロパティは、値が正のときのパターンを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField.SignState">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField" />の符号の状態を取得します。</summary>
      <value>符号の状態を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField.SignState" />列挙体。</value>
      <remarks>
        <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.None" />は、現在の値が<see langword="null" />であるために符号を表示しないことを意味します。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.Positive" />は、値の状態が正であることを意味します。この場合は通常、正符号を表示します。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.Negative" />は、値の状態が負であることを意味します。この場合は通常、負符号を表示します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />コントロールの符号の表示フィールドを定義する<b>NumberSignDisplayFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayFieldInfo.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="positivePattern">正のパターンを示す<b>string</b>値。</param>
      <param name="negativePattern">負のパターンを示す<b>string</b>値。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayFieldInfo.NegativePattern">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField" />の負のパターンを取得または設定します。</summary>
      <value>負のパターンを示す<see cref="T:System.String" />値。</value>
      <remarks>このプロパティは、値が負のときのパターンを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayFieldInfo.PositivePattern">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignDisplayField" />の正のパターンを取得または設定します。</summary>
      <value>正のパターンを示す<see cref="T:System.String" />値。<br />デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>このプロパティは、値が正のときのパターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールの符号フィールドを定義する<b>NumberSignField</b>クラスを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignField.NegativePattern">
      <summary>フィールドの負のパターンを取得または設定します。</summary>
      <value>負のパターンを示す<see cref="T:System.String" />値。</value>
      <remarks>このプロパティは、値が負のときのパターンを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignField.PositivePattern">
      <summary>フィールドの正のパターンを取得または設定します。</summary>
      <value>正のパターンを示す<see cref="T:System.String" />値。</value>
      <remarks>このプロパティは、値が正のときのパターンを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignField.SignState">
      <summary>フィールドの符号状態を取得します。</summary>
      <value>符号を示す<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignField.SignState" />列挙値。</value>
      <remarks>
        <see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.None" />は、現在の値が<see langword="null" />であるために符号を表示しないことを意味します。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.Positive" />は、値の状態が正であることを意味します。この場合は通常、正符号を表示します。<see cref="F:GrapeCity.Win.Spread.InputMan.CellType.SignState.Negative" />は、値の状態が負であることを意味します。この場合は通常、負符号を表示します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />コントロールの符号フィールドを定義する<b>NumberSignFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignFieldInfo.NegativePattern">
      <summary>フィールドの負のパターンを取得または設定します。</summary>
      <value>負のパターンを示す<see cref="T:System.String" />値。</value>
      <remarks>このプロパティは、値が負のときのパターンを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSignFieldInfo.PositivePattern">
      <summary>フィールドの正のパターンを取得または設定します。</summary>
      <value>正のパターンを示す<see cref="T:System.String" />値。</value>
      <remarks>このプロパティは、値が正のときのパターンを取得します。</remarks>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSystemFormatDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumber" />コントロールのパーセント表示フィールドを定義する<b>NumberSystemFormatDisplayField</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSystemFormatDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSystemFormatDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSystemFormatDisplayField.Pattern">
      <summary>年号の入力形式を取得または設定します。</summary>
      <value>数値の書式設定に使用されるパターンを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSystemFormatDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcNumberCellType" />のシステム書式表示フィールドの定義に使用される<b>NumberSystemFormatDisplayFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSystemFormatDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberDecimalGeneralFormatDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.NumberSystemFormatDisplayFieldInfo.Pattern">
      <summary>年号の入力形式を取得または設定します。</summary>
      <value>数値の書式設定に使用されるパターンを示す<see cref="T:System.String" />値。</value>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールの符号フィールドを表示する<b>TimeSpanDayDisplayFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayDisplayFieldInfo.#ctor(System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayField" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="digits">桁数を示す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールの符号フィールドを定義する<b>TimeSpanDayFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayFieldInfo.#ctor(System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayField" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="digits">桁数を示す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールの小数フィールドを表示する<b>TimeSpanDecimalDisplayFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalDisplayFieldInfo.#ctor(System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="digits">桁数を示す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールの小数フィールドを定義する<b>TimeSpanDecimalFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalFieldInfo.#ctor(System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="digits">桁数を示す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDecimalFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" />コントロールの表示フィールドを定義する<b>TimeSpanDisplayField</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldCollection">
      <summary>
        <b>GcTimeSpan</b>コントロールの表示フィールドコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldCollection.AddRange(System.String)">
      <summary>指定した書式文字列から作成された別の<see cref="T:IList&lt;TimeSpanDisplayField&gt;" />の内容をコレクションの最後に追加します。</summary>
      <param name="format">書式文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldCollection.AddRange(System.String,System.Int32,System.Char,System.String,System.String,System.String,System.String)">
      <summary>指定した引数から作成された別の<see cref="T:IList&lt;TimeSpanDisplayField&gt;" />の内容をコレクションの最後に追加します。</summary>
      <param name="pattern">書式のパターン文字列を示す<b>string</b>値。</param>
      <param name="decimalPlaces">GcTimeSpanコントロールに表示する小数点以下の桁数を示す<b>int</b>値。</param>
      <param name="decimalPoint">小数点を表す文字を示す<b>char</b>値。</param>
      <param name="positivePrefix">値が正のときに前に付加する文字列を示す<b>string</b>値。</param>
      <param name="positiveSuffix">値が正のときに後ろに付加する文字列を示す<b>string</b>値。</param>
      <param name="negativePrefix">値が負のときに前に付加する文字列を示す<b>string</b>値。</param>
      <param name="negativeSuffix">値が負のときに後ろに付加する文字列を示す<b>string</b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldCollection.OnValidateNewItems(System.Object,System.Object[])">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="oldItem">項目を設定するときの古い項目を示す<b>object</b>。</param>
      <param name="newItems">新しい項目を示す<b>object</b>の配列。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールの表示フィールドを定義する<b>TimeSpanDisplayFieldInfo</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>このクラスは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />が受け入れ可能なフィールド型の基本クラスを表します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldInfo.#ctor">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanDisplayFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanField">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" />コントロールのフィールドを定義する<b>TimeSpanField</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>このクラスは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" />コントロールが受け入れ可能な基本フィールドを表します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanField.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanField" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldCollection">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanField" />オブジェクトの読み取り専用のコレクションを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldCollection.AddRange(System.String)">
      <summary>指定した書式文字列から作成された別の<see cref="T:IList&lt;TimeSpanField&gt;" />の内容をコレクションの最後に追加します。</summary>
      <param name="format">書式文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldCollection.AddRange(System.String,System.Int32,System.Char,System.String,System.String,System.String,System.String)">
      <summary>指定した引数から作成された別の<see cref="T:IList&lt;TimeSpanField&gt;" />の内容をコレクションの最後に追加します。</summary>
      <param name="pattern">書式のパターン文字列を示す<see cref="T:System.String" />値。</param>
      <param name="decimalPlaces">
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpan" />コントロールに表示する小数点以下の桁数を示す<see cref="T:System.Int32" />値。</param>
      <param name="decimalPoint">小数点を表す文字を示す<b>char</b>値。</param>
      <param name="positivePrefix">値が正のときに前に付加する文字列を示す<see cref="T:System.String" />値。</param>
      <param name="positiveSuffix">値が正のときに後ろに付加する文字列を示す<see cref="T:System.String" />値。</param>
      <param name="negativePrefix">値が正のときに前に付加する文字列を示す<see cref="T:System.String" />値。</param>
      <param name="negativeSuffix">値が正のときに後ろに付加する文字列を示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="index">削除される項目の、コレクション内における0から始まるインデックスを表す<b><see cref="T:System.Int32">Int32</see></b>値。</param>
      <param name="value">削除される項目を表す<b><see cref="T:System.Object">Object</see></b>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldCollection.OnValidateNewItems(System.Object,System.Object[])">
      <summary>（内部仕様のため、アプリケーションによる使用は想定されていません。）</summary>
      <param name="oldItem">項目を設定するときの古い項目を示す<b>object</b>。</param>
      <param name="newItems">新しい項目を示す<b>object</b>の配列。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />の基本入力フィールドの定義に使用される<b>TimeSpanField</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>このクラスは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />が受け入れ可能なフィールド型の基本クラスを表します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo.#ctor">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo.Deserialize(System.Xml.XmlNodeReader)">
      <summary>オブジェクトを XML からロードします。</summary>
      <param name="r">オブジェクトのロード元の XmlNodeReader。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="E:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanFieldInfo.PropertyChanged">
      <summary>プロパティが変更されたときにイベントを発生させます。</summary>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールの時フィールドを表示する<b>TimeSpanHourDisplayFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourDisplayFieldInfo.#ctor(System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="digits">桁数を示す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールの時フィールドを定義する<b>TimeSpanHourFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourFieldInfo.#ctor(System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="digits">桁数を示す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanHourFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールのフィールドを表示する<b>TimeSpanInputDisplayFieldInfo</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>このクラスは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールが受け入れ可能な基本入力フィールドを表します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputDisplayFieldInfo.#ctor">
      <summary>デフォルトコンストラクター</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputDisplayFieldInfo.Digits">
      <summary>フィールドの桁数を取得または設定します。</summary>
      <value>フィールドの桁数を示す<see cref="T:System.Int32" />値。<br /> デフォルト値は1です。</value>
      <remarks>このプロパティは、ユーザーがフィールドに入力できる文字数を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputDisplayFieldInfo.PromptChar">
      <summary>フィールドに何も入力されていないときに表示するプロンプト文字を取得または設定します。</summary>
      <value>プロンプト文字を表す<b><see cref="T:System.Char">Char</see></b>値。</value>
      <remarks>このプロパティは、フィールドの空のビットへの入力を促すために使用される<see cref="T:System.Char" />を取得します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputDisplayFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールのフィールドを定義する<b>TimeSpanInputFieldInfo</b>クラスを表します。このクラスは<see langword="abstract" />なので、インスタンス化できません。</summary>
      <remarks>このクラスは、<see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールが受け入れ可能な基本入力フィールドを表します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.#ctor">
      <summary>デフォルトコンストラクター</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.Digits">
      <summary>フィールドの桁数を取得または設定します。</summary>
      <value>フィールドの桁数を示す<see cref="T:System.Int32" />値。<br /> デフォルト値は1です。</value>
      <remarks>このプロパティは、ユーザーがフィールドに入力できる文字数を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.PromptChar">
      <summary>フィールドに何も入力されていないときに表示するプロンプト文字を取得または設定します。</summary>
      <value>プロンプト文字を表す<b><see cref="T:System.Char">Char</see></b>値。</value>
      <remarks>このプロパティは、フィールドの空のビットへの入力を促すために使用される<see cref="T:System.Char" />を取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.SpinIncrement">
      <summary>スピン動作による数値の変化量を取得または設定します。</summary>
      <value>変化量を表す<b><see cref="T:System.Int32">Int32</see></b>値。</value>
      <remarks>値が設定されていないときのデフォルト値は、オーナーの<see cref="P:GrapeCity.Win.Spread.InputMan.CellType.Spin.Increment" />値です。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.Value">
      <summary>フィールドの値を取得または設定します。</summary>
      <value>このフィールドの値を示す<see cref="T:System.Int32" />値。</value>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanInputFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールのリテラル表示フィールドを定義する<b>TimeSpanLiteralDisplayFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="literalText">リテラル文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo.Text">
      <summary>リテラル文字列を取得または設定します。</summary>
      <value>フィールドのリテラルテキストを示す<see cref="T:System.String" />値。<br /> デフォルト値は空白文字です。</value>
      <remarks>このプロパティは、フィールドのテキストを取得します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralDisplayFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールのリテラルフィールドを定義する<b>TimeSpanLiteralFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo.#ctor(System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="literalText">リテラル文字列を表す<b><see cref="T:System.String">String</see></b>値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo.Text">
      <summary>リテラル文字列を取得または設定します。</summary>
      <value>フィールドのリテラルテキストを示す<see cref="T:System.String" />値。<br /> デフォルト値は空白文字です。</value>
      <remarks>このプロパティは、フィールドのテキストを取得します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanLiteralFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールの分フィールドを表示する<b>TimeSpanMinuteDisplayFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteDisplayFieldInfo.#ctor(System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="digits">桁数を示す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールの分フィールドを定義する<b>TimeSpanMinuteFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteFieldInfo.#ctor(System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="digits">桁数を示す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanMinuteFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールの秒フィールドを表示する<b>TimeSpanSecondDisplayFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondDisplayFieldInfo.#ctor(System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="digits">桁数を示す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールの秒フィールドを定義する<b>TimeSpanSecondFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondFieldInfo.#ctor(System.Int32)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="digits">桁数を示す<see cref="T:System.Int32" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSecondFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールの符号フィールドを表示する<b>TimeSpanSignDisplayFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="positivePattern">正のパターンを示す<see cref="T:System.String" />値。</param>
      <param name="negativePattern">負のパターンを示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo.NegativePattern">
      <summary>フィールドの負のパターンを取得または設定します。</summary>
      <value>負のパターンを示す<see cref="T:System.String" />値。</value>
      <remarks>このプロパティは、値が負のときのパターンを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo.PositivePattern">
      <summary>フィールドの正のパターンを取得または設定します。</summary>
      <value>正のパターンを示す<see cref="T:System.String" />値。<br />デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>このプロパティは、値が正のときのパターンを取得します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignDisplayFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.GcTimeSpanCellType" />コントロールの符号フィールドを定義する<b>TimeSpanSignFieldInfo</b>クラスを表します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo.#ctor">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo" />クラスの新しいインスタンスを初期化します。</summary>
      <param name="positivePattern">正のパターンを示す<see cref="T:System.String" />値。</param>
      <param name="negativePattern">負のパターンを示す<see cref="T:System.String" />値。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>このクラスの新しいインスタンスを初期化します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo.NegativePattern">
      <summary>フィールドの負のパターンを取得または設定します。</summary>
      <value>負のパターンを示す<see cref="T:System.String" />値。</value>
      <remarks>このプロパティは、値が負のときのパターンを取得します。</remarks>
    </member>
    <member name="P:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo.PositivePattern">
      <summary>フィールドの正のパターンを取得または設定します。</summary>
      <value>正のパターンを示す<see cref="T:System.String" />値。<br />デフォルト値は<see cref="F:System.String.Empty" />です。</value>
      <remarks>このプロパティは、値が正のときのパターンを取得します。</remarks>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>オブジェクトデータを取得します。</summary>
      <param name="info">情報。</param>
      <param name="context">コンテキスト。</param>
    </member>
    <member name="M:GrapeCity.Win.Spread.InputMan.CellType.Fields.TimeSpanSignFieldInfo.Serialize(System.Xml.XmlTextWriter)">
      <summary>オブジェクトを XML に保存します。</summary>
      <param name="w">オブジェクトの保存に使用する XmlTextWriter オブジェクト。</param>
      <returns>成功した場合は true。それ以外の場合は false。</returns>
    </member>
  </members>
</doc>